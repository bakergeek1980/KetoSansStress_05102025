{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _ref;\n    }\n  });\n  exports.formatDecimalParts = formatDecimalParts;\n  function _ref(x) {\n    return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString(\"en\").replace(/,/g, \"\") : x.toString(10);\n  }\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimalParts(1.23) returns [\"123\", 0].\n  function formatDecimalParts(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, Â±Infinity\n    var i,\n      coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\n  }\n});","lineCount":30,"map":[[7,2,1,15,"Object"],[7,8,1,15],[7,9,1,15,"defineProperty"],[7,23,1,15],[7,24,1,15,"exports"],[7,31,1,15],[8,4,1,15,"enumerable"],[8,14,1,15],[9,4,1,15,"get"],[9,7,1,15],[9,18,1,15,"get"],[9,19,1,15],[10,6,1,15],[10,13,1,15,"_ref"],[10,17,1,15],[11,4,1,15],[12,2,1,15],[13,2,10,0,"exports"],[13,9,10,0],[13,10,10,0,"formatDecimalParts"],[13,28,10,0],[13,31,10,0,"formatDecimalParts"],[13,49,10,0],[14,2,1,15],[14,11,1,15,"_ref"],[14,16,1,24,"x"],[14,17,1,25],[14,19,1,27],[15,4,2,2],[15,11,2,9,"Math"],[15,15,2,13],[15,16,2,14,"abs"],[15,19,2,17],[15,20,2,18,"x"],[15,21,2,19],[15,24,2,22,"Math"],[15,28,2,26],[15,29,2,27,"round"],[15,34,2,32],[15,35,2,33,"x"],[15,36,2,34],[15,37,2,35],[15,38,2,36],[15,42,2,40],[15,46,2,44],[15,49,3,8,"x"],[15,50,3,9],[15,51,3,10,"toLocaleString"],[15,65,3,24],[15,66,3,25],[15,70,3,29],[15,71,3,30],[15,72,3,31,"replace"],[15,79,3,38],[15,80,3,39],[15,84,3,43],[15,86,3,45],[15,88,3,47],[15,89,3,48],[15,92,4,8,"x"],[15,93,4,9],[15,94,4,10,"toString"],[15,102,4,18],[15,103,4,19],[15,105,4,21],[15,106,4,22],[16,2,5,0],[18,2,7,0],[19,2,8,0],[20,2,9,0],[21,2,10,7],[21,11,10,16,"formatDecimalParts"],[21,29,10,34,"formatDecimalParts"],[21,30,10,35,"x"],[21,31,10,36],[21,33,10,38,"p"],[21,34,10,39],[21,36,10,41],[22,4,11,2],[22,8,11,6],[22,9,11,7,"i"],[22,10,11,8],[22,13,11,11],[22,14,11,12,"x"],[22,15,11,13],[22,18,11,16,"p"],[22,19,11,17],[22,22,11,20,"x"],[22,23,11,21],[22,24,11,22,"toExponential"],[22,37,11,35],[22,38,11,36,"p"],[22,39,11,37],[22,42,11,40],[22,43,11,41],[22,44,11,42],[22,47,11,45,"x"],[22,48,11,46],[22,49,11,47,"toExponential"],[22,62,11,60],[22,63,11,61],[22,64,11,62],[22,66,11,64,"indexOf"],[22,73,11,71],[22,74,11,72],[22,77,11,75],[22,78,11,76],[22,82,11,80],[22,83,11,81],[22,85,11,83],[22,92,11,90],[22,96,11,94],[22,97,11,95],[22,98,11,96],[23,4,12,2],[23,8,12,6,"i"],[23,9,12,7],[24,6,12,9,"coefficient"],[24,17,12,20],[24,20,12,23,"x"],[24,21,12,24],[24,22,12,25,"slice"],[24,27,12,30],[24,28,12,31],[24,29,12,32],[24,31,12,34,"i"],[24,32,12,35],[24,33,12,36],[26,4,14,2],[27,4,15,2],[28,4,16,2],[28,11,16,9],[28,12,17,4,"coefficient"],[28,23,17,15],[28,24,17,16,"length"],[28,30,17,22],[28,33,17,25],[28,34,17,26],[28,37,17,29,"coefficient"],[28,48,17,40],[28,49,17,41],[28,50,17,42],[28,51,17,43],[28,54,17,46,"coefficient"],[28,65,17,57],[28,66,17,58,"slice"],[28,71,17,63],[28,72,17,64],[28,73,17,65],[28,74,17,66],[28,77,17,69,"coefficient"],[28,88,17,80],[28,90,18,4],[28,91,18,5,"x"],[28,92,18,6],[28,93,18,7,"slice"],[28,98,18,12],[28,99,18,13,"i"],[28,100,18,14],[28,103,18,17],[28,104,18,18],[28,105,18,19],[28,106,19,3],[29,2,20,0],[30,0,20,1],[30,3]],"functionMap":{"names":["<global>","default","formatDecimalParts"],"mappings":"AAA,eC;CDI;OEK;CFU"},"hasCjsExports":false},"type":"js/module"}]}