{"dependencies":[{"name":"./number.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"w4P1FDzGs0ASsf2e4lI982y148w=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _ref;\n    }\n  });\n  var _numberJs = require(_dependencyMap[0], \"./number.js\");\n  var number = _interopDefault(_numberJs);\n  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n  function zero(b) {\n    return function () {\n      return b;\n    };\n  }\n  function one(b) {\n    return function (t) {\n      return b(t) + \"\";\n    };\n  }\n  function _ref(a, b) {\n    var bi = reA.lastIndex = reB.lastIndex = 0,\n      // scan index for next number in b\n      am,\n      // current match in a\n      bm,\n      // current match in b\n      bs,\n      // string preceding current number in b, if any\n      i = -1,\n      // index in s\n      s = [],\n      // string constants and placeholders\n      q = []; // number interpolators\n\n    // Coerce inputs to strings.\n    a = a + \"\", b = b + \"\";\n\n    // Interpolate pairs of numbers in a & b.\n    while ((am = reA.exec(a)) && (bm = reB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        // a string precedes the next number in b\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; // coalesce with previous string\n        else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        // numbers in a & b match\n        if (s[i]) s[i] += bm; // coalesce with previous string\n        else s[++i] = bm;\n      } else {\n        // interpolate non-matching numbers\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: (0, number.default)(am, bm)\n        });\n      }\n      bi = reB.lastIndex;\n    }\n\n    // Add remains of b.\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    // Special optimization for only a single match.\n    // Otherwise, interpolate each of the numbers and rejoin the string.\n    return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n});","lineCount":87,"map":[[12,2,18,15,"Object"],[12,8,18,15],[12,9,18,15,"defineProperty"],[12,23,18,15],[12,24,18,15,"exports"],[12,31,18,15],[13,4,18,15,"enumerable"],[13,14,18,15],[14,4,18,15,"get"],[14,7,18,15],[14,18,18,15,"get"],[14,19,18,15],[15,6,18,15],[15,13,18,15,"_ref"],[15,17,18,15],[16,4,18,15],[17,2,18,15],[18,2,1,0],[18,6,1,0,"_numberJs"],[18,15,1,0],[18,18,1,0,"require"],[18,25,1,0],[18,26,1,0,"_dependencyMap"],[18,40,1,0],[19,2,1,0],[19,6,1,0,"number"],[19,12,1,0],[19,15,1,0,"_interopDefault"],[19,30,1,0],[19,31,1,0,"_numberJs"],[19,40,1,0],[20,2,3,0],[20,6,3,4,"reA"],[20,9,3,7],[20,12,3,10],[20,57,3,55],[21,4,4,4,"reB"],[21,7,4,7],[21,10,4,10],[21,14,4,14,"RegExp"],[21,20,4,20],[21,21,4,21,"reA"],[21,24,4,24],[21,25,4,25,"source"],[21,31,4,31],[21,33,4,33],[21,36,4,36],[21,37,4,37],[22,2,6,0],[22,11,6,9,"zero"],[22,15,6,13,"zero"],[22,16,6,14,"b"],[22,17,6,15],[22,19,6,17],[23,4,7,2],[23,11,7,9],[23,23,7,20],[24,6,8,4],[24,13,8,11,"b"],[24,14,8,12],[25,4,9,2],[25,5,9,3],[26,2,10,0],[27,2,12,0],[27,11,12,9,"one"],[27,14,12,12,"one"],[27,15,12,13,"b"],[27,16,12,14],[27,18,12,16],[28,4,13,2],[28,11,13,9],[28,21,13,18,"t"],[28,22,13,19],[28,24,13,21],[29,6,14,4],[29,13,14,11,"b"],[29,14,14,12],[29,15,14,13,"t"],[29,16,14,14],[29,17,14,15],[29,20,14,18],[29,22,14,20],[30,4,15,2],[30,5,15,3],[31,2,16,0],[32,2,18,15],[32,11,18,15,"_ref"],[32,16,18,24,"a"],[32,17,18,25],[32,19,18,27,"b"],[32,20,18,28],[32,22,18,30],[33,4,19,2],[33,8,19,6,"bi"],[33,10,19,8],[33,13,19,11,"reA"],[33,16,19,14],[33,17,19,15,"lastIndex"],[33,26,19,24],[33,29,19,27,"reB"],[33,32,19,30],[33,33,19,31,"lastIndex"],[33,42,19,40],[33,45,19,43],[33,46,19,44],[34,6,19,46],[35,6,20,6,"am"],[35,8,20,8],[36,6,20,10],[37,6,21,6,"bm"],[37,8,21,8],[38,6,21,10],[39,6,22,6,"bs"],[39,8,22,8],[40,6,22,10],[41,6,23,6,"i"],[41,7,23,7],[41,10,23,10],[41,11,23,11],[41,12,23,12],[42,6,23,14],[43,6,24,6,"s"],[43,7,24,7],[43,10,24,10],[43,12,24,12],[44,6,24,14],[45,6,25,6,"q"],[45,7,25,7],[45,10,25,10],[45,12,25,12],[45,13,25,13],[45,14,25,14],[47,4,27,2],[48,4,28,2,"a"],[48,5,28,3],[48,8,28,6,"a"],[48,9,28,7],[48,12,28,10],[48,14,28,12],[48,16,28,14,"b"],[48,17,28,15],[48,20,28,18,"b"],[48,21,28,19],[48,24,28,22],[48,26,28,24],[50,4,30,2],[51,4,31,2],[51,11,31,9],[51,12,31,10,"am"],[51,14,31,12],[51,17,31,15,"reA"],[51,20,31,18],[51,21,31,19,"exec"],[51,25,31,23],[51,26,31,24,"a"],[51,27,31,25],[51,28,31,26],[51,34,32,10,"bm"],[51,36,32,12],[51,39,32,15,"reB"],[51,42,32,18],[51,43,32,19,"exec"],[51,47,32,23],[51,48,32,24,"b"],[51,49,32,25],[51,50,32,26],[51,51,32,27],[51,53,32,29],[52,6,33,4],[52,10,33,8],[52,11,33,9,"bs"],[52,13,33,11],[52,16,33,14,"bm"],[52,18,33,16],[52,19,33,17,"index"],[52,24,33,22],[52,28,33,26,"bi"],[52,30,33,28],[52,32,33,30],[53,8,33,32],[54,8,34,6,"bs"],[54,10,34,8],[54,13,34,11,"b"],[54,14,34,12],[54,15,34,13,"slice"],[54,20,34,18],[54,21,34,19,"bi"],[54,23,34,21],[54,25,34,23,"bs"],[54,27,34,25],[54,28,34,26],[55,8,35,6],[55,12,35,10,"s"],[55,13,35,11],[55,14,35,12,"i"],[55,15,35,13],[55,16,35,14],[55,18,35,16,"s"],[55,19,35,17],[55,20,35,18,"i"],[55,21,35,19],[55,22,35,20],[55,26,35,24,"bs"],[55,28,35,26],[55,29,35,27],[55,30,35,28],[56,8,35,28],[56,13,36,11,"s"],[56,14,36,12],[56,15,36,13],[56,17,36,15,"i"],[56,18,36,16],[56,19,36,17],[56,22,36,20,"bs"],[56,24,36,22],[57,6,37,4],[58,6,38,4],[58,10,38,8],[58,11,38,9,"am"],[58,13,38,11],[58,16,38,14,"am"],[58,18,38,16],[58,19,38,17],[58,20,38,18],[58,21,38,19],[58,28,38,26,"bm"],[58,30,38,28],[58,33,38,31,"bm"],[58,35,38,33],[58,36,38,34],[58,37,38,35],[58,38,38,36],[58,39,38,37],[58,41,38,39],[59,8,38,41],[60,8,39,6],[60,12,39,10,"s"],[60,13,39,11],[60,14,39,12,"i"],[60,15,39,13],[60,16,39,14],[60,18,39,16,"s"],[60,19,39,17],[60,20,39,18,"i"],[60,21,39,19],[60,22,39,20],[60,26,39,24,"bm"],[60,28,39,26],[60,29,39,27],[60,30,39,28],[61,8,39,28],[61,13,40,11,"s"],[61,14,40,12],[61,15,40,13],[61,17,40,15,"i"],[61,18,40,16],[61,19,40,17],[61,22,40,20,"bm"],[61,24,40,22],[62,6,41,4],[62,7,41,5],[62,13,41,11],[63,8,41,13],[64,8,42,6,"s"],[64,9,42,7],[64,10,42,8],[64,12,42,10,"i"],[64,13,42,11],[64,14,42,12],[64,17,42,15],[64,21,42,19],[65,8,43,6,"q"],[65,9,43,7],[65,10,43,8,"push"],[65,14,43,12],[65,15,43,13],[66,10,43,14,"i"],[66,11,43,15],[66,13,43,17,"i"],[66,14,43,18],[67,10,43,20,"x"],[67,11,43,21],[67,13,43,23],[67,17,43,23,"number"],[67,23,43,29],[67,24,43,29,"default"],[67,31,43,29],[67,33,43,30,"am"],[67,35,43,32],[67,37,43,34,"bm"],[67,39,43,36],[68,8,43,37],[68,9,43,38],[68,10,43,39],[69,6,44,4],[70,6,45,4,"bi"],[70,8,45,6],[70,11,45,9,"reB"],[70,14,45,12],[70,15,45,13,"lastIndex"],[70,24,45,22],[71,4,46,2],[73,4,48,2],[74,4,49,2],[74,8,49,6,"bi"],[74,10,49,8],[74,13,49,11,"b"],[74,14,49,12],[74,15,49,13,"length"],[74,21,49,19],[74,23,49,21],[75,6,50,4,"bs"],[75,8,50,6],[75,11,50,9,"b"],[75,12,50,10],[75,13,50,11,"slice"],[75,18,50,16],[75,19,50,17,"bi"],[75,21,50,19],[75,22,50,20],[76,6,51,4],[76,10,51,8,"s"],[76,11,51,9],[76,12,51,10,"i"],[76,13,51,11],[76,14,51,12],[76,16,51,14,"s"],[76,17,51,15],[76,18,51,16,"i"],[76,19,51,17],[76,20,51,18],[76,24,51,22,"bs"],[76,26,51,24],[76,27,51,25],[76,28,51,26],[77,6,51,26],[77,11,52,9,"s"],[77,12,52,10],[77,13,52,11],[77,15,52,13,"i"],[77,16,52,14],[77,17,52,15],[77,20,52,18,"bs"],[77,22,52,20],[78,4,53,2],[80,4,55,2],[81,4,56,2],[82,4,57,2],[82,11,57,9,"s"],[82,12,57,10],[82,13,57,11,"length"],[82,19,57,17],[82,22,57,20],[82,23,57,21],[82,26,57,25,"q"],[82,27,57,26],[82,28,57,27],[82,29,57,28],[82,30,57,29],[82,33,58,8,"one"],[82,36,58,11],[82,37,58,12,"q"],[82,38,58,13],[82,39,58,14],[82,40,58,15],[82,41,58,16],[82,42,58,17,"x"],[82,43,58,18],[82,44,58,19],[82,47,59,8,"zero"],[82,51,59,12],[82,52,59,13,"b"],[82,53,59,14],[82,54,59,15],[82,58,60,9,"b"],[82,59,60,10],[82,62,60,13,"q"],[82,63,60,14],[82,64,60,15,"length"],[82,70,60,21],[82,72,60,23],[82,82,60,32,"t"],[82,83,60,33],[82,85,60,35],[83,6,61,10],[83,11,61,15],[83,15,61,19,"i"],[83,16,61,20],[83,19,61,23],[83,20,61,24],[83,22,61,26,"o"],[83,23,61,27],[83,25,61,29,"i"],[83,26,61,30],[83,29,61,33,"b"],[83,30,61,34],[83,32,61,36],[83,34,61,38,"i"],[83,35,61,39],[83,37,61,41,"s"],[83,38,61,42],[83,39,61,43],[83,40,61,44,"o"],[83,41,61,45],[83,44,61,48,"q"],[83,45,61,49],[83,46,61,50,"i"],[83,47,61,51],[83,48,61,52],[83,50,61,54,"i"],[83,51,61,55],[83,52,61,56],[83,55,61,59,"o"],[83,56,61,60],[83,57,61,61,"x"],[83,58,61,62],[83,59,61,63,"t"],[83,60,61,64],[83,61,61,65],[84,6,62,10],[84,13,62,17,"s"],[84,14,62,18],[84,15,62,19,"join"],[84,19,62,23],[84,20,62,24],[84,22,62,26],[84,23,62,27],[85,4,63,8],[85,5,63,9],[85,6,63,10],[86,2,64,0],[87,0,64,1],[87,3]],"functionMap":{"names":["<global>","zero","<anonymous>","one","default"],"mappings":"AAA;ACK;SCC;GDE;CDC;AGE;SDC;GCE;CHC;eIE;uBF0C;SEG;CJC"},"hasCjsExports":false},"type":"js/module"}]}