{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.timeInterval = timeInterval;\n  const t0 = new Date(),\n    t1 = new Date();\n  function timeInterval(floori, offseti, count, field) {\n    function interval(date) {\n      return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n    }\n    interval.floor = date => {\n      return floori(date = new Date(+date)), date;\n    };\n    interval.ceil = date => {\n      return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n    };\n    interval.round = date => {\n      const d0 = interval(date),\n        d1 = interval.ceil(date);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n    interval.offset = (date, step) => {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n    interval.range = (start, stop, step) => {\n      const range = [];\n      start = interval.ceil(start);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      let previous;\n      do range.push(previous = new Date(+start)), offseti(start, step), floori(start); while (previous < start && start < stop);\n      return range;\n    };\n    interval.filter = test => {\n      return timeInterval(date => {\n        if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n      }, (date, step) => {\n        if (date >= date) {\n          if (step < 0) while (++step <= 0) {\n            while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n          } else while (--step >= 0) {\n            while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n          }\n        }\n      });\n    };\n    if (count) {\n      interval.count = (start, end) => {\n        t0.setTime(+start), t1.setTime(+end);\n        floori(t0), floori(t1);\n        return Math.floor(count(t0, t1));\n      };\n      interval.every = step => {\n        step = Math.floor(step);\n        return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? d => field(d) % step === 0 : d => interval.count(0, d) % step === 0);\n      };\n    }\n    return interval;\n  }\n});","lineCount":63,"map":[[7,2,3,0,"exports"],[7,9,3,0],[7,10,3,0,"timeInterval"],[7,22,3,0],[7,25,3,0,"timeInterval"],[7,37,3,0],[8,2,1,0],[8,8,1,6,"t0"],[8,10,1,8],[8,13,1,11],[8,17,1,15,"Date"],[8,21,1,19],[8,22,1,18],[8,23,1,19],[9,4,1,21,"t1"],[9,6,1,23],[9,9,1,26],[9,13,1,30,"Date"],[9,17,1,34],[9,18,1,33],[9,19,1,34],[10,2,3,7],[10,11,3,16,"timeInterval"],[10,23,3,28,"timeInterval"],[10,24,3,29,"floori"],[10,30,3,35],[10,32,3,37,"offseti"],[10,39,3,44],[10,41,3,46,"count"],[10,46,3,51],[10,48,3,53,"field"],[10,53,3,58],[10,55,3,60],[11,4,5,2],[11,13,5,11,"interval"],[11,21,5,19,"interval"],[11,22,5,20,"date"],[11,26,5,24],[11,28,5,26],[12,6,6,4],[12,13,6,11,"floori"],[12,19,6,17],[12,20,6,18,"date"],[12,24,6,22],[12,27,6,25,"arguments"],[12,36,6,34],[12,37,6,35,"length"],[12,43,6,41],[12,48,6,46],[12,49,6,47],[12,52,6,50],[12,56,6,54,"Date"],[12,60,6,58],[12,61,6,57],[12,62,6,58],[12,65,6,61],[12,69,6,65,"Date"],[12,73,6,69],[12,74,6,70],[12,75,6,71,"date"],[12,79,6,75],[12,80,6,76],[12,81,6,77],[12,83,6,79,"date"],[12,87,6,83],[13,4,7,2],[14,4,9,2,"interval"],[14,12,9,10],[14,13,9,11,"floor"],[14,18,9,16],[14,21,9,20,"date"],[14,25,9,24],[14,29,9,29],[15,6,10,4],[15,13,10,11,"floori"],[15,19,10,17],[15,20,10,18,"date"],[15,24,10,22],[15,27,10,25],[15,31,10,29,"Date"],[15,35,10,33],[15,36,10,34],[15,37,10,35,"date"],[15,41,10,39],[15,42,10,40],[15,43,10,41],[15,45,10,43,"date"],[15,49,10,47],[16,4,11,2],[16,5,11,3],[17,4,13,2,"interval"],[17,12,13,10],[17,13,13,11,"ceil"],[17,17,13,15],[17,20,13,19,"date"],[17,24,13,23],[17,28,13,28],[18,6,14,4],[18,13,14,11,"floori"],[18,19,14,17],[18,20,14,18,"date"],[18,24,14,22],[18,27,14,25],[18,31,14,29,"Date"],[18,35,14,33],[18,36,14,34,"date"],[18,40,14,38],[18,43,14,41],[18,44,14,42],[18,45,14,43],[18,46,14,44],[18,48,14,46,"offseti"],[18,55,14,53],[18,56,14,54,"date"],[18,60,14,58],[18,62,14,60],[18,63,14,61],[18,64,14,62],[18,66,14,64,"floori"],[18,72,14,70],[18,73,14,71,"date"],[18,77,14,75],[18,78,14,76],[18,80,14,78,"date"],[18,84,14,82],[19,4,15,2],[19,5,15,3],[20,4,17,2,"interval"],[20,12,17,10],[20,13,17,11,"round"],[20,18,17,16],[20,21,17,20,"date"],[20,25,17,24],[20,29,17,29],[21,6,18,4],[21,12,18,10,"d0"],[21,14,18,12],[21,17,18,15,"interval"],[21,25,18,23],[21,26,18,24,"date"],[21,30,18,28],[21,31,18,29],[22,8,18,31,"d1"],[22,10,18,33],[22,13,18,36,"interval"],[22,21,18,44],[22,22,18,45,"ceil"],[22,26,18,49],[22,27,18,50,"date"],[22,31,18,54],[22,32,18,55],[23,6,19,4],[23,13,19,11,"date"],[23,17,19,15],[23,20,19,18,"d0"],[23,22,19,20],[23,25,19,23,"d1"],[23,27,19,25],[23,30,19,28,"date"],[23,34,19,32],[23,37,19,35,"d0"],[23,39,19,37],[23,42,19,40,"d1"],[23,44,19,42],[24,4,20,2],[24,5,20,3],[25,4,22,2,"interval"],[25,12,22,10],[25,13,22,11,"offset"],[25,19,22,17],[25,22,22,20],[25,23,22,21,"date"],[25,27,22,25],[25,29,22,27,"step"],[25,33,22,31],[25,38,22,36],[26,6,23,4],[26,13,23,11,"offseti"],[26,20,23,18],[26,21,23,19,"date"],[26,25,23,23],[26,28,23,26],[26,32,23,30,"Date"],[26,36,23,34],[26,37,23,35],[26,38,23,36,"date"],[26,42,23,40],[26,43,23,41],[26,45,23,43,"step"],[26,49,23,47],[26,53,23,51],[26,57,23,55],[26,60,23,58],[26,61,23,59],[26,64,23,62,"Math"],[26,68,23,66],[26,69,23,67,"floor"],[26,74,23,72],[26,75,23,73,"step"],[26,79,23,77],[26,80,23,78],[26,81,23,79],[26,83,23,81,"date"],[26,87,23,85],[27,4,24,2],[27,5,24,3],[28,4,26,2,"interval"],[28,12,26,10],[28,13,26,11,"range"],[28,18,26,16],[28,21,26,19],[28,22,26,20,"start"],[28,27,26,25],[28,29,26,27,"stop"],[28,33,26,31],[28,35,26,33,"step"],[28,39,26,37],[28,44,26,42],[29,6,27,4],[29,12,27,10,"range"],[29,17,27,15],[29,20,27,18],[29,22,27,20],[30,6,28,4,"start"],[30,11,28,9],[30,14,28,12,"interval"],[30,22,28,20],[30,23,28,21,"ceil"],[30,27,28,25],[30,28,28,26,"start"],[30,33,28,31],[30,34,28,32],[31,6,29,4,"step"],[31,10,29,8],[31,13,29,11,"step"],[31,17,29,15],[31,21,29,19],[31,25,29,23],[31,28,29,26],[31,29,29,27],[31,32,29,30,"Math"],[31,36,29,34],[31,37,29,35,"floor"],[31,42,29,40],[31,43,29,41,"step"],[31,47,29,45],[31,48,29,46],[32,6,30,4],[32,10,30,8],[32,12,30,10,"start"],[32,17,30,15],[32,20,30,18,"stop"],[32,24,30,22],[32,25,30,23],[32,29,30,27],[32,31,30,29,"step"],[32,35,30,33],[32,38,30,36],[32,39,30,37],[32,40,30,38],[32,42,30,40],[32,49,30,47,"range"],[32,54,30,52],[32,55,30,53],[32,56,30,54],[33,6,31,4],[33,10,31,8,"previous"],[33,18,31,16],[34,6,32,4],[34,9,32,7,"range"],[34,14,32,12],[34,15,32,13,"push"],[34,19,32,17],[34,20,32,18,"previous"],[34,28,32,26],[34,31,32,29],[34,35,32,33,"Date"],[34,39,32,37],[34,40,32,38],[34,41,32,39,"start"],[34,46,32,44],[34,47,32,45],[34,48,32,46],[34,50,32,48,"offseti"],[34,57,32,55],[34,58,32,56,"start"],[34,63,32,61],[34,65,32,63,"step"],[34,69,32,67],[34,70,32,68],[34,72,32,70,"floori"],[34,78,32,76],[34,79,32,77,"start"],[34,84,32,82],[34,85,32,83],[34,86,32,84],[34,94,33,11,"previous"],[34,102,33,19],[34,105,33,22,"start"],[34,110,33,27],[34,114,33,31,"start"],[34,119,33,36],[34,122,33,39,"stop"],[34,126,33,43],[35,6,34,4],[35,13,34,11,"range"],[35,18,34,16],[36,4,35,2],[36,5,35,3],[37,4,37,2,"interval"],[37,12,37,10],[37,13,37,11,"filter"],[37,19,37,17],[37,22,37,21,"test"],[37,26,37,25],[37,30,37,30],[38,6,38,4],[38,13,38,11,"timeInterval"],[38,25,38,23],[38,26,38,25,"date"],[38,30,38,29],[38,34,38,34],[39,8,39,6],[39,12,39,10,"date"],[39,16,39,14],[39,20,39,18,"date"],[39,24,39,22],[39,26,39,24],[39,33,39,31,"floori"],[39,39,39,37],[39,40,39,38,"date"],[39,44,39,42],[39,45,39,43],[39,47,39,45],[39,48,39,46,"test"],[39,52,39,50],[39,53,39,51,"date"],[39,57,39,55],[39,58,39,56],[39,60,39,58,"date"],[39,64,39,62],[39,65,39,63,"setTime"],[39,72,39,70],[39,73,39,71,"date"],[39,77,39,75],[39,80,39,78],[39,81,39,79],[39,82,39,80],[40,6,40,4],[40,7,40,5],[40,9,40,7],[40,10,40,8,"date"],[40,14,40,12],[40,16,40,14,"step"],[40,20,40,18],[40,25,40,23],[41,8,41,6],[41,12,41,10,"date"],[41,16,41,14],[41,20,41,18,"date"],[41,24,41,22],[41,26,41,24],[42,10,42,8],[42,14,42,12,"step"],[42,18,42,16],[42,21,42,19],[42,22,42,20],[42,24,42,22],[42,31,42,29],[42,33,42,31,"step"],[42,37,42,35],[42,41,42,39],[42,42,42,40],[42,44,42,42],[43,12,43,10],[43,19,43,17,"offseti"],[43,26,43,24],[43,27,43,25,"date"],[43,31,43,29],[43,33,43,31],[43,34,43,32],[43,35,43,33],[43,36,43,34],[43,38,43,36],[43,39,43,37,"test"],[43,43,43,41],[43,44,43,42,"date"],[43,48,43,46],[43,49,43,47],[43,51,43,49],[43,52,43,50],[43,53,43,51],[43,54,43,52],[44,10,44,8],[44,11,44,9],[44,17,44,15],[44,24,44,22],[44,26,44,24,"step"],[44,30,44,28],[44,34,44,32],[44,35,44,33],[44,37,44,35],[45,12,45,10],[45,19,45,17,"offseti"],[45,26,45,24],[45,27,45,25,"date"],[45,31,45,29],[45,33,45,31],[45,34,45,32],[45,35,45,33],[45,36,45,34],[45,38,45,36],[45,39,45,37,"test"],[45,43,45,41],[45,44,45,42,"date"],[45,48,45,46],[45,49,45,47],[45,51,45,49],[45,52,45,50],[45,53,45,51],[45,54,45,52],[46,10,46,8],[47,8,47,6],[48,6,48,4],[48,7,48,5],[48,8,48,6],[49,4,49,2],[49,5,49,3],[50,4,51,2],[50,8,51,6,"count"],[50,13,51,11],[50,15,51,13],[51,6,52,4,"interval"],[51,14,52,12],[51,15,52,13,"count"],[51,20,52,18],[51,23,52,21],[51,24,52,22,"start"],[51,29,52,27],[51,31,52,29,"end"],[51,34,52,32],[51,39,52,37],[52,8,53,6,"t0"],[52,10,53,8],[52,11,53,9,"setTime"],[52,18,53,16],[52,19,53,17],[52,20,53,18,"start"],[52,25,53,23],[52,26,53,24],[52,28,53,26,"t1"],[52,30,53,28],[52,31,53,29,"setTime"],[52,38,53,36],[52,39,53,37],[52,40,53,38,"end"],[52,43,53,41],[52,44,53,42],[53,8,54,6,"floori"],[53,14,54,12],[53,15,54,13,"t0"],[53,17,54,15],[53,18,54,16],[53,20,54,18,"floori"],[53,26,54,24],[53,27,54,25,"t1"],[53,29,54,27],[53,30,54,28],[54,8,55,6],[54,15,55,13,"Math"],[54,19,55,17],[54,20,55,18,"floor"],[54,25,55,23],[54,26,55,24,"count"],[54,31,55,29],[54,32,55,30,"t0"],[54,34,55,32],[54,36,55,34,"t1"],[54,38,55,36],[54,39,55,37],[54,40,55,38],[55,6,56,4],[55,7,56,5],[56,6,58,4,"interval"],[56,14,58,12],[56,15,58,13,"every"],[56,20,58,18],[56,23,58,22,"step"],[56,27,58,26],[56,31,58,31],[57,8,59,6,"step"],[57,12,59,10],[57,15,59,13,"Math"],[57,19,59,17],[57,20,59,18,"floor"],[57,25,59,23],[57,26,59,24,"step"],[57,30,59,28],[57,31,59,29],[58,8,60,6],[58,15,60,13],[58,16,60,14,"isFinite"],[58,24,60,22],[58,25,60,23,"step"],[58,29,60,27],[58,30,60,28],[58,34,60,32],[58,36,60,34,"step"],[58,40,60,38],[58,43,60,41],[58,44,60,42],[58,45,60,43],[58,48,60,46],[58,52,60,50],[58,55,61,12],[58,57,61,14,"step"],[58,61,61,18],[58,64,61,21],[58,65,61,22],[58,66,61,23],[58,69,61,26,"interval"],[58,77,61,34],[58,80,62,12,"interval"],[58,88,62,20],[58,89,62,21,"filter"],[58,95,62,27],[58,96,62,28,"field"],[58,101,62,33],[58,104,63,17,"d"],[58,105,63,18],[58,109,63,23,"field"],[58,114,63,28],[58,115,63,29,"d"],[58,116,63,30],[58,117,63,31],[58,120,63,34,"step"],[58,124,63,38],[58,129,63,43],[58,130,63,44],[58,133,64,17,"d"],[58,134,64,18],[58,138,64,23,"interval"],[58,146,64,31],[58,147,64,32,"count"],[58,152,64,37],[58,153,64,38],[58,154,64,39],[58,156,64,41,"d"],[58,157,64,42],[58,158,64,43],[58,161,64,46,"step"],[58,165,64,50],[58,170,64,55],[58,171,64,56],[58,172,64,57],[59,6,65,4],[59,7,65,5],[60,4,66,2],[61,4,68,2],[61,11,68,9,"interval"],[61,19,68,17],[62,2,69,0],[63,0,69,1],[63,3]],"functionMap":{"names":["<global>","timeInterval","interval","floor","ceil","round","offset","range","filter","timeInterval$argument_0","timeInterval$argument_1","count","every","<anonymous>"],"mappings":"AAA;OCE;ECE;GDE;mBEE;GFE;kBGE;GHE;mBIE;GJG;oBKE;GLE;mBME;GNS;oBOE;wBCC;KDE,EE;KFQ;GPC;qBUG;KVI;qBWE;gBCK,4BD;gBCC,wCD;KXC;CDI"},"hasCjsExports":false},"type":"js/module"}]}