{"dependencies":[{"name":"internmap","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":36,"index":36}}],"key":"9MGTQAuKkWpinSfCDBvLyXQexsA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return intersection;\n    }\n  });\n  var _internmap = require(_dependencyMap[0], \"internmap\");\n  function intersection(values, ...others) {\n    values = new _internmap.InternSet(values);\n    others = others.map(set);\n    out: for (const value of values) {\n      for (const other of others) {\n        if (!other.has(value)) {\n          values.delete(value);\n          continue out;\n        }\n      }\n    }\n    return values;\n  }\n  function set(values) {\n    return values instanceof _internmap.InternSet ? values : new _internmap.InternSet(values);\n  }\n});","lineCount":30,"map":[[7,2,3,15,"Object"],[7,8,3,15],[7,9,3,15,"defineProperty"],[7,23,3,15],[7,24,3,15,"exports"],[7,31,3,15],[8,4,3,15,"enumerable"],[8,14,3,15],[9,4,3,15,"get"],[9,7,3,15],[9,18,3,15,"get"],[9,19,3,15],[10,6,3,15],[10,13,3,15,"intersection"],[10,25,3,15],[11,4,3,15],[12,2,3,15],[13,2,1,0],[13,6,1,0,"_internmap"],[13,16,1,0],[13,19,1,0,"require"],[13,26,1,0],[13,27,1,0,"_dependencyMap"],[13,41,1,0],[14,2,3,15],[14,11,3,24,"intersection"],[14,23,3,36,"intersection"],[14,24,3,37,"values"],[14,30,3,43],[14,32,3,45],[14,35,3,48,"others"],[14,41,3,54],[14,43,3,56],[15,4,4,2,"values"],[15,10,4,8],[15,13,4,11],[15,17,4,15,"InternSet"],[15,27,4,24],[15,28,4,24,"InternSet"],[15,37,4,24],[15,38,4,25,"values"],[15,44,4,31],[15,45,4,32],[16,4,5,2,"others"],[16,10,5,8],[16,13,5,11,"others"],[16,19,5,17],[16,20,5,18,"map"],[16,23,5,21],[16,24,5,22,"set"],[16,27,5,25],[16,28,5,26],[17,4,6,2,"out"],[17,7,6,5],[17,9,6,7],[17,14,6,12],[17,20,6,18,"value"],[17,25,6,23],[17,29,6,27,"values"],[17,35,6,33],[17,37,6,35],[18,6,7,4],[18,11,7,9],[18,17,7,15,"other"],[18,22,7,20],[18,26,7,24,"others"],[18,32,7,30],[18,34,7,32],[19,8,8,6],[19,12,8,10],[19,13,8,11,"other"],[19,18,8,16],[19,19,8,17,"has"],[19,22,8,20],[19,23,8,21,"value"],[19,28,8,26],[19,29,8,27],[19,31,8,29],[20,10,9,8,"values"],[20,16,9,14],[20,17,9,15,"delete"],[20,23,9,21],[20,24,9,22,"value"],[20,29,9,27],[20,30,9,28],[21,10,10,8],[21,19,10,17,"out"],[21,22,10,20],[22,8,11,6],[23,6,12,4],[24,4,13,2],[25,4,14,2],[25,11,14,9,"values"],[25,17,14,15],[26,2,15,0],[27,2,17,0],[27,11,17,9,"set"],[27,14,17,12,"set"],[27,15,17,13,"values"],[27,21,17,19],[27,23,17,21],[28,4,18,2],[28,11,18,9,"values"],[28,17,18,15],[28,29,18,27,"InternSet"],[28,39,18,36],[28,40,18,36,"InternSet"],[28,49,18,36],[28,52,18,39,"values"],[28,58,18,45],[28,61,18,48],[28,65,18,52,"InternSet"],[28,75,18,61],[28,76,18,61,"InternSet"],[28,85,18,61],[28,86,18,62,"values"],[28,92,18,68],[28,93,18,69],[29,2,19,0],[30,0,19,1],[30,3]],"functionMap":{"names":["<global>","intersection","set"],"mappings":"AAA;eCE;CDY;AEE;CFE"},"hasCjsExports":false},"type":"js/module"}]}