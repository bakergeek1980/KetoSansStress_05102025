{"dependencies":[{"name":"./ascending.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"xtKL/S7sK97/7tdhDf+yd4WGPfU=","exportNames":["*"],"imports":1}},{"name":"./permute.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":35,"index":75}}],"key":"m4FOypesuwVoSerymPLQKlL2bkU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return sort;\n    }\n  });\n  exports.compareDefined = compareDefined;\n  exports.ascendingDefined = ascendingDefined;\n  var _ascendingJs = require(_dependencyMap[0], \"./ascending.js\");\n  var ascending = _interopDefault(_ascendingJs);\n  var _permuteJs = require(_dependencyMap[1], \"./permute.js\");\n  var permute = _interopDefault(_permuteJs);\n  function sort(values, ...F) {\n    if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n    values = Array.from(values);\n    let [f] = F;\n    if (f && f.length !== 2 || F.length > 1) {\n      const index = Uint32Array.from(values, (d, i) => i);\n      if (F.length > 1) {\n        F = F.map(f => values.map(f));\n        index.sort((i, j) => {\n          for (const f of F) {\n            const c = ascendingDefined(f[i], f[j]);\n            if (c) return c;\n          }\n        });\n      } else {\n        f = values.map(f);\n        index.sort((i, j) => ascendingDefined(f[i], f[j]));\n      }\n      return (0, permute.default)(values, index);\n    }\n    return values.sort(compareDefined(f));\n  }\n  function compareDefined(compare = ascending.default) {\n    if (compare === ascending.default) return ascendingDefined;\n    if (typeof compare !== \"function\") throw new TypeError(\"compare is not a function\");\n    return (a, b) => {\n      const x = compare(a, b);\n      if (x || x === 0) return x;\n      return (compare(b, b) === 0) - (compare(a, a) === 0);\n    };\n  }\n  function ascendingDefined(a, b) {\n    return (a == null || !(a >= a)) - (b == null || !(b >= b)) || (a < b ? -1 : a > b ? 1 : 0);\n  }\n});","lineCount":58,"map":[[12,2,4,15,"Object"],[12,8,4,15],[12,9,4,15,"defineProperty"],[12,23,4,15],[12,24,4,15,"exports"],[12,31,4,15],[13,4,4,15,"enumerable"],[13,14,4,15],[14,4,4,15,"get"],[14,7,4,15],[14,18,4,15,"get"],[14,19,4,15],[15,6,4,15],[15,13,4,15,"sort"],[15,17,4,15],[16,4,4,15],[17,2,4,15],[18,2,27,0,"exports"],[18,9,27,0],[18,10,27,0,"compareDefined"],[18,24,27,0],[18,27,27,0,"compareDefined"],[18,41,27,0],[19,2,37,0,"exports"],[19,9,37,0],[19,10,37,0,"ascendingDefined"],[19,26,37,0],[19,29,37,0,"ascendingDefined"],[19,45,37,0],[20,2,1,0],[20,6,1,0,"_ascendingJs"],[20,18,1,0],[20,21,1,0,"require"],[20,28,1,0],[20,29,1,0,"_dependencyMap"],[20,43,1,0],[21,2,1,0],[21,6,1,0,"ascending"],[21,15,1,0],[21,18,1,0,"_interopDefault"],[21,33,1,0],[21,34,1,0,"_ascendingJs"],[21,46,1,0],[22,2,2,0],[22,6,2,0,"_permuteJs"],[22,16,2,0],[22,19,2,0,"require"],[22,26,2,0],[22,27,2,0,"_dependencyMap"],[22,41,2,0],[23,2,2,0],[23,6,2,0,"permute"],[23,13,2,0],[23,16,2,0,"_interopDefault"],[23,31,2,0],[23,32,2,0,"_permuteJs"],[23,42,2,0],[24,2,4,15],[24,11,4,24,"sort"],[24,15,4,28,"sort"],[24,16,4,29,"values"],[24,22,4,35],[24,24,4,37],[24,27,4,40,"F"],[24,28,4,41],[24,30,4,43],[25,4,5,2],[25,8,5,6],[25,15,5,13,"values"],[25,21,5,19],[25,22,5,20,"Symbol"],[25,28,5,26],[25,29,5,27,"iterator"],[25,37,5,35],[25,38,5,36],[25,43,5,41],[25,53,5,51],[25,55,5,53],[25,61,5,59],[25,65,5,63,"TypeError"],[25,74,5,72],[25,75,5,73],[25,99,5,97],[25,100,5,98],[26,4,6,2,"values"],[26,10,6,8],[26,13,6,11,"Array"],[26,18,6,16],[26,19,6,17,"from"],[26,23,6,21],[26,24,6,22,"values"],[26,30,6,28],[26,31,6,29],[27,4,7,2],[27,8,7,6],[27,9,7,7,"f"],[27,10,7,8],[27,11,7,9],[27,14,7,12,"F"],[27,15,7,13],[28,4,8,2],[28,8,8,7,"f"],[28,9,8,8],[28,13,8,12,"f"],[28,14,8,13],[28,15,8,14,"length"],[28,21,8,20],[28,26,8,25],[28,27,8,26],[28,31,8,31,"F"],[28,32,8,32],[28,33,8,33,"length"],[28,39,8,39],[28,42,8,42],[28,43,8,43],[28,45,8,45],[29,6,9,4],[29,12,9,10,"index"],[29,17,9,15],[29,20,9,18,"Uint32Array"],[29,31,9,29],[29,32,9,30,"from"],[29,36,9,34],[29,37,9,35,"values"],[29,43,9,41],[29,45,9,43],[29,46,9,44,"d"],[29,47,9,45],[29,49,9,47,"i"],[29,50,9,48],[29,55,9,53,"i"],[29,56,9,54],[29,57,9,55],[30,6,10,4],[30,10,10,8,"F"],[30,11,10,9],[30,12,10,10,"length"],[30,18,10,16],[30,21,10,19],[30,22,10,20],[30,24,10,22],[31,8,11,6,"F"],[31,9,11,7],[31,12,11,10,"F"],[31,13,11,11],[31,14,11,12,"map"],[31,17,11,15],[31,18,11,16,"f"],[31,19,11,17],[31,23,11,21,"values"],[31,29,11,27],[31,30,11,28,"map"],[31,33,11,31],[31,34,11,32,"f"],[31,35,11,33],[31,36,11,34],[31,37,11,35],[32,8,12,6,"index"],[32,13,12,11],[32,14,12,12,"sort"],[32,18,12,16],[32,19,12,17],[32,20,12,18,"i"],[32,21,12,19],[32,23,12,21,"j"],[32,24,12,22],[32,29,12,27],[33,10,13,8],[33,15,13,13],[33,21,13,19,"f"],[33,22,13,20],[33,26,13,24,"F"],[33,27,13,25],[33,29,13,27],[34,12,14,10],[34,18,14,16,"c"],[34,19,14,17],[34,22,14,20,"ascendingDefined"],[34,38,14,36],[34,39,14,37,"f"],[34,40,14,38],[34,41,14,39,"i"],[34,42,14,40],[34,43,14,41],[34,45,14,43,"f"],[34,46,14,44],[34,47,14,45,"j"],[34,48,14,46],[34,49,14,47],[34,50,14,48],[35,12,15,10],[35,16,15,14,"c"],[35,17,15,15],[35,19,15,17],[35,26,15,24,"c"],[35,27,15,25],[36,10,16,8],[37,8,17,6],[37,9,17,7],[37,10,17,8],[38,6,18,4],[38,7,18,5],[38,13,18,11],[39,8,19,6,"f"],[39,9,19,7],[39,12,19,10,"values"],[39,18,19,16],[39,19,19,17,"map"],[39,22,19,20],[39,23,19,21,"f"],[39,24,19,22],[39,25,19,23],[40,8,20,6,"index"],[40,13,20,11],[40,14,20,12,"sort"],[40,18,20,16],[40,19,20,17],[40,20,20,18,"i"],[40,21,20,19],[40,23,20,21,"j"],[40,24,20,22],[40,29,20,27,"ascendingDefined"],[40,45,20,43],[40,46,20,44,"f"],[40,47,20,45],[40,48,20,46,"i"],[40,49,20,47],[40,50,20,48],[40,52,20,50,"f"],[40,53,20,51],[40,54,20,52,"j"],[40,55,20,53],[40,56,20,54],[40,57,20,55],[40,58,20,56],[41,6,21,4],[42,6,22,4],[42,13,22,11],[42,17,22,11,"permute"],[42,24,22,18],[42,25,22,18,"default"],[42,32,22,18],[42,34,22,19,"values"],[42,40,22,25],[42,42,22,27,"index"],[42,47,22,32],[42,48,22,33],[43,4,23,2],[44,4,24,2],[44,11,24,9,"values"],[44,17,24,15],[44,18,24,16,"sort"],[44,22,24,20],[44,23,24,21,"compareDefined"],[44,37,24,35],[44,38,24,36,"f"],[44,39,24,37],[44,40,24,38],[44,41,24,39],[45,2,25,0],[46,2,27,7],[46,11,27,16,"compareDefined"],[46,25,27,30,"compareDefined"],[46,26,27,31,"compare"],[46,33,27,38],[46,36,27,41,"ascending"],[46,45,27,50],[46,46,27,50,"default"],[46,53,27,50],[46,55,27,52],[47,4,28,2],[47,8,28,6,"compare"],[47,15,28,13],[47,20,28,18,"ascending"],[47,29,28,27],[47,30,28,27,"default"],[47,37,28,27],[47,39,28,29],[47,46,28,36,"ascendingDefined"],[47,62,28,52],[48,4,29,2],[48,8,29,6],[48,15,29,13,"compare"],[48,22,29,20],[48,27,29,25],[48,37,29,35],[48,39,29,37],[48,45,29,43],[48,49,29,47,"TypeError"],[48,58,29,56],[48,59,29,57],[48,86,29,84],[48,87,29,85],[49,4,30,2],[49,11,30,9],[49,12,30,10,"a"],[49,13,30,11],[49,15,30,13,"b"],[49,16,30,14],[49,21,30,19],[50,6,31,4],[50,12,31,10,"x"],[50,13,31,11],[50,16,31,14,"compare"],[50,23,31,21],[50,24,31,22,"a"],[50,25,31,23],[50,27,31,25,"b"],[50,28,31,26],[50,29,31,27],[51,6,32,4],[51,10,32,8,"x"],[51,11,32,9],[51,15,32,13,"x"],[51,16,32,14],[51,21,32,19],[51,22,32,20],[51,24,32,22],[51,31,32,29,"x"],[51,32,32,30],[52,6,33,4],[52,13,33,11],[52,14,33,12,"compare"],[52,21,33,19],[52,22,33,20,"b"],[52,23,33,21],[52,25,33,23,"b"],[52,26,33,24],[52,27,33,25],[52,32,33,30],[52,33,33,31],[52,38,33,36,"compare"],[52,45,33,43],[52,46,33,44,"a"],[52,47,33,45],[52,49,33,47,"a"],[52,50,33,48],[52,51,33,49],[52,56,33,54],[52,57,33,55],[52,58,33,56],[53,4,34,2],[53,5,34,3],[54,2,35,0],[55,2,37,7],[55,11,37,16,"ascendingDefined"],[55,27,37,32,"ascendingDefined"],[55,28,37,33,"a"],[55,29,37,34],[55,31,37,36,"b"],[55,32,37,37],[55,34,37,39],[56,4,38,2],[56,11,38,9],[56,12,38,10,"a"],[56,13,38,11],[56,17,38,15],[56,21,38,19],[56,25,38,23],[56,27,38,25,"a"],[56,28,38,26],[56,32,38,30,"a"],[56,33,38,31],[56,34,38,32],[56,39,38,37,"b"],[56,40,38,38],[56,44,38,42],[56,48,38,46],[56,52,38,50],[56,54,38,52,"b"],[56,55,38,53],[56,59,38,57,"b"],[56,60,38,58],[56,61,38,59],[56,62,38,60],[56,67,38,65,"a"],[56,68,38,66],[56,71,38,69,"b"],[56,72,38,70],[56,75,38,73],[56,76,38,74],[56,77,38,75],[56,80,38,78,"a"],[56,81,38,79],[56,84,38,82,"b"],[56,85,38,83],[56,88,38,86],[56,89,38,87],[56,92,38,90],[56,93,38,91],[56,94,38,92],[57,2,39,0],[58,0,39,1],[58,3]],"functionMap":{"names":["<global>","sort","Uint32Array.from$argument_1","F.map$argument_0","index.sort$argument_0","compareDefined","<anonymous>","ascendingDefined"],"mappings":"AAA;eCG;2CCK,WD;gBEE,kBF;iBGC;OHK;iBGG,sCH;CDK;OKE;SCG;GDI;CLC;OOE;CPE"},"hasCjsExports":false},"type":"js/module"}]}