{"dependencies":[{"name":"./schedule.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"eh9FX8KcirTmPvx5nre1+ln6T50=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _ref;\n    }\n  });\n  var _scheduleJs = require(_dependencyMap[0], \"./schedule.js\");\n  function start(name) {\n    return (name + \"\").trim().split(/^|\\s+/).every(function (t) {\n      var i = t.indexOf(\".\");\n      if (i >= 0) t = t.slice(0, i);\n      return !t || t === \"start\";\n    });\n  }\n  function onFunction(id, name, listener) {\n    var on0,\n      on1,\n      sit = start(name) ? _scheduleJs.init : _scheduleJs.set;\n    return function () {\n      var schedule = sit(this, id),\n        on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and weâ€™re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n      schedule.on = on1;\n    };\n  }\n  function _ref(name, listener) {\n    var id = this._id;\n    return arguments.length < 2 ? (0, _scheduleJs.get)(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));\n  }\n});","lineCount":40,"map":[[7,2,26,15,"Object"],[7,8,26,15],[7,9,26,15,"defineProperty"],[7,23,26,15],[7,24,26,15,"exports"],[7,31,26,15],[8,4,26,15,"enumerable"],[8,14,26,15],[9,4,26,15,"get"],[9,7,26,15],[9,18,26,15,"get"],[9,19,26,15],[10,6,26,15],[10,13,26,15,"_ref"],[10,17,26,15],[11,4,26,15],[12,2,26,15],[13,2,1,0],[13,6,1,0,"_scheduleJs"],[13,17,1,0],[13,20,1,0,"require"],[13,27,1,0],[13,28,1,0,"_dependencyMap"],[13,42,1,0],[14,2,3,0],[14,11,3,9,"start"],[14,16,3,14,"start"],[14,17,3,15,"name"],[14,21,3,19],[14,23,3,21],[15,4,4,2],[15,11,4,9],[15,12,4,10,"name"],[15,16,4,14],[15,19,4,17],[15,21,4,19],[15,23,4,21,"trim"],[15,27,4,25],[15,28,4,26],[15,29,4,27],[15,30,4,28,"split"],[15,35,4,33],[15,36,4,34],[15,43,4,41],[15,44,4,42],[15,45,4,43,"every"],[15,50,4,48],[15,51,4,49],[15,61,4,58,"t"],[15,62,4,59],[15,64,4,61],[16,6,5,4],[16,10,5,8,"i"],[16,11,5,9],[16,14,5,12,"t"],[16,15,5,13],[16,16,5,14,"indexOf"],[16,23,5,21],[16,24,5,22],[16,27,5,25],[16,28,5,26],[17,6,6,4],[17,10,6,8,"i"],[17,11,6,9],[17,15,6,13],[17,16,6,14],[17,18,6,16,"t"],[17,19,6,17],[17,22,6,20,"t"],[17,23,6,21],[17,24,6,22,"slice"],[17,29,6,27],[17,30,6,28],[17,31,6,29],[17,33,6,31,"i"],[17,34,6,32],[17,35,6,33],[18,6,7,4],[18,13,7,11],[18,14,7,12,"t"],[18,15,7,13],[18,19,7,17,"t"],[18,20,7,18],[18,25,7,23],[18,32,7,30],[19,4,8,2],[19,5,8,3],[19,6,8,4],[20,2,9,0],[21,2,11,0],[21,11,11,9,"onFunction"],[21,21,11,19,"onFunction"],[21,22,11,20,"id"],[21,24,11,22],[21,26,11,24,"name"],[21,30,11,28],[21,32,11,30,"listener"],[21,40,11,38],[21,42,11,40],[22,4,12,2],[22,8,12,6,"on0"],[22,11,12,9],[23,6,12,11,"on1"],[23,9,12,14],[24,6,12,16,"sit"],[24,9,12,19],[24,12,12,22,"start"],[24,17,12,27],[24,18,12,28,"name"],[24,22,12,32],[24,23,12,33],[24,26,12,36,"init"],[24,37,12,40],[24,38,12,40,"init"],[24,42,12,40],[24,45,12,43,"set"],[24,56,12,46],[24,57,12,46,"set"],[24,60,12,46],[25,4,13,2],[25,11,13,9],[25,23,13,20],[26,6,14,4],[26,10,14,8,"schedule"],[26,18,14,16],[26,21,14,19,"sit"],[26,24,14,22],[26,25,14,23],[26,29,14,27],[26,31,14,29,"id"],[26,33,14,31],[26,34,14,32],[27,8,15,8,"on"],[27,10,15,10],[27,13,15,13,"schedule"],[27,21,15,21],[27,22,15,22,"on"],[27,24,15,24],[29,6,17,4],[30,6,18,4],[31,6,19,4],[32,6,20,4],[32,10,20,8,"on"],[32,12,20,10],[32,17,20,15,"on0"],[32,20,20,18],[32,22,20,20],[32,23,20,21,"on1"],[32,26,20,24],[32,29,20,27],[32,30,20,28,"on0"],[32,33,20,31],[32,36,20,34,"on"],[32,38,20,36],[32,40,20,38,"copy"],[32,44,20,42],[32,45,20,43],[32,46,20,44],[32,48,20,46,"on"],[32,50,20,48],[32,51,20,49,"name"],[32,55,20,53],[32,57,20,55,"listener"],[32,65,20,63],[32,66,20,64],[33,6,22,4,"schedule"],[33,14,22,12],[33,15,22,13,"on"],[33,17,22,15],[33,20,22,18,"on1"],[33,23,22,21],[34,4,23,2],[34,5,23,3],[35,2,24,0],[36,2,26,15],[36,11,26,15,"_ref"],[36,16,26,24,"name"],[36,20,26,28],[36,22,26,30,"listener"],[36,30,26,38],[36,32,26,40],[37,4,27,2],[37,8,27,6,"id"],[37,10,27,8],[37,13,27,11],[37,17,27,15],[37,18,27,16,"_id"],[37,21,27,19],[38,4,29,2],[38,11,29,9,"arguments"],[38,20,29,18],[38,21,29,19,"length"],[38,27,29,25],[38,30,29,28],[38,31,29,29],[38,34,30,8],[38,38,30,8,"get"],[38,49,30,11],[38,50,30,11,"get"],[38,53,30,11],[38,55,30,12],[38,59,30,16],[38,60,30,17,"node"],[38,64,30,21],[38,65,30,22],[38,66,30,23],[38,68,30,25,"id"],[38,70,30,27],[38,71,30,28],[38,72,30,29,"on"],[38,74,30,31],[38,75,30,32,"on"],[38,77,30,34],[38,78,30,35,"name"],[38,82,30,39],[38,83,30,40],[38,86,31,8],[38,90,31,12],[38,91,31,13,"each"],[38,95,31,17],[38,96,31,18,"onFunction"],[38,106,31,28],[38,107,31,29,"id"],[38,109,31,31],[38,111,31,33,"name"],[38,115,31,37],[38,117,31,39,"listener"],[38,125,31,47],[38,126,31,48],[38,127,31,49],[39,2,32,0],[40,0,32,1],[40,3]],"functionMap":{"names":["<global>","start","trim.split.every$argument_0","onFunction","<anonymous>","default"],"mappings":"AAA;ACE;iDCC;GDI;CDC;AGE;SCE;GDU;CHC;eKE;CLM"},"hasCjsExports":false},"type":"js/module"}]}