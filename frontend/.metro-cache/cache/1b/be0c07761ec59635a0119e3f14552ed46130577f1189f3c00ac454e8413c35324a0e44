{"dependencies":[{"name":"d3-array","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":32,"index":32}}],"key":"6/g0OmizGembrwGL3ynTnrgY1Es=","exportNames":["*"],"imports":1}},{"name":"./init.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":33},"end":{"line":2,"column":36,"index":69}}],"key":"T/z5w4vOvjDtodMXYiKznwC3zLs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return threshold;\n    }\n  });\n  var _d3Array = require(_dependencyMap[0], \"d3-array\");\n  var _initJs = require(_dependencyMap[1], \"./init.js\");\n  function threshold() {\n    var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n    function scale(x) {\n      return x != null && x <= x ? range[(0, _d3Array.bisect)(domain, x, 0, n)] : unknown;\n    }\n    scale.domain = function (_) {\n      return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n    };\n    scale.range = function (_) {\n      return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n    };\n    scale.invertExtent = function (y) {\n      var i = range.indexOf(y);\n      return [domain[i - 1], domain[i]];\n    };\n    scale.unknown = function (_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n    scale.copy = function () {\n      return threshold().domain(domain).range(range).unknown(unknown);\n    };\n    return _initJs.initRange.apply(scale, arguments);\n  }\n});","lineCount":41,"map":[[7,2,4,15,"Object"],[7,8,4,15],[7,9,4,15,"defineProperty"],[7,23,4,15],[7,24,4,15,"exports"],[7,31,4,15],[8,4,4,15,"enumerable"],[8,14,4,15],[9,4,4,15,"get"],[9,7,4,15],[9,18,4,15,"get"],[9,19,4,15],[10,6,4,15],[10,13,4,15,"threshold"],[10,22,4,15],[11,4,4,15],[12,2,4,15],[13,2,1,0],[13,6,1,0,"_d3Array"],[13,14,1,0],[13,17,1,0,"require"],[13,24,1,0],[13,25,1,0,"_dependencyMap"],[13,39,1,0],[14,2,2,0],[14,6,2,0,"_initJs"],[14,13,2,0],[14,16,2,0,"require"],[14,23,2,0],[14,24,2,0,"_dependencyMap"],[14,38,2,0],[15,2,4,15],[15,11,4,24,"threshold"],[15,20,4,33,"threshold"],[15,21,4,33],[15,23,4,36],[16,4,5,2],[16,8,5,6,"domain"],[16,14,5,12],[16,17,5,15],[16,18,5,16],[16,21,5,19],[16,22,5,20],[17,6,6,6,"range"],[17,11,6,11],[17,14,6,14],[17,15,6,15],[17,16,6,16],[17,18,6,18],[17,19,6,19],[17,20,6,20],[18,6,7,6,"unknown"],[18,13,7,13],[19,6,8,6,"n"],[19,7,8,7],[19,10,8,10],[19,11,8,11],[20,4,10,2],[20,13,10,11,"scale"],[20,18,10,16,"scale"],[20,19,10,17,"x"],[20,20,10,18],[20,22,10,20],[21,6,11,4],[21,13,11,11,"x"],[21,14,11,12],[21,18,11,16],[21,22,11,20],[21,26,11,24,"x"],[21,27,11,25],[21,31,11,29,"x"],[21,32,11,30],[21,35,11,33,"range"],[21,40,11,38],[21,41,11,39],[21,45,11,39,"bisect"],[21,53,11,45],[21,54,11,45,"bisect"],[21,60,11,45],[21,62,11,46,"domain"],[21,68,11,52],[21,70,11,54,"x"],[21,71,11,55],[21,73,11,57],[21,74,11,58],[21,76,11,60,"n"],[21,77,11,61],[21,78,11,62],[21,79,11,63],[21,82,11,66,"unknown"],[21,89,11,73],[22,4,12,2],[23,4,14,2,"scale"],[23,9,14,7],[23,10,14,8,"domain"],[23,16,14,14],[23,19,14,17],[23,29,14,26,"_"],[23,30,14,27],[23,32,14,29],[24,6,15,4],[24,13,15,11,"arguments"],[24,22,15,20],[24,23,15,21,"length"],[24,29,15,27],[24,33,15,31,"domain"],[24,39,15,37],[24,42,15,40,"Array"],[24,47,15,45],[24,48,15,46,"from"],[24,52,15,50],[24,53,15,51,"_"],[24,54,15,52],[24,55,15,53],[24,57,15,55,"n"],[24,58,15,56],[24,61,15,59,"Math"],[24,65,15,63],[24,66,15,64,"min"],[24,69,15,67],[24,70,15,68,"domain"],[24,76,15,74],[24,77,15,75,"length"],[24,83,15,81],[24,85,15,83,"range"],[24,90,15,88],[24,91,15,89,"length"],[24,97,15,95],[24,100,15,98],[24,101,15,99],[24,102,15,100],[24,104,15,102,"scale"],[24,109,15,107],[24,113,15,111,"domain"],[24,119,15,117],[24,120,15,118,"slice"],[24,125,15,123],[24,126,15,124],[24,127,15,125],[25,4,16,2],[25,5,16,3],[26,4,18,2,"scale"],[26,9,18,7],[26,10,18,8,"range"],[26,15,18,13],[26,18,18,16],[26,28,18,25,"_"],[26,29,18,26],[26,31,18,28],[27,6,19,4],[27,13,19,11,"arguments"],[27,22,19,20],[27,23,19,21,"length"],[27,29,19,27],[27,33,19,31,"range"],[27,38,19,36],[27,41,19,39,"Array"],[27,46,19,44],[27,47,19,45,"from"],[27,51,19,49],[27,52,19,50,"_"],[27,53,19,51],[27,54,19,52],[27,56,19,54,"n"],[27,57,19,55],[27,60,19,58,"Math"],[27,64,19,62],[27,65,19,63,"min"],[27,68,19,66],[27,69,19,67,"domain"],[27,75,19,73],[27,76,19,74,"length"],[27,82,19,80],[27,84,19,82,"range"],[27,89,19,87],[27,90,19,88,"length"],[27,96,19,94],[27,99,19,97],[27,100,19,98],[27,101,19,99],[27,103,19,101,"scale"],[27,108,19,106],[27,112,19,110,"range"],[27,117,19,115],[27,118,19,116,"slice"],[27,123,19,121],[27,124,19,122],[27,125,19,123],[28,4,20,2],[28,5,20,3],[29,4,22,2,"scale"],[29,9,22,7],[29,10,22,8,"invertExtent"],[29,22,22,20],[29,25,22,23],[29,35,22,32,"y"],[29,36,22,33],[29,38,22,35],[30,6,23,4],[30,10,23,8,"i"],[30,11,23,9],[30,14,23,12,"range"],[30,19,23,17],[30,20,23,18,"indexOf"],[30,27,23,25],[30,28,23,26,"y"],[30,29,23,27],[30,30,23,28],[31,6,24,4],[31,13,24,11],[31,14,24,12,"domain"],[31,20,24,18],[31,21,24,19,"i"],[31,22,24,20],[31,25,24,23],[31,26,24,24],[31,27,24,25],[31,29,24,27,"domain"],[31,35,24,33],[31,36,24,34,"i"],[31,37,24,35],[31,38,24,36],[31,39,24,37],[32,4,25,2],[32,5,25,3],[33,4,27,2,"scale"],[33,9,27,7],[33,10,27,8,"unknown"],[33,17,27,15],[33,20,27,18],[33,30,27,27,"_"],[33,31,27,28],[33,33,27,30],[34,6,28,4],[34,13,28,11,"arguments"],[34,22,28,20],[34,23,28,21,"length"],[34,29,28,27],[34,33,28,31,"unknown"],[34,40,28,38],[34,43,28,41,"_"],[34,44,28,42],[34,46,28,44,"scale"],[34,51,28,49],[34,55,28,53,"unknown"],[34,62,28,60],[35,4,29,2],[35,5,29,3],[36,4,31,2,"scale"],[36,9,31,7],[36,10,31,8,"copy"],[36,14,31,12],[36,17,31,15],[36,29,31,26],[37,6,32,4],[37,13,32,11,"threshold"],[37,22,32,20],[37,23,32,21],[37,24,32,22],[37,25,33,9,"domain"],[37,31,33,15],[37,32,33,16,"domain"],[37,38,33,22],[37,39,33,23],[37,40,34,9,"range"],[37,45,34,14],[37,46,34,15,"range"],[37,51,34,20],[37,52,34,21],[37,53,35,9,"unknown"],[37,60,35,16],[37,61,35,17,"unknown"],[37,68,35,24],[37,69,35,25],[38,4,36,2],[38,5,36,3],[39,4,38,2],[39,11,38,9,"initRange"],[39,18,38,18],[39,19,38,18,"initRange"],[39,28,38,18],[39,29,38,19,"apply"],[39,34,38,24],[39,35,38,25,"scale"],[39,40,38,30],[39,42,38,32,"arguments"],[39,51,38,41],[39,52,38,42],[40,2,39,0],[41,0,39,1],[41,3]],"functionMap":{"names":["<global>","threshold","scale","scale.domain","scale.range","scale.invertExtent","scale.unknown","scale.copy"],"mappings":"AAA;eCG;ECM;GDE;iBEE;GFE;gBGE;GHE;uBIE;GJG;kBKE;GLE;eME;GNK;CDG"},"hasCjsExports":false},"type":"js/module"}]}