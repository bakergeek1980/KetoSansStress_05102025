{"dependencies":[{"name":"./interval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"X1dfJm+wJnoZKCHgLz1H5kHzesA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"timeYear\", {\n    enumerable: true,\n    get: function () {\n      return timeYear;\n    }\n  });\n  Object.defineProperty(exports, \"timeYears\", {\n    enumerable: true,\n    get: function () {\n      return timeYears;\n    }\n  });\n  Object.defineProperty(exports, \"utcYear\", {\n    enumerable: true,\n    get: function () {\n      return utcYear;\n    }\n  });\n  Object.defineProperty(exports, \"utcYears\", {\n    enumerable: true,\n    get: function () {\n      return utcYears;\n    }\n  });\n  var _intervalJs = require(_dependencyMap[0], \"./interval.js\");\n  const timeYear = (0, _intervalJs.timeInterval)(date => {\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setFullYear(date.getFullYear() + step);\n  }, (start, end) => {\n    return end.getFullYear() - start.getFullYear();\n  }, date => {\n    return date.getFullYear();\n  });\n\n  // An optimized implementation for this simple case.\n  timeYear.every = k => {\n    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _intervalJs.timeInterval)(date => {\n      date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n      date.setMonth(0, 1);\n      date.setHours(0, 0, 0, 0);\n    }, (date, step) => {\n      date.setFullYear(date.getFullYear() + step * k);\n    });\n  };\n  const timeYears = timeYear.range;\n  const utcYear = (0, _intervalJs.timeInterval)(date => {\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, (start, end) => {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  }, date => {\n    return date.getUTCFullYear();\n  });\n\n  // An optimized implementation for this simple case.\n  utcYear.every = k => {\n    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _intervalJs.timeInterval)(date => {\n      date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n      date.setUTCMonth(0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n    }, (date, step) => {\n      date.setUTCFullYear(date.getUTCFullYear() + step * k);\n    });\n  };\n  const utcYears = utcYear.range;\n});","lineCount":76,"map":[[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"enumerable"],[8,14,3,0],[9,4,3,0,"get"],[9,7,3,0],[9,18,3,0,"get"],[9,19,3,0],[10,6,3,0],[10,13,3,0,"timeYear"],[10,21,3,0],[11,4,3,0],[12,2,3,0],[13,2,25,0,"Object"],[13,8,25,0],[13,9,25,0,"defineProperty"],[13,23,25,0],[13,24,25,0,"exports"],[13,31,25,0],[14,4,25,0,"enumerable"],[14,14,25,0],[15,4,25,0,"get"],[15,7,25,0],[15,18,25,0,"get"],[15,19,25,0],[16,6,25,0],[16,13,25,0,"timeYears"],[16,22,25,0],[17,4,25,0],[18,2,25,0],[19,2,27,0,"Object"],[19,8,27,0],[19,9,27,0,"defineProperty"],[19,23,27,0],[19,24,27,0,"exports"],[19,31,27,0],[20,4,27,0,"enumerable"],[20,14,27,0],[21,4,27,0,"get"],[21,7,27,0],[21,18,27,0,"get"],[21,19,27,0],[22,6,27,0],[22,13,27,0,"utcYear"],[22,20,27,0],[23,4,27,0],[24,2,27,0],[25,2,49,0,"Object"],[25,8,49,0],[25,9,49,0,"defineProperty"],[25,23,49,0],[25,24,49,0,"exports"],[25,31,49,0],[26,4,49,0,"enumerable"],[26,14,49,0],[27,4,49,0,"get"],[27,7,49,0],[27,18,49,0,"get"],[27,19,49,0],[28,6,49,0],[28,13,49,0,"utcYears"],[28,21,49,0],[29,4,49,0],[30,2,49,0],[31,2,1,0],[31,6,1,0,"_intervalJs"],[31,17,1,0],[31,20,1,0,"require"],[31,27,1,0],[31,28,1,0,"_dependencyMap"],[31,42,1,0],[32,2,3,7],[32,8,3,13,"timeYear"],[32,16,3,21],[32,19,3,24],[32,23,3,24,"timeInterval"],[32,34,3,36],[32,35,3,36,"timeInterval"],[32,47,3,36],[32,49,3,38,"date"],[32,53,3,42],[32,57,3,47],[33,4,4,2,"date"],[33,8,4,6],[33,9,4,7,"setMonth"],[33,17,4,15],[33,18,4,16],[33,19,4,17],[33,21,4,19],[33,22,4,20],[33,23,4,21],[34,4,5,2,"date"],[34,8,5,6],[34,9,5,7,"setHours"],[34,17,5,15],[34,18,5,16],[34,19,5,17],[34,21,5,19],[34,22,5,20],[34,24,5,22],[34,25,5,23],[34,27,5,25],[34,28,5,26],[34,29,5,27],[35,2,6,0],[35,3,6,1],[35,5,6,3],[35,6,6,4,"date"],[35,10,6,8],[35,12,6,10,"step"],[35,16,6,14],[35,21,6,19],[36,4,7,2,"date"],[36,8,7,6],[36,9,7,7,"setFullYear"],[36,20,7,18],[36,21,7,19,"date"],[36,25,7,23],[36,26,7,24,"getFullYear"],[36,37,7,35],[36,38,7,36],[36,39,7,37],[36,42,7,40,"step"],[36,46,7,44],[36,47,7,45],[37,2,8,0],[37,3,8,1],[37,5,8,3],[37,6,8,4,"start"],[37,11,8,9],[37,13,8,11,"end"],[37,16,8,14],[37,21,8,19],[38,4,9,2],[38,11,9,9,"end"],[38,14,9,12],[38,15,9,13,"getFullYear"],[38,26,9,24],[38,27,9,25],[38,28,9,26],[38,31,9,29,"start"],[38,36,9,34],[38,37,9,35,"getFullYear"],[38,48,9,46],[38,49,9,47],[38,50,9,48],[39,2,10,0],[39,3,10,1],[39,5,10,4,"date"],[39,9,10,8],[39,13,10,13],[40,4,11,2],[40,11,11,9,"date"],[40,15,11,13],[40,16,11,14,"getFullYear"],[40,27,11,25],[40,28,11,26],[40,29,11,27],[41,2,12,0],[41,3,12,1],[41,4,12,2],[43,2,14,0],[44,2,15,0,"timeYear"],[44,10,15,8],[44,11,15,9,"every"],[44,16,15,14],[44,19,15,18,"k"],[44,20,15,19],[44,24,15,24],[45,4,16,2],[45,11,16,9],[45,12,16,10,"isFinite"],[45,20,16,18],[45,21,16,19,"k"],[45,22,16,20],[45,25,16,23,"Math"],[45,29,16,27],[45,30,16,28,"floor"],[45,35,16,33],[45,36,16,34,"k"],[45,37,16,35],[45,38,16,36],[45,39,16,37],[45,43,16,41],[45,45,16,43,"k"],[45,46,16,44],[45,49,16,47],[45,50,16,48],[45,51,16,49],[45,54,16,52],[45,58,16,56],[45,61,16,59],[45,65,16,59,"timeInterval"],[45,76,16,71],[45,77,16,71,"timeInterval"],[45,89,16,71],[45,91,16,73,"date"],[45,95,16,77],[45,99,16,82],[46,6,17,4,"date"],[46,10,17,8],[46,11,17,9,"setFullYear"],[46,22,17,20],[46,23,17,21,"Math"],[46,27,17,25],[46,28,17,26,"floor"],[46,33,17,31],[46,34,17,32,"date"],[46,38,17,36],[46,39,17,37,"getFullYear"],[46,50,17,48],[46,51,17,49],[46,52,17,50],[46,55,17,53,"k"],[46,56,17,54],[46,57,17,55],[46,60,17,58,"k"],[46,61,17,59],[46,62,17,60],[47,6,18,4,"date"],[47,10,18,8],[47,11,18,9,"setMonth"],[47,19,18,17],[47,20,18,18],[47,21,18,19],[47,23,18,21],[47,24,18,22],[47,25,18,23],[48,6,19,4,"date"],[48,10,19,8],[48,11,19,9,"setHours"],[48,19,19,17],[48,20,19,18],[48,21,19,19],[48,23,19,21],[48,24,19,22],[48,26,19,24],[48,27,19,25],[48,29,19,27],[48,30,19,28],[48,31,19,29],[49,4,20,2],[49,5,20,3],[49,7,20,5],[49,8,20,6,"date"],[49,12,20,10],[49,14,20,12,"step"],[49,18,20,16],[49,23,20,21],[50,6,21,4,"date"],[50,10,21,8],[50,11,21,9,"setFullYear"],[50,22,21,20],[50,23,21,21,"date"],[50,27,21,25],[50,28,21,26,"getFullYear"],[50,39,21,37],[50,40,21,38],[50,41,21,39],[50,44,21,42,"step"],[50,48,21,46],[50,51,21,49,"k"],[50,52,21,50],[50,53,21,51],[51,4,22,2],[51,5,22,3],[51,6,22,4],[52,2,23,0],[52,3,23,1],[53,2,25,7],[53,8,25,13,"timeYears"],[53,17,25,22],[53,20,25,25,"timeYear"],[53,28,25,33],[53,29,25,34,"range"],[53,34,25,39],[54,2,27,7],[54,8,27,13,"utcYear"],[54,15,27,20],[54,18,27,23],[54,22,27,23,"timeInterval"],[54,33,27,35],[54,34,27,35,"timeInterval"],[54,46,27,35],[54,48,27,37,"date"],[54,52,27,41],[54,56,27,46],[55,4,28,2,"date"],[55,8,28,6],[55,9,28,7,"setUTCMonth"],[55,20,28,18],[55,21,28,19],[55,22,28,20],[55,24,28,22],[55,25,28,23],[55,26,28,24],[56,4,29,2,"date"],[56,8,29,6],[56,9,29,7,"setUTCHours"],[56,20,29,18],[56,21,29,19],[56,22,29,20],[56,24,29,22],[56,25,29,23],[56,27,29,25],[56,28,29,26],[56,30,29,28],[56,31,29,29],[56,32,29,30],[57,2,30,0],[57,3,30,1],[57,5,30,3],[57,6,30,4,"date"],[57,10,30,8],[57,12,30,10,"step"],[57,16,30,14],[57,21,30,19],[58,4,31,2,"date"],[58,8,31,6],[58,9,31,7,"setUTCFullYear"],[58,23,31,21],[58,24,31,22,"date"],[58,28,31,26],[58,29,31,27,"getUTCFullYear"],[58,43,31,41],[58,44,31,42],[58,45,31,43],[58,48,31,46,"step"],[58,52,31,50],[58,53,31,51],[59,2,32,0],[59,3,32,1],[59,5,32,3],[59,6,32,4,"start"],[59,11,32,9],[59,13,32,11,"end"],[59,16,32,14],[59,21,32,19],[60,4,33,2],[60,11,33,9,"end"],[60,14,33,12],[60,15,33,13,"getUTCFullYear"],[60,29,33,27],[60,30,33,28],[60,31,33,29],[60,34,33,32,"start"],[60,39,33,37],[60,40,33,38,"getUTCFullYear"],[60,54,33,52],[60,55,33,53],[60,56,33,54],[61,2,34,0],[61,3,34,1],[61,5,34,4,"date"],[61,9,34,8],[61,13,34,13],[62,4,35,2],[62,11,35,9,"date"],[62,15,35,13],[62,16,35,14,"getUTCFullYear"],[62,30,35,28],[62,31,35,29],[62,32,35,30],[63,2,36,0],[63,3,36,1],[63,4,36,2],[65,2,38,0],[66,2,39,0,"utcYear"],[66,9,39,7],[66,10,39,8,"every"],[66,15,39,13],[66,18,39,17,"k"],[66,19,39,18],[66,23,39,23],[67,4,40,2],[67,11,40,9],[67,12,40,10,"isFinite"],[67,20,40,18],[67,21,40,19,"k"],[67,22,40,20],[67,25,40,23,"Math"],[67,29,40,27],[67,30,40,28,"floor"],[67,35,40,33],[67,36,40,34,"k"],[67,37,40,35],[67,38,40,36],[67,39,40,37],[67,43,40,41],[67,45,40,43,"k"],[67,46,40,44],[67,49,40,47],[67,50,40,48],[67,51,40,49],[67,54,40,52],[67,58,40,56],[67,61,40,59],[67,65,40,59,"timeInterval"],[67,76,40,71],[67,77,40,71,"timeInterval"],[67,89,40,71],[67,91,40,73,"date"],[67,95,40,77],[67,99,40,82],[68,6,41,4,"date"],[68,10,41,8],[68,11,41,9,"setUTCFullYear"],[68,25,41,23],[68,26,41,24,"Math"],[68,30,41,28],[68,31,41,29,"floor"],[68,36,41,34],[68,37,41,35,"date"],[68,41,41,39],[68,42,41,40,"getUTCFullYear"],[68,56,41,54],[68,57,41,55],[68,58,41,56],[68,61,41,59,"k"],[68,62,41,60],[68,63,41,61],[68,66,41,64,"k"],[68,67,41,65],[68,68,41,66],[69,6,42,4,"date"],[69,10,42,8],[69,11,42,9,"setUTCMonth"],[69,22,42,20],[69,23,42,21],[69,24,42,22],[69,26,42,24],[69,27,42,25],[69,28,42,26],[70,6,43,4,"date"],[70,10,43,8],[70,11,43,9,"setUTCHours"],[70,22,43,20],[70,23,43,21],[70,24,43,22],[70,26,43,24],[70,27,43,25],[70,29,43,27],[70,30,43,28],[70,32,43,30],[70,33,43,31],[70,34,43,32],[71,4,44,2],[71,5,44,3],[71,7,44,5],[71,8,44,6,"date"],[71,12,44,10],[71,14,44,12,"step"],[71,18,44,16],[71,23,44,21],[72,6,45,4,"date"],[72,10,45,8],[72,11,45,9,"setUTCFullYear"],[72,25,45,23],[72,26,45,24,"date"],[72,30,45,28],[72,31,45,29,"getUTCFullYear"],[72,45,45,43],[72,46,45,44],[72,47,45,45],[72,50,45,48,"step"],[72,54,45,52],[72,57,45,55,"k"],[72,58,45,56],[72,59,45,57],[73,4,46,2],[73,5,46,3],[73,6,46,4],[74,2,47,0],[74,3,47,1],[75,2,49,7],[75,8,49,13,"utcYears"],[75,16,49,21],[75,19,49,24,"utcYear"],[75,26,49,31],[75,27,49,32,"range"],[75,32,49,37],[76,0,49,38],[76,3]],"functionMap":{"names":["<global>","timeInterval$argument_0","timeInterval$argument_1","timeInterval$argument_2","timeInterval$argument_3","timeYear.every","utcYear.every"],"mappings":"AAA;qCCE;CDG,EE;CFE,EG;CHE,EI;CJE;iBKG;wEJC;GII,EH;GGE;CLC;oCCI;CDG,EE;CFE,EG;CHE,EI;CJE;gBMG;wELC;GKI,EJ;GIE;CNC"},"hasCjsExports":false},"type":"js/module"}]}