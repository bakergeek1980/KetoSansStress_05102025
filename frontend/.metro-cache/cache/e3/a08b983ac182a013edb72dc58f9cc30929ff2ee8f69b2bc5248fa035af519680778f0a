{"dependencies":[{"name":"./math.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"ySpOHGLt4EckG9K+TobGsyJtQww=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"elasticIn\", {\n    enumerable: true,\n    get: function () {\n      return elasticIn;\n    }\n  });\n  Object.defineProperty(exports, \"elasticOut\", {\n    enumerable: true,\n    get: function () {\n      return elasticOut;\n    }\n  });\n  Object.defineProperty(exports, \"elasticInOut\", {\n    enumerable: true,\n    get: function () {\n      return elasticInOut;\n    }\n  });\n  var _mathJs = require(_dependencyMap[0], \"./math.js\");\n  var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n  var elasticIn = function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n    function elasticIn(t) {\n      return a * (0, _mathJs.tpmt)(- --t) * Math.sin((s - t) / p);\n    }\n    elasticIn.amplitude = function (a) {\n      return custom(a, p * tau);\n    };\n    elasticIn.period = function (p) {\n      return custom(a, p);\n    };\n    return elasticIn;\n  }(amplitude, period);\n  var elasticOut = function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n    function elasticOut(t) {\n      return 1 - a * (0, _mathJs.tpmt)(t = +t) * Math.sin((t + s) / p);\n    }\n    elasticOut.amplitude = function (a) {\n      return custom(a, p * tau);\n    };\n    elasticOut.period = function (p) {\n      return custom(a, p);\n    };\n    return elasticOut;\n  }(amplitude, period);\n  var elasticInOut = function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n    function elasticInOut(t) {\n      return ((t = t * 2 - 1) < 0 ? a * (0, _mathJs.tpmt)(-t) * Math.sin((s - t) / p) : 2 - a * (0, _mathJs.tpmt)(t) * Math.sin((s + t) / p)) / 2;\n    }\n    elasticInOut.amplitude = function (a) {\n      return custom(a, p * tau);\n    };\n    elasticInOut.period = function (p) {\n      return custom(a, p);\n    };\n    return elasticInOut;\n  }(amplitude, period);\n});","lineCount":68,"map":[[7,2,7,0,"Object"],[7,8,7,0],[7,9,7,0,"defineProperty"],[7,23,7,0],[7,24,7,0,"exports"],[7,31,7,0],[8,4,7,0,"enumerable"],[8,14,7,0],[9,4,7,0,"get"],[9,7,7,0],[9,18,7,0,"get"],[9,19,7,0],[10,6,7,0],[10,13,7,0,"elasticIn"],[10,22,7,0],[11,4,7,0],[12,2,7,0],[13,2,20,0,"Object"],[13,8,20,0],[13,9,20,0,"defineProperty"],[13,23,20,0],[13,24,20,0,"exports"],[13,31,20,0],[14,4,20,0,"enumerable"],[14,14,20,0],[15,4,20,0,"get"],[15,7,20,0],[15,18,20,0,"get"],[15,19,20,0],[16,6,20,0],[16,13,20,0,"elasticOut"],[16,23,20,0],[17,4,20,0],[18,2,20,0],[19,2,33,0,"Object"],[19,8,33,0],[19,9,33,0,"defineProperty"],[19,23,33,0],[19,24,33,0,"exports"],[19,31,33,0],[20,4,33,0,"enumerable"],[20,14,33,0],[21,4,33,0,"get"],[21,7,33,0],[21,18,33,0,"get"],[21,19,33,0],[22,6,33,0],[22,13,33,0,"elasticInOut"],[22,25,33,0],[23,4,33,0],[24,2,33,0],[25,2,1,0],[25,6,1,0,"_mathJs"],[25,13,1,0],[25,16,1,0,"require"],[25,23,1,0],[25,24,1,0,"_dependencyMap"],[25,38,1,0],[26,2,3,0],[26,6,3,4,"tau"],[26,9,3,7],[26,12,3,10],[26,13,3,11],[26,16,3,14,"Math"],[26,20,3,18],[26,21,3,19,"PI"],[26,23,3,21],[27,4,4,4,"amplitude"],[27,13,4,13],[27,16,4,16],[27,17,4,17],[28,4,5,4,"period"],[28,10,5,10],[28,13,5,13],[28,16,5,16],[29,2,7,7],[29,6,7,11,"elasticIn"],[29,15,7,20],[29,18,7,24],[29,27,7,33,"custom"],[29,33,7,39,"custom"],[29,34,7,40,"a"],[29,35,7,41],[29,37,7,43,"p"],[29,38,7,44],[29,40,7,46],[30,4,8,2],[30,8,8,6,"s"],[30,9,8,7],[30,12,8,10,"Math"],[30,16,8,14],[30,17,8,15,"asin"],[30,21,8,19],[30,22,8,20],[30,23,8,21],[30,27,8,25,"a"],[30,28,8,26],[30,31,8,29,"Math"],[30,35,8,33],[30,36,8,34,"max"],[30,39,8,37],[30,40,8,38],[30,41,8,39],[30,43,8,41,"a"],[30,44,8,42],[30,45,8,43],[30,46,8,44],[30,47,8,45],[30,51,8,49,"p"],[30,52,8,50],[30,56,8,54,"tau"],[30,59,8,57],[30,60,8,58],[31,4,10,2],[31,13,10,11,"elasticIn"],[31,22,10,20,"elasticIn"],[31,23,10,21,"t"],[31,24,10,22],[31,26,10,24],[32,6,11,4],[32,13,11,11,"a"],[32,14,11,12],[32,17,11,15],[32,21,11,15,"tpmt"],[32,28,11,19],[32,29,11,19,"tpmt"],[32,33,11,19],[32,35,11,20],[32,36,11,22],[32,39,11,24,"t"],[32,40,11,26],[32,41,11,27],[32,44,11,30,"Math"],[32,48,11,34],[32,49,11,35,"sin"],[32,52,11,38],[32,53,11,39],[32,54,11,40,"s"],[32,55,11,41],[32,58,11,44,"t"],[32,59,11,45],[32,63,11,49,"p"],[32,64,11,50],[32,65,11,51],[33,4,12,2],[34,4,14,2,"elasticIn"],[34,13,14,11],[34,14,14,12,"amplitude"],[34,23,14,21],[34,26,14,24],[34,36,14,33,"a"],[34,37,14,34],[34,39,14,36],[35,6,14,38],[35,13,14,45,"custom"],[35,19,14,51],[35,20,14,52,"a"],[35,21,14,53],[35,23,14,55,"p"],[35,24,14,56],[35,27,14,59,"tau"],[35,30,14,62],[35,31,14,63],[36,4,14,65],[36,5,14,66],[37,4,15,2,"elasticIn"],[37,13,15,11],[37,14,15,12,"period"],[37,20,15,18],[37,23,15,21],[37,33,15,30,"p"],[37,34,15,31],[37,36,15,33],[38,6,15,35],[38,13,15,42,"custom"],[38,19,15,48],[38,20,15,49,"a"],[38,21,15,50],[38,23,15,52,"p"],[38,24,15,53],[38,25,15,54],[39,4,15,56],[39,5,15,57],[40,4,17,2],[40,11,17,9,"elasticIn"],[40,20,17,18],[41,2,18,0],[41,3,18,1],[41,4,18,3,"amplitude"],[41,13,18,12],[41,15,18,14,"period"],[41,21,18,20],[41,22,18,21],[42,2,20,7],[42,6,20,11,"elasticOut"],[42,16,20,21],[42,19,20,25],[42,28,20,34,"custom"],[42,34,20,40,"custom"],[42,35,20,41,"a"],[42,36,20,42],[42,38,20,44,"p"],[42,39,20,45],[42,41,20,47],[43,4,21,2],[43,8,21,6,"s"],[43,9,21,7],[43,12,21,10,"Math"],[43,16,21,14],[43,17,21,15,"asin"],[43,21,21,19],[43,22,21,20],[43,23,21,21],[43,27,21,25,"a"],[43,28,21,26],[43,31,21,29,"Math"],[43,35,21,33],[43,36,21,34,"max"],[43,39,21,37],[43,40,21,38],[43,41,21,39],[43,43,21,41,"a"],[43,44,21,42],[43,45,21,43],[43,46,21,44],[43,47,21,45],[43,51,21,49,"p"],[43,52,21,50],[43,56,21,54,"tau"],[43,59,21,57],[43,60,21,58],[44,4,23,2],[44,13,23,11,"elasticOut"],[44,23,23,21,"elasticOut"],[44,24,23,22,"t"],[44,25,23,23],[44,27,23,25],[45,6,24,4],[45,13,24,11],[45,14,24,12],[45,17,24,15,"a"],[45,18,24,16],[45,21,24,19],[45,25,24,19,"tpmt"],[45,32,24,23],[45,33,24,23,"tpmt"],[45,37,24,23],[45,39,24,24,"t"],[45,40,24,25],[45,43,24,28],[45,44,24,29,"t"],[45,45,24,30],[45,46,24,31],[45,49,24,34,"Math"],[45,53,24,38],[45,54,24,39,"sin"],[45,57,24,42],[45,58,24,43],[45,59,24,44,"t"],[45,60,24,45],[45,63,24,48,"s"],[45,64,24,49],[45,68,24,53,"p"],[45,69,24,54],[45,70,24,55],[46,4,25,2],[47,4,27,2,"elasticOut"],[47,14,27,12],[47,15,27,13,"amplitude"],[47,24,27,22],[47,27,27,25],[47,37,27,34,"a"],[47,38,27,35],[47,40,27,37],[48,6,27,39],[48,13,27,46,"custom"],[48,19,27,52],[48,20,27,53,"a"],[48,21,27,54],[48,23,27,56,"p"],[48,24,27,57],[48,27,27,60,"tau"],[48,30,27,63],[48,31,27,64],[49,4,27,66],[49,5,27,67],[50,4,28,2,"elasticOut"],[50,14,28,12],[50,15,28,13,"period"],[50,21,28,19],[50,24,28,22],[50,34,28,31,"p"],[50,35,28,32],[50,37,28,34],[51,6,28,36],[51,13,28,43,"custom"],[51,19,28,49],[51,20,28,50,"a"],[51,21,28,51],[51,23,28,53,"p"],[51,24,28,54],[51,25,28,55],[52,4,28,57],[52,5,28,58],[53,4,30,2],[53,11,30,9,"elasticOut"],[53,21,30,19],[54,2,31,0],[54,3,31,1],[54,4,31,3,"amplitude"],[54,13,31,12],[54,15,31,14,"period"],[54,21,31,20],[54,22,31,21],[55,2,33,7],[55,6,33,11,"elasticInOut"],[55,18,33,23],[55,21,33,27],[55,30,33,36,"custom"],[55,36,33,42,"custom"],[55,37,33,43,"a"],[55,38,33,44],[55,40,33,46,"p"],[55,41,33,47],[55,43,33,49],[56,4,34,2],[56,8,34,6,"s"],[56,9,34,7],[56,12,34,10,"Math"],[56,16,34,14],[56,17,34,15,"asin"],[56,21,34,19],[56,22,34,20],[56,23,34,21],[56,27,34,25,"a"],[56,28,34,26],[56,31,34,29,"Math"],[56,35,34,33],[56,36,34,34,"max"],[56,39,34,37],[56,40,34,38],[56,41,34,39],[56,43,34,41,"a"],[56,44,34,42],[56,45,34,43],[56,46,34,44],[56,47,34,45],[56,51,34,49,"p"],[56,52,34,50],[56,56,34,54,"tau"],[56,59,34,57],[56,60,34,58],[57,4,36,2],[57,13,36,11,"elasticInOut"],[57,25,36,23,"elasticInOut"],[57,26,36,24,"t"],[57,27,36,25],[57,29,36,27],[58,6,37,4],[58,13,37,11],[58,14,37,12],[58,15,37,13,"t"],[58,16,37,14],[58,19,37,17,"t"],[58,20,37,18],[58,23,37,21],[58,24,37,22],[58,27,37,25],[58,28,37,26],[58,32,37,30],[58,33,37,31],[58,36,38,10,"a"],[58,37,38,11],[58,40,38,14],[58,44,38,14,"tpmt"],[58,51,38,18],[58,52,38,18,"tpmt"],[58,56,38,18],[58,58,38,19],[58,59,38,20,"t"],[58,60,38,21],[58,61,38,22],[58,64,38,25,"Math"],[58,68,38,29],[58,69,38,30,"sin"],[58,72,38,33],[58,73,38,34],[58,74,38,35,"s"],[58,75,38,36],[58,78,38,39,"t"],[58,79,38,40],[58,83,38,44,"p"],[58,84,38,45],[58,85,38,46],[58,88,39,10],[58,89,39,11],[58,92,39,14,"a"],[58,93,39,15],[58,96,39,18],[58,100,39,18,"tpmt"],[58,107,39,22],[58,108,39,22,"tpmt"],[58,112,39,22],[58,114,39,23,"t"],[58,115,39,24],[58,116,39,25],[58,119,39,28,"Math"],[58,123,39,32],[58,124,39,33,"sin"],[58,127,39,36],[58,128,39,37],[58,129,39,38,"s"],[58,130,39,39],[58,133,39,42,"t"],[58,134,39,43],[58,138,39,47,"p"],[58,139,39,48],[58,140,39,49],[58,144,39,53],[58,145,39,54],[59,4,40,2],[60,4,42,2,"elasticInOut"],[60,16,42,14],[60,17,42,15,"amplitude"],[60,26,42,24],[60,29,42,27],[60,39,42,36,"a"],[60,40,42,37],[60,42,42,39],[61,6,42,41],[61,13,42,48,"custom"],[61,19,42,54],[61,20,42,55,"a"],[61,21,42,56],[61,23,42,58,"p"],[61,24,42,59],[61,27,42,62,"tau"],[61,30,42,65],[61,31,42,66],[62,4,42,68],[62,5,42,69],[63,4,43,2,"elasticInOut"],[63,16,43,14],[63,17,43,15,"period"],[63,23,43,21],[63,26,43,24],[63,36,43,33,"p"],[63,37,43,34],[63,39,43,36],[64,6,43,38],[64,13,43,45,"custom"],[64,19,43,51],[64,20,43,52,"a"],[64,21,43,53],[64,23,43,55,"p"],[64,24,43,56],[64,25,43,57],[65,4,43,59],[65,5,43,60],[66,4,45,2],[66,11,45,9,"elasticInOut"],[66,23,45,21],[67,2,46,0],[67,3,46,1],[67,4,46,3,"amplitude"],[67,13,46,12],[67,15,46,14,"period"],[67,21,46,20],[67,22,46,21],[68,0,46,22],[68,3]],"functionMap":{"names":["<global>","custom","elasticIn","elasticIn.amplitude","elasticIn.period","elasticOut","elasticOut.amplitude","elasticOut.period","elasticInOut","elasticInOut.amplitude","elasticInOut.period"],"mappings":"AAA;wBCM;ECG;GDE;wBEE,0CF;qBGC,oCH;CDG;yBCE;EIG;GJE;yBKE,0CL;sBMC,oCN;CDG;2BCE;EOG;GPI;2BQE,0CR;wBSC,oCT;CDG"},"hasCjsExports":false},"type":"js/module"}]}