{"dependencies":[{"name":"./array.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"jXxb4SdBmUL/BTM9x/KzTlT8R9Q=","exportNames":["*"],"imports":1}},{"name":"./bisect.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":33,"index":67}}],"key":"qvA1JxdAHR9sRmIpdlO4Jh8+oxk=","exportNames":["*"],"imports":1}},{"name":"./constant.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":68},"end":{"line":3,"column":37,"index":105}}],"key":"R4FtEbhtZz98sK1zrNstSwz3mzI=","exportNames":["*"],"imports":1}},{"name":"./extent.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":106},"end":{"line":4,"column":33,"index":139}}],"key":"EP/HiQlyrTjlYzk8vrbO5+Ms5vs=","exportNames":["*"],"imports":1}},{"name":"./identity.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":140},"end":{"line":5,"column":37,"index":177}}],"key":"O0JoHceaJLyVMfNwgBaWtgzogWA=","exportNames":["*"],"imports":1}},{"name":"./nice.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":178},"end":{"line":6,"column":29,"index":207}}],"key":"a4gclUXNvXj37h8zQEksZ0ixeyQ=","exportNames":["*"],"imports":1}},{"name":"./ticks.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":208},"end":{"line":7,"column":48,"index":256}}],"key":"RWROCfGpoXNfoTPwQimOeQmIiQs=","exportNames":["*"],"imports":1}},{"name":"./threshold/sturges.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":257},"end":{"line":8,"column":45,"index":302}}],"key":"9UpWm8vEXWWCAhjK66b+c9eYu08=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return bin;\n    }\n  });\n  var _arrayJs = require(_dependencyMap[0], \"./array.js\");\n  var _bisectJs = require(_dependencyMap[1], \"./bisect.js\");\n  var bisect = _interopDefault(_bisectJs);\n  var _constantJs = require(_dependencyMap[2], \"./constant.js\");\n  var constant = _interopDefault(_constantJs);\n  var _extentJs = require(_dependencyMap[3], \"./extent.js\");\n  var extent = _interopDefault(_extentJs);\n  var _identityJs = require(_dependencyMap[4], \"./identity.js\");\n  var identity = _interopDefault(_identityJs);\n  var _niceJs = require(_dependencyMap[5], \"./nice.js\");\n  var nice = _interopDefault(_niceJs);\n  var _ticksJs = require(_dependencyMap[6], \"./ticks.js\");\n  var ticks = _interopDefault(_ticksJs);\n  var _thresholdSturgesJs = require(_dependencyMap[7], \"./threshold/sturges.js\");\n  var sturges = _interopDefault(_thresholdSturgesJs);\n  function bin() {\n    var value = identity.default,\n      domain = extent.default,\n      threshold = sturges.default;\n    function histogram(data) {\n      if (!Array.isArray(data)) data = Array.from(data);\n      var i,\n        n = data.length,\n        x,\n        step,\n        values = new Array(n);\n      for (i = 0; i < n; ++i) {\n        values[i] = value(data[i], i, data);\n      }\n      var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds, and nice the\n      // default domain accordingly.\n      if (!Array.isArray(tz)) {\n        const max = x1,\n          tn = +tz;\n        if (domain === extent.default) [x0, x1] = (0, nice.default)(x0, x1, tn);\n        tz = (0, ticks.default)(x0, x1, tn);\n\n        // If the domain is aligned with the first tick (which it will by\n        // default), then we can use quantization rather than bisection to bin\n        // values, which is substantially faster.\n        if (tz[0] <= x0) step = (0, _ticksJs.tickIncrement)(x0, x1, tn);\n\n        // If the last threshold is coincident with the domain’s upper bound, the\n        // last bin will be zero-width. If the default domain is used, and this\n        // last threshold is coincident with the maximum input value, we can\n        // extend the niced upper bound by one tick to ensure uniform bin widths;\n        // otherwise, we simply remove the last threshold. Note that we don’t\n        // coerce values or the domain to numbers, and thus must be careful to\n        // compare order (>=) rather than strict equality (===)!\n        if (tz[tz.length - 1] >= x1) {\n          if (max >= x1 && domain === extent.default) {\n            const step = (0, _ticksJs.tickIncrement)(x0, x1, tn);\n            if (isFinite(step)) {\n              if (step > 0) {\n                x1 = (Math.floor(x1 / step) + 1) * step;\n              } else if (step < 0) {\n                x1 = (Math.ceil(x1 * -step) + 1) / -step;\n              }\n            }\n          } else {\n            tz.pop();\n          }\n        }\n      }\n\n      // Remove any thresholds outside the domain.\n      // Be careful not to mutate an array owned by the user!\n      var m = tz.length,\n        a = 0,\n        b = m;\n      while (tz[a] <= x0) ++a;\n      while (tz[b - 1] > x1) --b;\n      if (a || b < m) tz = tz.slice(a, b), m = b - a;\n      var bins = new Array(m + 1),\n        bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      if (isFinite(step)) {\n        if (step > 0) {\n          for (i = 0; i < n; ++i) {\n            if ((x = values[i]) != null && x0 <= x && x <= x1) {\n              bins[Math.min(m, Math.floor((x - x0) / step))].push(data[i]);\n            }\n          }\n        } else if (step < 0) {\n          for (i = 0; i < n; ++i) {\n            if ((x = values[i]) != null && x0 <= x && x <= x1) {\n              const j = Math.floor((x0 - x) * step);\n              bins[Math.min(m, j + (tz[j] <= x))].push(data[i]); // handle off-by-one due to rounding\n            }\n          }\n        }\n      } else {\n        for (i = 0; i < n; ++i) {\n          if ((x = values[i]) != null && x0 <= x && x <= x1) {\n            bins[(0, bisect.default)(tz, x, 0, m)].push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function (_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : (0, constant.default)(_), histogram) : value;\n    };\n    histogram.domain = function (_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : (0, constant.default)([_[0], _[1]]), histogram) : domain;\n    };\n    histogram.thresholds = function (_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : (0, constant.default)(Array.isArray(_) ? _arrayJs.slice.call(_) : _), histogram) : threshold;\n    };\n    return histogram;\n  }\n});","lineCount":142,"map":[[12,2,10,15,"Object"],[12,8,10,15],[12,9,10,15,"defineProperty"],[12,23,10,15],[12,24,10,15,"exports"],[12,31,10,15],[13,4,10,15,"enumerable"],[13,14,10,15],[14,4,10,15,"get"],[14,7,10,15],[14,18,10,15,"get"],[14,19,10,15],[15,6,10,15],[15,13,10,15,"bin"],[15,16,10,15],[16,4,10,15],[17,2,10,15],[18,2,1,0],[18,6,1,0,"_arrayJs"],[18,14,1,0],[18,17,1,0,"require"],[18,24,1,0],[18,25,1,0,"_dependencyMap"],[18,39,1,0],[19,2,2,0],[19,6,2,0,"_bisectJs"],[19,15,2,0],[19,18,2,0,"require"],[19,25,2,0],[19,26,2,0,"_dependencyMap"],[19,40,2,0],[20,2,2,0],[20,6,2,0,"bisect"],[20,12,2,0],[20,15,2,0,"_interopDefault"],[20,30,2,0],[20,31,2,0,"_bisectJs"],[20,40,2,0],[21,2,3,0],[21,6,3,0,"_constantJs"],[21,17,3,0],[21,20,3,0,"require"],[21,27,3,0],[21,28,3,0,"_dependencyMap"],[21,42,3,0],[22,2,3,0],[22,6,3,0,"constant"],[22,14,3,0],[22,17,3,0,"_interopDefault"],[22,32,3,0],[22,33,3,0,"_constantJs"],[22,44,3,0],[23,2,4,0],[23,6,4,0,"_extentJs"],[23,15,4,0],[23,18,4,0,"require"],[23,25,4,0],[23,26,4,0,"_dependencyMap"],[23,40,4,0],[24,2,4,0],[24,6,4,0,"extent"],[24,12,4,0],[24,15,4,0,"_interopDefault"],[24,30,4,0],[24,31,4,0,"_extentJs"],[24,40,4,0],[25,2,5,0],[25,6,5,0,"_identityJs"],[25,17,5,0],[25,20,5,0,"require"],[25,27,5,0],[25,28,5,0,"_dependencyMap"],[25,42,5,0],[26,2,5,0],[26,6,5,0,"identity"],[26,14,5,0],[26,17,5,0,"_interopDefault"],[26,32,5,0],[26,33,5,0,"_identityJs"],[26,44,5,0],[27,2,6,0],[27,6,6,0,"_niceJs"],[27,13,6,0],[27,16,6,0,"require"],[27,23,6,0],[27,24,6,0,"_dependencyMap"],[27,38,6,0],[28,2,6,0],[28,6,6,0,"nice"],[28,10,6,0],[28,13,6,0,"_interopDefault"],[28,28,6,0],[28,29,6,0,"_niceJs"],[28,36,6,0],[29,2,7,0],[29,6,7,0,"_ticksJs"],[29,14,7,0],[29,17,7,0,"require"],[29,24,7,0],[29,25,7,0,"_dependencyMap"],[29,39,7,0],[30,2,7,0],[30,6,7,0,"ticks"],[30,11,7,0],[30,14,7,0,"_interopDefault"],[30,29,7,0],[30,30,7,0,"_ticksJs"],[30,38,7,0],[31,2,8,0],[31,6,8,0,"_thresholdSturgesJs"],[31,25,8,0],[31,28,8,0,"require"],[31,35,8,0],[31,36,8,0,"_dependencyMap"],[31,50,8,0],[32,2,8,0],[32,6,8,0,"sturges"],[32,13,8,0],[32,16,8,0,"_interopDefault"],[32,31,8,0],[32,32,8,0,"_thresholdSturgesJs"],[32,51,8,0],[33,2,10,15],[33,11,10,24,"bin"],[33,14,10,27,"bin"],[33,15,10,27],[33,17,10,30],[34,4,11,2],[34,8,11,6,"value"],[34,13,11,11],[34,16,11,14,"identity"],[34,24,11,22],[34,25,11,22,"default"],[34,32,11,22],[35,6,12,6,"domain"],[35,12,12,12],[35,15,12,15,"extent"],[35,21,12,21],[35,22,12,21,"default"],[35,29,12,21],[36,6,13,6,"threshold"],[36,15,13,15],[36,18,13,18,"sturges"],[36,25,13,25],[36,26,13,25,"default"],[36,33,13,25],[37,4,15,2],[37,13,15,11,"histogram"],[37,22,15,20,"histogram"],[37,23,15,21,"data"],[37,27,15,25],[37,29,15,27],[38,6,16,4],[38,10,16,8],[38,11,16,9,"Array"],[38,16,16,14],[38,17,16,15,"isArray"],[38,24,16,22],[38,25,16,23,"data"],[38,29,16,27],[38,30,16,28],[38,32,16,30,"data"],[38,36,16,34],[38,39,16,37,"Array"],[38,44,16,42],[38,45,16,43,"from"],[38,49,16,47],[38,50,16,48,"data"],[38,54,16,52],[38,55,16,53],[39,6,18,4],[39,10,18,8,"i"],[39,11,18,9],[40,8,19,8,"n"],[40,9,19,9],[40,12,19,12,"data"],[40,16,19,16],[40,17,19,17,"length"],[40,23,19,23],[41,8,20,8,"x"],[41,9,20,9],[42,8,21,8,"step"],[42,12,21,12],[43,8,22,8,"values"],[43,14,22,14],[43,17,22,17],[43,21,22,21,"Array"],[43,26,22,26],[43,27,22,27,"n"],[43,28,22,28],[43,29,22,29],[44,6,24,4],[44,11,24,9,"i"],[44,12,24,10],[44,15,24,13],[44,16,24,14],[44,18,24,16,"i"],[44,19,24,17],[44,22,24,20,"n"],[44,23,24,21],[44,25,24,23],[44,27,24,25,"i"],[44,28,24,26],[44,30,24,28],[45,8,25,6,"values"],[45,14,25,12],[45,15,25,13,"i"],[45,16,25,14],[45,17,25,15],[45,20,25,18,"value"],[45,25,25,23],[45,26,25,24,"data"],[45,30,25,28],[45,31,25,29,"i"],[45,32,25,30],[45,33,25,31],[45,35,25,33,"i"],[45,36,25,34],[45,38,25,36,"data"],[45,42,25,40],[45,43,25,41],[46,6,26,4],[47,6,28,4],[47,10,28,8,"xz"],[47,12,28,10],[47,15,28,13,"domain"],[47,21,28,19],[47,22,28,20,"values"],[47,28,28,26],[47,29,28,27],[48,8,29,8,"x0"],[48,10,29,10],[48,13,29,13,"xz"],[48,15,29,15],[48,16,29,16],[48,17,29,17],[48,18,29,18],[49,8,30,8,"x1"],[49,10,30,10],[49,13,30,13,"xz"],[49,15,30,15],[49,16,30,16],[49,17,30,17],[49,18,30,18],[50,8,31,8,"tz"],[50,10,31,10],[50,13,31,13,"threshold"],[50,22,31,22],[50,23,31,23,"values"],[50,29,31,29],[50,31,31,31,"x0"],[50,33,31,33],[50,35,31,35,"x1"],[50,37,31,37],[50,38,31,38],[52,6,33,4],[53,6,34,4],[54,6,35,4],[54,10,35,8],[54,11,35,9,"Array"],[54,16,35,14],[54,17,35,15,"isArray"],[54,24,35,22],[54,25,35,23,"tz"],[54,27,35,25],[54,28,35,26],[54,30,35,28],[55,8,36,6],[55,14,36,12,"max"],[55,17,36,15],[55,20,36,18,"x1"],[55,22,36,20],[56,10,36,22,"tn"],[56,12,36,24],[56,15,36,27],[56,16,36,28,"tz"],[56,18,36,30],[57,8,37,6],[57,12,37,10,"domain"],[57,18,37,16],[57,23,37,21,"extent"],[57,29,37,27],[57,30,37,27,"default"],[57,37,37,27],[57,39,37,29],[57,40,37,30,"x0"],[57,42,37,32],[57,44,37,34,"x1"],[57,46,37,36],[57,47,37,37],[57,50,37,40],[57,54,37,40,"nice"],[57,58,37,44],[57,59,37,44,"default"],[57,66,37,44],[57,68,37,45,"x0"],[57,70,37,47],[57,72,37,49,"x1"],[57,74,37,51],[57,76,37,53,"tn"],[57,78,37,55],[57,79,37,56],[58,8,38,6,"tz"],[58,10,38,8],[58,13,38,11],[58,17,38,11,"ticks"],[58,22,38,16],[58,23,38,16,"default"],[58,30,38,16],[58,32,38,17,"x0"],[58,34,38,19],[58,36,38,21,"x1"],[58,38,38,23],[58,40,38,25,"tn"],[58,42,38,27],[58,43,38,28],[60,8,40,6],[61,8,41,6],[62,8,42,6],[63,8,43,6],[63,12,43,10,"tz"],[63,14,43,12],[63,15,43,13],[63,16,43,14],[63,17,43,15],[63,21,43,19,"x0"],[63,23,43,21],[63,25,43,23,"step"],[63,29,43,27],[63,32,43,30],[63,36,43,30,"tickIncrement"],[63,44,43,43],[63,45,43,43,"tickIncrement"],[63,58,43,43],[63,60,43,44,"x0"],[63,62,43,46],[63,64,43,48,"x1"],[63,66,43,50],[63,68,43,52,"tn"],[63,70,43,54],[63,71,43,55],[65,8,45,6],[66,8,46,6],[67,8,47,6],[68,8,48,6],[69,8,49,6],[70,8,50,6],[71,8,51,6],[72,8,52,6],[72,12,52,10,"tz"],[72,14,52,12],[72,15,52,13,"tz"],[72,17,52,15],[72,18,52,16,"length"],[72,24,52,22],[72,27,52,25],[72,28,52,26],[72,29,52,27],[72,33,52,31,"x1"],[72,35,52,33],[72,37,52,35],[73,10,53,8],[73,14,53,12,"max"],[73,17,53,15],[73,21,53,19,"x1"],[73,23,53,21],[73,27,53,25,"domain"],[73,33,53,31],[73,38,53,36,"extent"],[73,44,53,42],[73,45,53,42,"default"],[73,52,53,42],[73,54,53,44],[74,12,54,10],[74,18,54,16,"step"],[74,22,54,20],[74,25,54,23],[74,29,54,23,"tickIncrement"],[74,37,54,36],[74,38,54,36,"tickIncrement"],[74,51,54,36],[74,53,54,37,"x0"],[74,55,54,39],[74,57,54,41,"x1"],[74,59,54,43],[74,61,54,45,"tn"],[74,63,54,47],[74,64,54,48],[75,12,55,10],[75,16,55,14,"isFinite"],[75,24,55,22],[75,25,55,23,"step"],[75,29,55,27],[75,30,55,28],[75,32,55,30],[76,14,56,12],[76,18,56,16,"step"],[76,22,56,20],[76,25,56,23],[76,26,56,24],[76,28,56,26],[77,16,57,14,"x1"],[77,18,57,16],[77,21,57,19],[77,22,57,20,"Math"],[77,26,57,24],[77,27,57,25,"floor"],[77,32,57,30],[77,33,57,31,"x1"],[77,35,57,33],[77,38,57,36,"step"],[77,42,57,40],[77,43,57,41],[77,46,57,44],[77,47,57,45],[77,51,57,49,"step"],[77,55,57,53],[78,14,58,12],[78,15,58,13],[78,21,58,19],[78,25,58,23,"step"],[78,29,58,27],[78,32,58,30],[78,33,58,31],[78,35,58,33],[79,16,59,14,"x1"],[79,18,59,16],[79,21,59,19],[79,22,59,20,"Math"],[79,26,59,24],[79,27,59,25,"ceil"],[79,31,59,29],[79,32,59,30,"x1"],[79,34,59,32],[79,37,59,35],[79,38,59,36,"step"],[79,42,59,40],[79,43,59,41],[79,46,59,44],[79,47,59,45],[79,51,59,49],[79,52,59,50,"step"],[79,56,59,54],[80,14,60,12],[81,12,61,10],[82,10,62,8],[82,11,62,9],[82,17,62,15],[83,12,63,10,"tz"],[83,14,63,12],[83,15,63,13,"pop"],[83,18,63,16],[83,19,63,17],[83,20,63,18],[84,10,64,8],[85,8,65,6],[86,6,66,4],[88,6,68,4],[89,6,69,4],[90,6,70,4],[90,10,70,8,"m"],[90,11,70,9],[90,14,70,12,"tz"],[90,16,70,14],[90,17,70,15,"length"],[90,23,70,21],[91,8,70,23,"a"],[91,9,70,24],[91,12,70,27],[91,13,70,28],[92,8,70,30,"b"],[92,9,70,31],[92,12,70,34,"m"],[92,13,70,35],[93,6,71,4],[93,13,71,11,"tz"],[93,15,71,13],[93,16,71,14,"a"],[93,17,71,15],[93,18,71,16],[93,22,71,20,"x0"],[93,24,71,22],[93,26,71,24],[93,28,71,26,"a"],[93,29,71,27],[94,6,72,4],[94,13,72,11,"tz"],[94,15,72,13],[94,16,72,14,"b"],[94,17,72,15],[94,20,72,18],[94,21,72,19],[94,22,72,20],[94,25,72,23,"x1"],[94,27,72,25],[94,29,72,27],[94,31,72,29,"b"],[94,32,72,30],[95,6,73,4],[95,10,73,8,"a"],[95,11,73,9],[95,15,73,13,"b"],[95,16,73,14],[95,19,73,17,"m"],[95,20,73,18],[95,22,73,20,"tz"],[95,24,73,22],[95,27,73,25,"tz"],[95,29,73,27],[95,30,73,28,"slice"],[95,35,73,33],[95,36,73,34,"a"],[95,37,73,35],[95,39,73,37,"b"],[95,40,73,38],[95,41,73,39],[95,43,73,41,"m"],[95,44,73,42],[95,47,73,45,"b"],[95,48,73,46],[95,51,73,49,"a"],[95,52,73,50],[96,6,75,4],[96,10,75,8,"bins"],[96,14,75,12],[96,17,75,15],[96,21,75,19,"Array"],[96,26,75,24],[96,27,75,25,"m"],[96,28,75,26],[96,31,75,29],[96,32,75,30],[96,33,75,31],[97,8,76,8,"bin"],[97,11,76,11],[99,6,78,4],[100,6,79,4],[100,11,79,9,"i"],[100,12,79,10],[100,15,79,13],[100,16,79,14],[100,18,79,16,"i"],[100,19,79,17],[100,23,79,21,"m"],[100,24,79,22],[100,26,79,24],[100,28,79,26,"i"],[100,29,79,27],[100,31,79,29],[101,8,80,6,"bin"],[101,11,80,9],[101,14,80,12,"bins"],[101,18,80,16],[101,19,80,17,"i"],[101,20,80,18],[101,21,80,19],[101,24,80,22],[101,26,80,24],[102,8,81,6,"bin"],[102,11,81,9],[102,12,81,10,"x0"],[102,14,81,12],[102,17,81,15,"i"],[102,18,81,16],[102,21,81,19],[102,22,81,20],[102,25,81,23,"tz"],[102,27,81,25],[102,28,81,26,"i"],[102,29,81,27],[102,32,81,30],[102,33,81,31],[102,34,81,32],[102,37,81,35,"x0"],[102,39,81,37],[103,8,82,6,"bin"],[103,11,82,9],[103,12,82,10,"x1"],[103,14,82,12],[103,17,82,15,"i"],[103,18,82,16],[103,21,82,19,"m"],[103,22,82,20],[103,25,82,23,"tz"],[103,27,82,25],[103,28,82,26,"i"],[103,29,82,27],[103,30,82,28],[103,33,82,31,"x1"],[103,35,82,33],[104,6,83,4],[106,6,85,4],[107,6,86,4],[107,10,86,8,"isFinite"],[107,18,86,16],[107,19,86,17,"step"],[107,23,86,21],[107,24,86,22],[107,26,86,24],[108,8,87,6],[108,12,87,10,"step"],[108,16,87,14],[108,19,87,17],[108,20,87,18],[108,22,87,20],[109,10,88,8],[109,15,88,13,"i"],[109,16,88,14],[109,19,88,17],[109,20,88,18],[109,22,88,20,"i"],[109,23,88,21],[109,26,88,24,"n"],[109,27,88,25],[109,29,88,27],[109,31,88,29,"i"],[109,32,88,30],[109,34,88,32],[110,12,89,10],[110,16,89,14],[110,17,89,15,"x"],[110,18,89,16],[110,21,89,19,"values"],[110,27,89,25],[110,28,89,26,"i"],[110,29,89,27],[110,30,89,28],[110,35,89,33],[110,39,89,37],[110,43,89,41,"x0"],[110,45,89,43],[110,49,89,47,"x"],[110,50,89,48],[110,54,89,52,"x"],[110,55,89,53],[110,59,89,57,"x1"],[110,61,89,59],[110,63,89,61],[111,14,90,12,"bins"],[111,18,90,16],[111,19,90,17,"Math"],[111,23,90,21],[111,24,90,22,"min"],[111,27,90,25],[111,28,90,26,"m"],[111,29,90,27],[111,31,90,29,"Math"],[111,35,90,33],[111,36,90,34,"floor"],[111,41,90,39],[111,42,90,40],[111,43,90,41,"x"],[111,44,90,42],[111,47,90,45,"x0"],[111,49,90,47],[111,53,90,51,"step"],[111,57,90,55],[111,58,90,56],[111,59,90,57],[111,60,90,58],[111,61,90,59,"push"],[111,65,90,63],[111,66,90,64,"data"],[111,70,90,68],[111,71,90,69,"i"],[111,72,90,70],[111,73,90,71],[111,74,90,72],[112,12,91,10],[113,10,92,8],[114,8,93,6],[114,9,93,7],[114,15,93,13],[114,19,93,17,"step"],[114,23,93,21],[114,26,93,24],[114,27,93,25],[114,29,93,27],[115,10,94,8],[115,15,94,13,"i"],[115,16,94,14],[115,19,94,17],[115,20,94,18],[115,22,94,20,"i"],[115,23,94,21],[115,26,94,24,"n"],[115,27,94,25],[115,29,94,27],[115,31,94,29,"i"],[115,32,94,30],[115,34,94,32],[116,12,95,10],[116,16,95,14],[116,17,95,15,"x"],[116,18,95,16],[116,21,95,19,"values"],[116,27,95,25],[116,28,95,26,"i"],[116,29,95,27],[116,30,95,28],[116,35,95,33],[116,39,95,37],[116,43,95,41,"x0"],[116,45,95,43],[116,49,95,47,"x"],[116,50,95,48],[116,54,95,52,"x"],[116,55,95,53],[116,59,95,57,"x1"],[116,61,95,59],[116,63,95,61],[117,14,96,12],[117,20,96,18,"j"],[117,21,96,19],[117,24,96,22,"Math"],[117,28,96,26],[117,29,96,27,"floor"],[117,34,96,32],[117,35,96,33],[117,36,96,34,"x0"],[117,38,96,36],[117,41,96,39,"x"],[117,42,96,40],[117,46,96,44,"step"],[117,50,96,48],[117,51,96,49],[118,14,97,12,"bins"],[118,18,97,16],[118,19,97,17,"Math"],[118,23,97,21],[118,24,97,22,"min"],[118,27,97,25],[118,28,97,26,"m"],[118,29,97,27],[118,31,97,29,"j"],[118,32,97,30],[118,36,97,34,"tz"],[118,38,97,36],[118,39,97,37,"j"],[118,40,97,38],[118,41,97,39],[118,45,97,43,"x"],[118,46,97,44],[118,47,97,45],[118,48,97,46],[118,49,97,47],[118,50,97,48,"push"],[118,54,97,52],[118,55,97,53,"data"],[118,59,97,57],[118,60,97,58,"i"],[118,61,97,59],[118,62,97,60],[118,63,97,61],[118,64,97,62],[118,65,97,63],[119,12,98,10],[120,10,99,8],[121,8,100,6],[122,6,101,4],[122,7,101,5],[122,13,101,11],[123,8,102,6],[123,13,102,11,"i"],[123,14,102,12],[123,17,102,15],[123,18,102,16],[123,20,102,18,"i"],[123,21,102,19],[123,24,102,22,"n"],[123,25,102,23],[123,27,102,25],[123,29,102,27,"i"],[123,30,102,28],[123,32,102,30],[124,10,103,8],[124,14,103,12],[124,15,103,13,"x"],[124,16,103,14],[124,19,103,17,"values"],[124,25,103,23],[124,26,103,24,"i"],[124,27,103,25],[124,28,103,26],[124,33,103,31],[124,37,103,35],[124,41,103,39,"x0"],[124,43,103,41],[124,47,103,45,"x"],[124,48,103,46],[124,52,103,50,"x"],[124,53,103,51],[124,57,103,55,"x1"],[124,59,103,57],[124,61,103,59],[125,12,104,10,"bins"],[125,16,104,14],[125,17,104,15],[125,21,104,15,"bisect"],[125,27,104,21],[125,28,104,21,"default"],[125,35,104,21],[125,37,104,22,"tz"],[125,39,104,24],[125,41,104,26,"x"],[125,42,104,27],[125,44,104,29],[125,45,104,30],[125,47,104,32,"m"],[125,48,104,33],[125,49,104,34],[125,50,104,35],[125,51,104,36,"push"],[125,55,104,40],[125,56,104,41,"data"],[125,60,104,45],[125,61,104,46,"i"],[125,62,104,47],[125,63,104,48],[125,64,104,49],[126,10,105,8],[127,8,106,6],[128,6,107,4],[129,6,109,4],[129,13,109,11,"bins"],[129,17,109,15],[130,4,110,2],[131,4,112,2,"histogram"],[131,13,112,11],[131,14,112,12,"value"],[131,19,112,17],[131,22,112,20],[131,32,112,29,"_"],[131,33,112,30],[131,35,112,32],[132,6,113,4],[132,13,113,11,"arguments"],[132,22,113,20],[132,23,113,21,"length"],[132,29,113,27],[132,33,113,31,"value"],[132,38,113,36],[132,41,113,39],[132,48,113,46,"_"],[132,49,113,47],[132,54,113,52],[132,64,113,62],[132,67,113,65,"_"],[132,68,113,66],[132,71,113,69],[132,75,113,69,"constant"],[132,83,113,77],[132,84,113,77,"default"],[132,91,113,77],[132,93,113,78,"_"],[132,94,113,79],[132,95,113,80],[132,97,113,82,"histogram"],[132,106,113,91],[132,110,113,95,"value"],[132,115,113,100],[133,4,114,2],[133,5,114,3],[134,4,116,2,"histogram"],[134,13,116,11],[134,14,116,12,"domain"],[134,20,116,18],[134,23,116,21],[134,33,116,30,"_"],[134,34,116,31],[134,36,116,33],[135,6,117,4],[135,13,117,11,"arguments"],[135,22,117,20],[135,23,117,21,"length"],[135,29,117,27],[135,33,117,31,"domain"],[135,39,117,37],[135,42,117,40],[135,49,117,47,"_"],[135,50,117,48],[135,55,117,53],[135,65,117,63],[135,68,117,66,"_"],[135,69,117,67],[135,72,117,70],[135,76,117,70,"constant"],[135,84,117,78],[135,85,117,78,"default"],[135,92,117,78],[135,94,117,79],[135,95,117,80,"_"],[135,96,117,81],[135,97,117,82],[135,98,117,83],[135,99,117,84],[135,101,117,86,"_"],[135,102,117,87],[135,103,117,88],[135,104,117,89],[135,105,117,90],[135,106,117,91],[135,107,117,92],[135,109,117,94,"histogram"],[135,118,117,103],[135,122,117,107,"domain"],[135,128,117,113],[136,4,118,2],[136,5,118,3],[137,4,120,2,"histogram"],[137,13,120,11],[137,14,120,12,"thresholds"],[137,24,120,22],[137,27,120,25],[137,37,120,34,"_"],[137,38,120,35],[137,40,120,37],[138,6,121,4],[138,13,121,11,"arguments"],[138,22,121,20],[138,23,121,21,"length"],[138,29,121,27],[138,33,121,31,"threshold"],[138,42,121,40],[138,45,121,43],[138,52,121,50,"_"],[138,53,121,51],[138,58,121,56],[138,68,121,66],[138,71,121,69,"_"],[138,72,121,70],[138,75,121,73],[138,79,121,73,"constant"],[138,87,121,81],[138,88,121,81,"default"],[138,95,121,81],[138,97,121,82,"Array"],[138,102,121,87],[138,103,121,88,"isArray"],[138,110,121,95],[138,111,121,96,"_"],[138,112,121,97],[138,113,121,98],[138,116,121,101,"slice"],[138,124,121,106],[138,125,121,106,"slice"],[138,130,121,106],[138,131,121,107,"call"],[138,135,121,111],[138,136,121,112,"_"],[138,137,121,113],[138,138,121,114],[138,141,121,117,"_"],[138,142,121,118],[138,143,121,119],[138,145,121,121,"histogram"],[138,154,121,130],[138,158,121,134,"threshold"],[138,167,121,143],[139,4,122,2],[139,5,122,3],[140,4,124,2],[140,11,124,9,"histogram"],[140,20,124,18],[141,2,125,0],[142,0,125,1],[142,3]],"functionMap":{"names":["<global>","bin","histogram","histogram.value","histogram.domain","histogram.thresholds"],"mappings":"AAA;eCS;ECK;GD+F;oBEE;GFE;qBGE;GHE;yBIE;GJE;CDG"},"hasCjsExports":false},"type":"js/module"}]}