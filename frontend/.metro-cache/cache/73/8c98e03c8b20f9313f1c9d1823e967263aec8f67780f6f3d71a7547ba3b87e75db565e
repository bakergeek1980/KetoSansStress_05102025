{"dependencies":[{"name":"d3-array","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"6/g0OmizGembrwGL3ynTnrgY1Es=","exportNames":["*"],"imports":1}},{"name":"./continuous.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":41,"index":95}}],"key":"SbgibKyskRec40eaH/MYNIXuEto=","exportNames":["*"],"imports":1}},{"name":"./init.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":96},"end":{"line":3,"column":43,"index":139}}],"key":"T/z5w4vOvjDtodMXYiKznwC3zLs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return sequentialQuantile;\n    }\n  });\n  var _d3Array = require(_dependencyMap[0], \"d3-array\");\n  var _continuousJs = require(_dependencyMap[1], \"./continuous.js\");\n  var _initJs = require(_dependencyMap[2], \"./init.js\");\n  function sequentialQuantile() {\n    var domain = [],\n      interpolator = _continuousJs.identity;\n    function scale(x) {\n      if (x != null && !isNaN(x = +x)) return interpolator(((0, _d3Array.bisect)(domain, x, 1) - 1) / (domain.length - 1));\n    }\n    scale.domain = function (_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n      for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n      domain.sort(_d3Array.ascending);\n      return scale;\n    };\n    scale.interpolator = function (_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n    scale.range = function () {\n      return domain.map((d, i) => interpolator(i / (domain.length - 1)));\n    };\n    scale.quantiles = function (n) {\n      return Array.from({\n        length: n + 1\n      }, (_, i) => (0, _d3Array.quantile)(domain, i / n));\n    };\n    scale.copy = function () {\n      return sequentialQuantile(interpolator).domain(domain);\n    };\n    return _initJs.initInterpolator.apply(scale, arguments);\n  }\n});","lineCount":45,"map":[[7,2,5,15,"Object"],[7,8,5,15],[7,9,5,15,"defineProperty"],[7,23,5,15],[7,24,5,15,"exports"],[7,31,5,15],[8,4,5,15,"enumerable"],[8,14,5,15],[9,4,5,15,"get"],[9,7,5,15],[9,18,5,15,"get"],[9,19,5,15],[10,6,5,15],[10,13,5,15,"sequentialQuantile"],[10,31,5,15],[11,4,5,15],[12,2,5,15],[13,2,1,0],[13,6,1,0,"_d3Array"],[13,14,1,0],[13,17,1,0,"require"],[13,24,1,0],[13,25,1,0,"_dependencyMap"],[13,39,1,0],[14,2,2,0],[14,6,2,0,"_continuousJs"],[14,19,2,0],[14,22,2,0,"require"],[14,29,2,0],[14,30,2,0,"_dependencyMap"],[14,44,2,0],[15,2,3,0],[15,6,3,0,"_initJs"],[15,13,3,0],[15,16,3,0,"require"],[15,23,3,0],[15,24,3,0,"_dependencyMap"],[15,38,3,0],[16,2,5,15],[16,11,5,24,"sequentialQuantile"],[16,29,5,42,"sequentialQuantile"],[16,30,5,42],[16,32,5,45],[17,4,6,2],[17,8,6,6,"domain"],[17,14,6,12],[17,17,6,15],[17,19,6,17],[18,6,7,6,"interpolator"],[18,18,7,18],[18,21,7,21,"identity"],[18,34,7,29],[18,35,7,29,"identity"],[18,43,7,29],[19,4,9,2],[19,13,9,11,"scale"],[19,18,9,16,"scale"],[19,19,9,17,"x"],[19,20,9,18],[19,22,9,20],[20,6,10,4],[20,10,10,8,"x"],[20,11,10,9],[20,15,10,13],[20,19,10,17],[20,23,10,21],[20,24,10,22,"isNaN"],[20,29,10,27],[20,30,10,28,"x"],[20,31,10,29],[20,34,10,32],[20,35,10,33,"x"],[20,36,10,34],[20,37,10,35],[20,39,10,37],[20,46,10,44,"interpolator"],[20,58,10,56],[20,59,10,57],[20,60,10,58],[20,64,10,58,"bisect"],[20,72,10,64],[20,73,10,64,"bisect"],[20,79,10,64],[20,81,10,65,"domain"],[20,87,10,71],[20,89,10,73,"x"],[20,90,10,74],[20,92,10,76],[20,93,10,77],[20,94,10,78],[20,97,10,81],[20,98,10,82],[20,103,10,87,"domain"],[20,109,10,93],[20,110,10,94,"length"],[20,116,10,100],[20,119,10,103],[20,120,10,104],[20,121,10,105],[20,122,10,106],[21,4,11,2],[22,4,13,2,"scale"],[22,9,13,7],[22,10,13,8,"domain"],[22,16,13,14],[22,19,13,17],[22,29,13,26,"_"],[22,30,13,27],[22,32,13,29],[23,6,14,4],[23,10,14,8],[23,11,14,9,"arguments"],[23,20,14,18],[23,21,14,19,"length"],[23,27,14,25],[23,29,14,27],[23,36,14,34,"domain"],[23,42,14,40],[23,43,14,41,"slice"],[23,48,14,46],[23,49,14,47],[23,50,14,48],[24,6,15,4,"domain"],[24,12,15,10],[24,15,15,13],[24,17,15,15],[25,6,16,4],[25,11,16,9],[25,15,16,13,"d"],[25,16,16,14],[25,20,16,18,"_"],[25,21,16,19],[25,23,16,21],[25,27,16,25,"d"],[25,28,16,26],[25,32,16,30],[25,36,16,34],[25,40,16,38],[25,41,16,39,"isNaN"],[25,46,16,44],[25,47,16,45,"d"],[25,48,16,46],[25,51,16,49],[25,52,16,50,"d"],[25,53,16,51],[25,54,16,52],[25,56,16,54,"domain"],[25,62,16,60],[25,63,16,61,"push"],[25,67,16,65],[25,68,16,66,"d"],[25,69,16,67],[25,70,16,68],[26,6,17,4,"domain"],[26,12,17,10],[26,13,17,11,"sort"],[26,17,17,15],[26,18,17,16,"ascending"],[26,26,17,25],[26,27,17,25,"ascending"],[26,36,17,25],[26,37,17,26],[27,6,18,4],[27,13,18,11,"scale"],[27,18,18,16],[28,4,19,2],[28,5,19,3],[29,4,21,2,"scale"],[29,9,21,7],[29,10,21,8,"interpolator"],[29,22,21,20],[29,25,21,23],[29,35,21,32,"_"],[29,36,21,33],[29,38,21,35],[30,6,22,4],[30,13,22,11,"arguments"],[30,22,22,20],[30,23,22,21,"length"],[30,29,22,27],[30,33,22,31,"interpolator"],[30,45,22,43],[30,48,22,46,"_"],[30,49,22,47],[30,51,22,49,"scale"],[30,56,22,54],[30,60,22,58,"interpolator"],[30,72,22,70],[31,4,23,2],[31,5,23,3],[32,4,25,2,"scale"],[32,9,25,7],[32,10,25,8,"range"],[32,15,25,13],[32,18,25,16],[32,30,25,27],[33,6,26,4],[33,13,26,11,"domain"],[33,19,26,17],[33,20,26,18,"map"],[33,23,26,21],[33,24,26,22],[33,25,26,23,"d"],[33,26,26,24],[33,28,26,26,"i"],[33,29,26,27],[33,34,26,32,"interpolator"],[33,46,26,44],[33,47,26,45,"i"],[33,48,26,46],[33,52,26,50,"domain"],[33,58,26,56],[33,59,26,57,"length"],[33,65,26,63],[33,68,26,66],[33,69,26,67],[33,70,26,68],[33,71,26,69],[33,72,26,70],[34,4,27,2],[34,5,27,3],[35,4,29,2,"scale"],[35,9,29,7],[35,10,29,8,"quantiles"],[35,19,29,17],[35,22,29,20],[35,32,29,29,"n"],[35,33,29,30],[35,35,29,32],[36,6,30,4],[36,13,30,11,"Array"],[36,18,30,16],[36,19,30,17,"from"],[36,23,30,21],[36,24,30,22],[37,8,30,23,"length"],[37,14,30,29],[37,16,30,31,"n"],[37,17,30,32],[37,20,30,35],[38,6,30,36],[38,7,30,37],[38,9,30,39],[38,10,30,40,"_"],[38,11,30,41],[38,13,30,43,"i"],[38,14,30,44],[38,19,30,49],[38,23,30,49,"quantile"],[38,31,30,57],[38,32,30,57,"quantile"],[38,40,30,57],[38,42,30,58,"domain"],[38,48,30,64],[38,50,30,66,"i"],[38,51,30,67],[38,54,30,70,"n"],[38,55,30,71],[38,56,30,72],[38,57,30,73],[39,4,31,2],[39,5,31,3],[40,4,33,2,"scale"],[40,9,33,7],[40,10,33,8,"copy"],[40,14,33,12],[40,17,33,15],[40,29,33,26],[41,6,34,4],[41,13,34,11,"sequentialQuantile"],[41,31,34,29],[41,32,34,30,"interpolator"],[41,44,34,42],[41,45,34,43],[41,46,34,44,"domain"],[41,52,34,50],[41,53,34,51,"domain"],[41,59,34,57],[41,60,34,58],[42,4,35,2],[42,5,35,3],[43,4,37,2],[43,11,37,9,"initInterpolator"],[43,18,37,25],[43,19,37,25,"initInterpolator"],[43,35,37,25],[43,36,37,26,"apply"],[43,41,37,31],[43,42,37,32,"scale"],[43,47,37,37],[43,49,37,39,"arguments"],[43,58,37,48],[43,59,37,49],[44,2,38,0],[45,0,38,1],[45,3]],"functionMap":{"names":["<global>","sequentialQuantile","scale","scale.domain","scale.interpolator","scale.range","domain.map$argument_0","scale.quantiles","Array.from$argument_1","scale.copy"],"mappings":"AAA;eCI;ECI;GDE;iBEE;GFM;uBGE;GHE;gBIE;sBCC,+CD;GJC;oBME;uCCC,iCD;GNC;eQE;GRE;CDG"},"hasCjsExports":false},"type":"js/module"}]}