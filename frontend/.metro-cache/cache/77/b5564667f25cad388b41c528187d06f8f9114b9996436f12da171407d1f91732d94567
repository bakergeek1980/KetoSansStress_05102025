{"dependencies":[{"name":"./interval.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"X1dfJm+wJnoZKCHgLz1H5kHzesA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"millisecond\", {\n    enumerable: true,\n    get: function () {\n      return millisecond;\n    }\n  });\n  Object.defineProperty(exports, \"milliseconds\", {\n    enumerable: true,\n    get: function () {\n      return milliseconds;\n    }\n  });\n  var _intervalJs = require(_dependencyMap[0], \"./interval.js\");\n  const millisecond = (0, _intervalJs.timeInterval)(() => {\n    // noop\n  }, (date, step) => {\n    date.setTime(+date + step);\n  }, (start, end) => {\n    return end - start;\n  });\n\n  // An optimized implementation for this simple case.\n  millisecond.every = k => {\n    k = Math.floor(k);\n    if (!isFinite(k) || !(k > 0)) return null;\n    if (!(k > 1)) return millisecond;\n    return (0, _intervalJs.timeInterval)(date => {\n      date.setTime(Math.floor(date / k) * k);\n    }, (date, step) => {\n      date.setTime(+date + step * k);\n    }, (start, end) => {\n      return (end - start) / k;\n    });\n  };\n  const milliseconds = millisecond.range;\n});","lineCount":42,"map":[[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"enumerable"],[8,14,3,0],[9,4,3,0,"get"],[9,7,3,0],[9,18,3,0,"get"],[9,19,3,0],[10,6,3,0],[10,13,3,0,"millisecond"],[10,24,3,0],[11,4,3,0],[12,2,3,0],[13,2,25,0,"Object"],[13,8,25,0],[13,9,25,0,"defineProperty"],[13,23,25,0],[13,24,25,0,"exports"],[13,31,25,0],[14,4,25,0,"enumerable"],[14,14,25,0],[15,4,25,0,"get"],[15,7,25,0],[15,18,25,0,"get"],[15,19,25,0],[16,6,25,0],[16,13,25,0,"milliseconds"],[16,25,25,0],[17,4,25,0],[18,2,25,0],[19,2,1,0],[19,6,1,0,"_intervalJs"],[19,17,1,0],[19,20,1,0,"require"],[19,27,1,0],[19,28,1,0,"_dependencyMap"],[19,42,1,0],[20,2,3,7],[20,8,3,13,"millisecond"],[20,19,3,24],[20,22,3,27],[20,26,3,27,"timeInterval"],[20,37,3,39],[20,38,3,39,"timeInterval"],[20,50,3,39],[20,52,3,40],[20,58,3,46],[21,4,4,2],[22,2,4,2],[22,3,5,1],[22,5,5,3],[22,6,5,4,"date"],[22,10,5,8],[22,12,5,10,"step"],[22,16,5,14],[22,21,5,19],[23,4,6,2,"date"],[23,8,6,6],[23,9,6,7,"setTime"],[23,16,6,14],[23,17,6,15],[23,18,6,16,"date"],[23,22,6,20],[23,25,6,23,"step"],[23,29,6,27],[23,30,6,28],[24,2,7,0],[24,3,7,1],[24,5,7,3],[24,6,7,4,"start"],[24,11,7,9],[24,13,7,11,"end"],[24,16,7,14],[24,21,7,19],[25,4,8,2],[25,11,8,9,"end"],[25,14,8,12],[25,17,8,15,"start"],[25,22,8,20],[26,2,9,0],[26,3,9,1],[26,4,9,2],[28,2,11,0],[29,2,12,0,"millisecond"],[29,13,12,11],[29,14,12,12,"every"],[29,19,12,17],[29,22,12,21,"k"],[29,23,12,22],[29,27,12,27],[30,4,13,2,"k"],[30,5,13,3],[30,8,13,6,"Math"],[30,12,13,10],[30,13,13,11,"floor"],[30,18,13,16],[30,19,13,17,"k"],[30,20,13,18],[30,21,13,19],[31,4,14,2],[31,8,14,6],[31,9,14,7,"isFinite"],[31,17,14,15],[31,18,14,16,"k"],[31,19,14,17],[31,20,14,18],[31,24,14,22],[31,26,14,24,"k"],[31,27,14,25],[31,30,14,28],[31,31,14,29],[31,32,14,30],[31,34,14,32],[31,41,14,39],[31,45,14,43],[32,4,15,2],[32,8,15,6],[32,10,15,8,"k"],[32,11,15,9],[32,14,15,12],[32,15,15,13],[32,16,15,14],[32,18,15,16],[32,25,15,23,"millisecond"],[32,36,15,34],[33,4,16,2],[33,11,16,9],[33,15,16,9,"timeInterval"],[33,26,16,21],[33,27,16,21,"timeInterval"],[33,39,16,21],[33,41,16,23,"date"],[33,45,16,27],[33,49,16,32],[34,6,17,4,"date"],[34,10,17,8],[34,11,17,9,"setTime"],[34,18,17,16],[34,19,17,17,"Math"],[34,23,17,21],[34,24,17,22,"floor"],[34,29,17,27],[34,30,17,28,"date"],[34,34,17,32],[34,37,17,35,"k"],[34,38,17,36],[34,39,17,37],[34,42,17,40,"k"],[34,43,17,41],[34,44,17,42],[35,4,18,2],[35,5,18,3],[35,7,18,5],[35,8,18,6,"date"],[35,12,18,10],[35,14,18,12,"step"],[35,18,18,16],[35,23,18,21],[36,6,19,4,"date"],[36,10,19,8],[36,11,19,9,"setTime"],[36,18,19,16],[36,19,19,17],[36,20,19,18,"date"],[36,24,19,22],[36,27,19,25,"step"],[36,31,19,29],[36,34,19,32,"k"],[36,35,19,33],[36,36,19,34],[37,4,20,2],[37,5,20,3],[37,7,20,5],[37,8,20,6,"start"],[37,13,20,11],[37,15,20,13,"end"],[37,18,20,16],[37,23,20,21],[38,6,21,4],[38,13,21,11],[38,14,21,12,"end"],[38,17,21,15],[38,20,21,18,"start"],[38,25,21,23],[38,29,21,27,"k"],[38,30,21,28],[39,4,22,2],[39,5,22,3],[39,6,22,4],[40,2,23,0],[40,3,23,1],[41,2,25,7],[41,8,25,13,"milliseconds"],[41,20,25,25],[41,23,25,28,"millisecond"],[41,34,25,39],[41,35,25,40,"range"],[41,40,25,45],[42,0,25,46],[42,3]],"functionMap":{"names":["<global>","timeInterval$argument_0","timeInterval$argument_1","timeInterval$argument_2","every"],"mappings":"AAA;wCCE;CDE,EE;CFE,EG;CHE;oBIG;sBHI;GGE,EF;GEE,ED;GCE;CJC"},"hasCjsExports":false},"type":"js/module"}]}