{"dependencies":[{"name":"./linear.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"suKeCidbwZn9gGj5VSO9qUqIGq8=","exportNames":["*"],"imports":1}},{"name":"./number.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":39},"end":{"line":2,"column":33,"index":72}}],"key":"w4P1FDzGs0ASsf2e4lI982y148w=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return identity;\n    }\n  });\n  var _linearJs = require(_dependencyMap[0], \"./linear.js\");\n  var _numberJs = require(_dependencyMap[1], \"./number.js\");\n  var number = _interopDefault(_numberJs);\n  function identity(domain) {\n    var unknown;\n    function scale(x) {\n      return x == null || isNaN(x = +x) ? unknown : x;\n    }\n    scale.invert = scale;\n    scale.domain = scale.range = function (_) {\n      return arguments.length ? (domain = Array.from(_, number.default), scale) : domain.slice();\n    };\n    scale.unknown = function (_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n    scale.copy = function () {\n      return identity(domain).unknown(unknown);\n    };\n    domain = arguments.length ? Array.from(domain, number.default) : [0, 1];\n    return (0, _linearJs.linearish)(scale);\n  }\n});","lineCount":39,"map":[[12,2,4,15,"Object"],[12,8,4,15],[12,9,4,15,"defineProperty"],[12,23,4,15],[12,24,4,15,"exports"],[12,31,4,15],[13,4,4,15,"enumerable"],[13,14,4,15],[14,4,4,15,"get"],[14,7,4,15],[14,18,4,15,"get"],[14,19,4,15],[15,6,4,15],[15,13,4,15,"identity"],[15,21,4,15],[16,4,4,15],[17,2,4,15],[18,2,1,0],[18,6,1,0,"_linearJs"],[18,15,1,0],[18,18,1,0,"require"],[18,25,1,0],[18,26,1,0,"_dependencyMap"],[18,40,1,0],[19,2,2,0],[19,6,2,0,"_numberJs"],[19,15,2,0],[19,18,2,0,"require"],[19,25,2,0],[19,26,2,0,"_dependencyMap"],[19,40,2,0],[20,2,2,0],[20,6,2,0,"number"],[20,12,2,0],[20,15,2,0,"_interopDefault"],[20,30,2,0],[20,31,2,0,"_numberJs"],[20,40,2,0],[21,2,4,15],[21,11,4,24,"identity"],[21,19,4,32,"identity"],[21,20,4,33,"domain"],[21,26,4,39],[21,28,4,41],[22,4,5,2],[22,8,5,6,"unknown"],[22,15,5,13],[23,4,7,2],[23,13,7,11,"scale"],[23,18,7,16,"scale"],[23,19,7,17,"x"],[23,20,7,18],[23,22,7,20],[24,6,8,4],[24,13,8,11,"x"],[24,14,8,12],[24,18,8,16],[24,22,8,20],[24,26,8,24,"isNaN"],[24,31,8,29],[24,32,8,30,"x"],[24,33,8,31],[24,36,8,34],[24,37,8,35,"x"],[24,38,8,36],[24,39,8,37],[24,42,8,40,"unknown"],[24,49,8,47],[24,52,8,50,"x"],[24,53,8,51],[25,4,9,2],[26,4,11,2,"scale"],[26,9,11,7],[26,10,11,8,"invert"],[26,16,11,14],[26,19,11,17,"scale"],[26,24,11,22],[27,4,13,2,"scale"],[27,9,13,7],[27,10,13,8,"domain"],[27,16,13,14],[27,19,13,17,"scale"],[27,24,13,22],[27,25,13,23,"range"],[27,30,13,28],[27,33,13,31],[27,43,13,40,"_"],[27,44,13,41],[27,46,13,43],[28,6,14,4],[28,13,14,11,"arguments"],[28,22,14,20],[28,23,14,21,"length"],[28,29,14,27],[28,33,14,31,"domain"],[28,39,14,37],[28,42,14,40,"Array"],[28,47,14,45],[28,48,14,46,"from"],[28,52,14,50],[28,53,14,51,"_"],[28,54,14,52],[28,56,14,54,"number"],[28,62,14,60],[28,63,14,60,"default"],[28,70,14,60],[28,71,14,61],[28,73,14,63,"scale"],[28,78,14,68],[28,82,14,72,"domain"],[28,88,14,78],[28,89,14,79,"slice"],[28,94,14,84],[28,95,14,85],[28,96,14,86],[29,4,15,2],[29,5,15,3],[30,4,17,2,"scale"],[30,9,17,7],[30,10,17,8,"unknown"],[30,17,17,15],[30,20,17,18],[30,30,17,27,"_"],[30,31,17,28],[30,33,17,30],[31,6,18,4],[31,13,18,11,"arguments"],[31,22,18,20],[31,23,18,21,"length"],[31,29,18,27],[31,33,18,31,"unknown"],[31,40,18,38],[31,43,18,41,"_"],[31,44,18,42],[31,46,18,44,"scale"],[31,51,18,49],[31,55,18,53,"unknown"],[31,62,18,60],[32,4,19,2],[32,5,19,3],[33,4,21,2,"scale"],[33,9,21,7],[33,10,21,8,"copy"],[33,14,21,12],[33,17,21,15],[33,29,21,26],[34,6,22,4],[34,13,22,11,"identity"],[34,21,22,19],[34,22,22,20,"domain"],[34,28,22,26],[34,29,22,27],[34,30,22,28,"unknown"],[34,37,22,35],[34,38,22,36,"unknown"],[34,45,22,43],[34,46,22,44],[35,4,23,2],[35,5,23,3],[36,4,25,2,"domain"],[36,10,25,8],[36,13,25,11,"arguments"],[36,22,25,20],[36,23,25,21,"length"],[36,29,25,27],[36,32,25,30,"Array"],[36,37,25,35],[36,38,25,36,"from"],[36,42,25,40],[36,43,25,41,"domain"],[36,49,25,47],[36,51,25,49,"number"],[36,57,25,55],[36,58,25,55,"default"],[36,65,25,55],[36,66,25,56],[36,69,25,59],[36,70,25,60],[36,71,25,61],[36,73,25,63],[36,74,25,64],[36,75,25,65],[37,4,27,2],[37,11,27,9],[37,15,27,9,"linearish"],[37,24,27,18],[37,25,27,18,"linearish"],[37,34,27,18],[37,36,27,19,"scale"],[37,41,27,24],[37,42,27,25],[38,2,28,0],[39,0,28,1],[39,3]],"functionMap":{"names":["<global>","identity","scale","scale.range","scale.unknown","scale.copy"],"mappings":"AAA;eCG;ECG;GDE;+BEI;GFE;kBGE;GHE;eIE;GJE;CDK"},"hasCjsExports":false},"type":"js/module"}]}