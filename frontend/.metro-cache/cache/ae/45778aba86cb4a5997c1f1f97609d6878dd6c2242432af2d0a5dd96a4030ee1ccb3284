{"dependencies":[{"name":"./max.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":27,"index":27}}],"key":"/ig9kvdgCUKfntz07z+RRKdvFCY=","exportNames":["*"],"imports":1}},{"name":"./maxIndex.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":28},"end":{"line":2,"column":37,"index":65}}],"key":"KE3tmmOpqgjz6VSooCzDUS9sGHk=","exportNames":["*"],"imports":1}},{"name":"./min.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":66},"end":{"line":3,"column":27,"index":93}}],"key":"IaiS1NqD3bj2r8kvzJAuj5V7ZVA=","exportNames":["*"],"imports":1}},{"name":"./minIndex.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":94},"end":{"line":4,"column":37,"index":131}}],"key":"aTYV7eFuDmeHimjPKEpQeimLO0k=","exportNames":["*"],"imports":1}},{"name":"./quickselect.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":132},"end":{"line":5,"column":43,"index":175}}],"key":"J7tfny0YGIiyUo+RMcFF/uobJuA=","exportNames":["*"],"imports":1}},{"name":"./number.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":176},"end":{"line":6,"column":44,"index":220}}],"key":"w4P1FDzGs0ASsf2e4lI982y148w=","exportNames":["*"],"imports":1}},{"name":"./sort.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":221},"end":{"line":7,"column":43,"index":264}}],"key":"ro8tJYy4r/rYT4XbEZc7ooHI910=","exportNames":["*"],"imports":1}},{"name":"./greatest.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":265},"end":{"line":8,"column":37,"index":302}}],"key":"aS1X8q/V7Zhx4yPtDlPtdAadrXc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return quantile;\n    }\n  });\n  exports.quantileSorted = quantileSorted;\n  exports.quantileIndex = quantileIndex;\n  var _maxJs = require(_dependencyMap[0], \"./max.js\");\n  var max = _interopDefault(_maxJs);\n  var _maxIndexJs = require(_dependencyMap[1], \"./maxIndex.js\");\n  var maxIndex = _interopDefault(_maxIndexJs);\n  var _minJs = require(_dependencyMap[2], \"./min.js\");\n  var min = _interopDefault(_minJs);\n  var _minIndexJs = require(_dependencyMap[3], \"./minIndex.js\");\n  var minIndex = _interopDefault(_minIndexJs);\n  var _quickselectJs = require(_dependencyMap[4], \"./quickselect.js\");\n  var quickselect = _interopDefault(_quickselectJs);\n  var _numberJs = require(_dependencyMap[5], \"./number.js\");\n  var number = _interopDefault(_numberJs);\n  var _sortJs = require(_dependencyMap[6], \"./sort.js\");\n  var _greatestJs = require(_dependencyMap[7], \"./greatest.js\");\n  var greatest = _interopDefault(_greatestJs);\n  function quantile(values, p, valueof) {\n    values = Float64Array.from((0, _numberJs.numbers)(values, valueof));\n    if (!(n = values.length) || isNaN(p = +p)) return;\n    if (p <= 0 || n < 2) return (0, min.default)(values);\n    if (p >= 1) return (0, max.default)(values);\n    var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = (0, max.default)((0, quickselect.default)(values, i0).subarray(0, i0 + 1)),\n      value1 = (0, min.default)(values.subarray(i0 + 1));\n    return value0 + (value1 - value0) * (i - i0);\n  }\n  function quantileSorted(values, p, valueof = number.default) {\n    if (!(n = values.length) || isNaN(p = +p)) return;\n    if (p <= 0 || n < 2) return +valueof(values[0], 0, values);\n    if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n    var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n    return value0 + (value1 - value0) * (i - i0);\n  }\n  function quantileIndex(values, p, valueof = number.default) {\n    if (isNaN(p = +p)) return;\n    numbers = Float64Array.from(values, (_, i) => (0, number.default)(valueof(values[i], i, values)));\n    if (p <= 0) return (0, minIndex.default)(numbers);\n    if (p >= 1) return (0, maxIndex.default)(numbers);\n    var numbers,\n      index = Uint32Array.from(values, (_, i) => i),\n      j = numbers.length - 1,\n      i = Math.floor(j * p);\n    (0, quickselect.default)(index, i, 0, j, (i, j) => (0, _sortJs.ascendingDefined)(numbers[i], numbers[j]));\n    i = (0, greatest.default)(index.subarray(0, i + 1), i => numbers[i]);\n    return i >= 0 ? i : -1;\n  }\n});","lineCount":71,"map":[[12,2,10,15,"Object"],[12,8,10,15],[12,9,10,15,"defineProperty"],[12,23,10,15],[12,24,10,15,"exports"],[12,31,10,15],[13,4,10,15,"enumerable"],[13,14,10,15],[14,4,10,15,"get"],[14,7,10,15],[14,18,10,15,"get"],[14,19,10,15],[15,6,10,15],[15,13,10,15,"quantile"],[15,21,10,15],[16,4,10,15],[17,2,10,15],[18,2,23,0,"exports"],[18,9,23,0],[18,10,23,0,"quantileSorted"],[18,24,23,0],[18,27,23,0,"quantileSorted"],[18,41,23,0],[19,2,35,0,"exports"],[19,9,35,0],[19,10,35,0,"quantileIndex"],[19,23,35,0],[19,26,35,0,"quantileIndex"],[19,39,35,0],[20,2,1,0],[20,6,1,0,"_maxJs"],[20,12,1,0],[20,15,1,0,"require"],[20,22,1,0],[20,23,1,0,"_dependencyMap"],[20,37,1,0],[21,2,1,0],[21,6,1,0,"max"],[21,9,1,0],[21,12,1,0,"_interopDefault"],[21,27,1,0],[21,28,1,0,"_maxJs"],[21,34,1,0],[22,2,2,0],[22,6,2,0,"_maxIndexJs"],[22,17,2,0],[22,20,2,0,"require"],[22,27,2,0],[22,28,2,0,"_dependencyMap"],[22,42,2,0],[23,2,2,0],[23,6,2,0,"maxIndex"],[23,14,2,0],[23,17,2,0,"_interopDefault"],[23,32,2,0],[23,33,2,0,"_maxIndexJs"],[23,44,2,0],[24,2,3,0],[24,6,3,0,"_minJs"],[24,12,3,0],[24,15,3,0,"require"],[24,22,3,0],[24,23,3,0,"_dependencyMap"],[24,37,3,0],[25,2,3,0],[25,6,3,0,"min"],[25,9,3,0],[25,12,3,0,"_interopDefault"],[25,27,3,0],[25,28,3,0,"_minJs"],[25,34,3,0],[26,2,4,0],[26,6,4,0,"_minIndexJs"],[26,17,4,0],[26,20,4,0,"require"],[26,27,4,0],[26,28,4,0,"_dependencyMap"],[26,42,4,0],[27,2,4,0],[27,6,4,0,"minIndex"],[27,14,4,0],[27,17,4,0,"_interopDefault"],[27,32,4,0],[27,33,4,0,"_minIndexJs"],[27,44,4,0],[28,2,5,0],[28,6,5,0,"_quickselectJs"],[28,20,5,0],[28,23,5,0,"require"],[28,30,5,0],[28,31,5,0,"_dependencyMap"],[28,45,5,0],[29,2,5,0],[29,6,5,0,"quickselect"],[29,17,5,0],[29,20,5,0,"_interopDefault"],[29,35,5,0],[29,36,5,0,"_quickselectJs"],[29,50,5,0],[30,2,6,0],[30,6,6,0,"_numberJs"],[30,15,6,0],[30,18,6,0,"require"],[30,25,6,0],[30,26,6,0,"_dependencyMap"],[30,40,6,0],[31,2,6,0],[31,6,6,0,"number"],[31,12,6,0],[31,15,6,0,"_interopDefault"],[31,30,6,0],[31,31,6,0,"_numberJs"],[31,40,6,0],[32,2,7,0],[32,6,7,0,"_sortJs"],[32,13,7,0],[32,16,7,0,"require"],[32,23,7,0],[32,24,7,0,"_dependencyMap"],[32,38,7,0],[33,2,8,0],[33,6,8,0,"_greatestJs"],[33,17,8,0],[33,20,8,0,"require"],[33,27,8,0],[33,28,8,0,"_dependencyMap"],[33,42,8,0],[34,2,8,0],[34,6,8,0,"greatest"],[34,14,8,0],[34,17,8,0,"_interopDefault"],[34,32,8,0],[34,33,8,0,"_greatestJs"],[34,44,8,0],[35,2,10,15],[35,11,10,24,"quantile"],[35,19,10,32,"quantile"],[35,20,10,33,"values"],[35,26,10,39],[35,28,10,41,"p"],[35,29,10,42],[35,31,10,44,"valueof"],[35,38,10,51],[35,40,10,53],[36,4,11,2,"values"],[36,10,11,8],[36,13,11,11,"Float64Array"],[36,25,11,23],[36,26,11,24,"from"],[36,30,11,28],[36,31,11,29],[36,35,11,29,"numbers"],[36,44,11,36],[36,45,11,36,"numbers"],[36,52,11,36],[36,54,11,37,"values"],[36,60,11,43],[36,62,11,45,"valueof"],[36,69,11,52],[36,70,11,53],[36,71,11,54],[37,4,12,2],[37,8,12,6],[37,10,12,8,"n"],[37,11,12,9],[37,14,12,12,"values"],[37,20,12,18],[37,21,12,19,"length"],[37,27,12,25],[37,28,12,26],[37,32,12,30,"isNaN"],[37,37,12,35],[37,38,12,36,"p"],[37,39,12,37],[37,42,12,40],[37,43,12,41,"p"],[37,44,12,42],[37,45,12,43],[37,47,12,45],[38,4,13,2],[38,8,13,6,"p"],[38,9,13,7],[38,13,13,11],[38,14,13,12],[38,18,13,16,"n"],[38,19,13,17],[38,22,13,20],[38,23,13,21],[38,25,13,23],[38,32,13,30],[38,36,13,30,"min"],[38,39,13,33],[38,40,13,33,"default"],[38,47,13,33],[38,49,13,34,"values"],[38,55,13,40],[38,56,13,41],[39,4,14,2],[39,8,14,6,"p"],[39,9,14,7],[39,13,14,11],[39,14,14,12],[39,16,14,14],[39,23,14,21],[39,27,14,21,"max"],[39,30,14,24],[39,31,14,24,"default"],[39,38,14,24],[39,40,14,25,"values"],[39,46,14,31],[39,47,14,32],[40,4,15,2],[40,8,15,6,"n"],[40,9,15,7],[41,6,16,6,"i"],[41,7,16,7],[41,10,16,10],[41,11,16,11,"n"],[41,12,16,12],[41,15,16,15],[41,16,16,16],[41,20,16,20,"p"],[41,21,16,21],[42,6,17,6,"i0"],[42,8,17,8],[42,11,17,11,"Math"],[42,15,17,15],[42,16,17,16,"floor"],[42,21,17,21],[42,22,17,22,"i"],[42,23,17,23],[42,24,17,24],[43,6,18,6,"value0"],[43,12,18,12],[43,15,18,15],[43,19,18,15,"max"],[43,22,18,18],[43,23,18,18,"default"],[43,30,18,18],[43,32,18,19],[43,36,18,19,"quickselect"],[43,47,18,30],[43,48,18,30,"default"],[43,55,18,30],[43,57,18,31,"values"],[43,63,18,37],[43,65,18,39,"i0"],[43,67,18,41],[43,68,18,42],[43,69,18,43,"subarray"],[43,77,18,51],[43,78,18,52],[43,79,18,53],[43,81,18,55,"i0"],[43,83,18,57],[43,86,18,60],[43,87,18,61],[43,88,18,62],[43,89,18,63],[44,6,19,6,"value1"],[44,12,19,12],[44,15,19,15],[44,19,19,15,"min"],[44,22,19,18],[44,23,19,18,"default"],[44,30,19,18],[44,32,19,19,"values"],[44,38,19,25],[44,39,19,26,"subarray"],[44,47,19,34],[44,48,19,35,"i0"],[44,50,19,37],[44,53,19,40],[44,54,19,41],[44,55,19,42],[44,56,19,43],[45,4,20,2],[45,11,20,9,"value0"],[45,17,20,15],[45,20,20,18],[45,21,20,19,"value1"],[45,27,20,25],[45,30,20,28,"value0"],[45,36,20,34],[45,41,20,39,"i"],[45,42,20,40],[45,45,20,43,"i0"],[45,47,20,45],[45,48,20,46],[46,2,21,0],[47,2,23,7],[47,11,23,16,"quantileSorted"],[47,25,23,30,"quantileSorted"],[47,26,23,31,"values"],[47,32,23,37],[47,34,23,39,"p"],[47,35,23,40],[47,37,23,42,"valueof"],[47,44,23,49],[47,47,23,52,"number"],[47,53,23,58],[47,54,23,58,"default"],[47,61,23,58],[47,63,23,60],[48,4,24,2],[48,8,24,6],[48,10,24,8,"n"],[48,11,24,9],[48,14,24,12,"values"],[48,20,24,18],[48,21,24,19,"length"],[48,27,24,25],[48,28,24,26],[48,32,24,30,"isNaN"],[48,37,24,35],[48,38,24,36,"p"],[48,39,24,37],[48,42,24,40],[48,43,24,41,"p"],[48,44,24,42],[48,45,24,43],[48,47,24,45],[49,4,25,2],[49,8,25,6,"p"],[49,9,25,7],[49,13,25,11],[49,14,25,12],[49,18,25,16,"n"],[49,19,25,17],[49,22,25,20],[49,23,25,21],[49,25,25,23],[49,32,25,30],[49,33,25,31,"valueof"],[49,40,25,38],[49,41,25,39,"values"],[49,47,25,45],[49,48,25,46],[49,49,25,47],[49,50,25,48],[49,52,25,50],[49,53,25,51],[49,55,25,53,"values"],[49,61,25,59],[49,62,25,60],[50,4,26,2],[50,8,26,6,"p"],[50,9,26,7],[50,13,26,11],[50,14,26,12],[50,16,26,14],[50,23,26,21],[50,24,26,22,"valueof"],[50,31,26,29],[50,32,26,30,"values"],[50,38,26,36],[50,39,26,37,"n"],[50,40,26,38],[50,43,26,41],[50,44,26,42],[50,45,26,43],[50,47,26,45,"n"],[50,48,26,46],[50,51,26,49],[50,52,26,50],[50,54,26,52,"values"],[50,60,26,58],[50,61,26,59],[51,4,27,2],[51,8,27,6,"n"],[51,9,27,7],[52,6,28,6,"i"],[52,7,28,7],[52,10,28,10],[52,11,28,11,"n"],[52,12,28,12],[52,15,28,15],[52,16,28,16],[52,20,28,20,"p"],[52,21,28,21],[53,6,29,6,"i0"],[53,8,29,8],[53,11,29,11,"Math"],[53,15,29,15],[53,16,29,16,"floor"],[53,21,29,21],[53,22,29,22,"i"],[53,23,29,23],[53,24,29,24],[54,6,30,6,"value0"],[54,12,30,12],[54,15,30,15],[54,16,30,16,"valueof"],[54,23,30,23],[54,24,30,24,"values"],[54,30,30,30],[54,31,30,31,"i0"],[54,33,30,33],[54,34,30,34],[54,36,30,36,"i0"],[54,38,30,38],[54,40,30,40,"values"],[54,46,30,46],[54,47,30,47],[55,6,31,6,"value1"],[55,12,31,12],[55,15,31,15],[55,16,31,16,"valueof"],[55,23,31,23],[55,24,31,24,"values"],[55,30,31,30],[55,31,31,31,"i0"],[55,33,31,33],[55,36,31,36],[55,37,31,37],[55,38,31,38],[55,40,31,40,"i0"],[55,42,31,42],[55,45,31,45],[55,46,31,46],[55,48,31,48,"values"],[55,54,31,54],[55,55,31,55],[56,4,32,2],[56,11,32,9,"value0"],[56,17,32,15],[56,20,32,18],[56,21,32,19,"value1"],[56,27,32,25],[56,30,32,28,"value0"],[56,36,32,34],[56,41,32,39,"i"],[56,42,32,40],[56,45,32,43,"i0"],[56,47,32,45],[56,48,32,46],[57,2,33,0],[58,2,35,7],[58,11,35,16,"quantileIndex"],[58,24,35,29,"quantileIndex"],[58,25,35,30,"values"],[58,31,35,36],[58,33,35,38,"p"],[58,34,35,39],[58,36,35,41,"valueof"],[58,43,35,48],[58,46,35,51,"number"],[58,52,35,57],[58,53,35,57,"default"],[58,60,35,57],[58,62,35,59],[59,4,36,2],[59,8,36,6,"isNaN"],[59,13,36,11],[59,14,36,12,"p"],[59,15,36,13],[59,18,36,16],[59,19,36,17,"p"],[59,20,36,18],[59,21,36,19],[59,23,36,21],[60,4,37,2,"numbers"],[60,11,37,9],[60,14,37,12,"Float64Array"],[60,26,37,24],[60,27,37,25,"from"],[60,31,37,29],[60,32,37,30,"values"],[60,38,37,36],[60,40,37,38],[60,41,37,39,"_"],[60,42,37,40],[60,44,37,42,"i"],[60,45,37,43],[60,50,37,48],[60,54,37,48,"number"],[60,60,37,54],[60,61,37,54,"default"],[60,68,37,54],[60,70,37,55,"valueof"],[60,77,37,62],[60,78,37,63,"values"],[60,84,37,69],[60,85,37,70,"i"],[60,86,37,71],[60,87,37,72],[60,89,37,74,"i"],[60,90,37,75],[60,92,37,77,"values"],[60,98,37,83],[60,99,37,84],[60,100,37,85],[60,101,37,86],[61,4,38,2],[61,8,38,6,"p"],[61,9,38,7],[61,13,38,11],[61,14,38,12],[61,16,38,14],[61,23,38,21],[61,27,38,21,"minIndex"],[61,35,38,29],[61,36,38,29,"default"],[61,43,38,29],[61,45,38,30,"numbers"],[61,52,38,37],[61,53,38,38],[62,4,39,2],[62,8,39,6,"p"],[62,9,39,7],[62,13,39,11],[62,14,39,12],[62,16,39,14],[62,23,39,21],[62,27,39,21,"maxIndex"],[62,35,39,29],[62,36,39,29,"default"],[62,43,39,29],[62,45,39,30,"numbers"],[62,52,39,37],[62,53,39,38],[63,4,40,2],[63,8,40,6,"numbers"],[63,15,40,13],[64,6,41,6,"index"],[64,11,41,11],[64,14,41,14,"Uint32Array"],[64,25,41,25],[64,26,41,26,"from"],[64,30,41,30],[64,31,41,31,"values"],[64,37,41,37],[64,39,41,39],[64,40,41,40,"_"],[64,41,41,41],[64,43,41,43,"i"],[64,44,41,44],[64,49,41,49,"i"],[64,50,41,50],[64,51,41,51],[65,6,42,6,"j"],[65,7,42,7],[65,10,42,10,"numbers"],[65,17,42,17],[65,18,42,18,"length"],[65,24,42,24],[65,27,42,27],[65,28,42,28],[66,6,43,6,"i"],[66,7,43,7],[66,10,43,10,"Math"],[66,14,43,14],[66,15,43,15,"floor"],[66,20,43,20],[66,21,43,21,"j"],[66,22,43,22],[66,25,43,25,"p"],[66,26,43,26],[66,27,43,27],[67,4,44,2],[67,8,44,2,"quickselect"],[67,19,44,13],[67,20,44,13,"default"],[67,27,44,13],[67,29,44,14,"index"],[67,34,44,19],[67,36,44,21,"i"],[67,37,44,22],[67,39,44,24],[67,40,44,25],[67,42,44,27,"j"],[67,43,44,28],[67,45,44,30],[67,46,44,31,"i"],[67,47,44,32],[67,49,44,34,"j"],[67,50,44,35],[67,55,44,40],[67,59,44,40,"ascendingDefined"],[67,66,44,56],[67,67,44,56,"ascendingDefined"],[67,83,44,56],[67,85,44,57,"numbers"],[67,92,44,64],[67,93,44,65,"i"],[67,94,44,66],[67,95,44,67],[67,97,44,69,"numbers"],[67,104,44,76],[67,105,44,77,"j"],[67,106,44,78],[67,107,44,79],[67,108,44,80],[67,109,44,81],[68,4,45,2,"i"],[68,5,45,3],[68,8,45,6],[68,12,45,6,"greatest"],[68,20,45,14],[68,21,45,14,"default"],[68,28,45,14],[68,30,45,15,"index"],[68,35,45,20],[68,36,45,21,"subarray"],[68,44,45,29],[68,45,45,30],[68,46,45,31],[68,48,45,33,"i"],[68,49,45,34],[68,52,45,37],[68,53,45,38],[68,54,45,39],[68,56,45,42,"i"],[68,57,45,43],[68,61,45,48,"numbers"],[68,68,45,55],[68,69,45,56,"i"],[68,70,45,57],[68,71,45,58],[68,72,45,59],[69,4,46,2],[69,11,46,9,"i"],[69,12,46,10],[69,16,46,14],[69,17,46,15],[69,20,46,18,"i"],[69,21,46,19],[69,24,46,22],[69,25,46,23],[69,26,46,24],[70,2,47,0],[71,0,47,1],[71,3]],"functionMap":{"names":["<global>","quantile","quantileSorted","quantileIndex","Float64Array.from$argument_1","Uint32Array.from$argument_1","quickselect$argument_4","greatest$argument_1"],"mappings":"AAA;eCS;CDW;OEE;CFU;OGE;sCCE,+CD;uCEI,WF;8BGG,kDH;yCIC,iBJ;CHE"},"hasCjsExports":false},"type":"js/module"}]}