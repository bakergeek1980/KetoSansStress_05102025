{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"Adder\", {\n    enumerable: true,\n    get: function () {\n      return Adder;\n    }\n  });\n  exports.fsum = fsum;\n  exports.fcumsum = fcumsum;\n  // https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\n  class Adder {\n    constructor() {\n      this._partials = new Float64Array(32);\n      this._n = 0;\n    }\n    add(x) {\n      const p = this._partials;\n      let i = 0;\n      for (let j = 0; j < this._n && j < 32; j++) {\n        const y = p[j],\n          hi = x + y,\n          lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n        if (lo) p[i++] = lo;\n        x = hi;\n      }\n      p[i] = x;\n      this._n = i + 1;\n      return this;\n    }\n    valueOf() {\n      const p = this._partials;\n      let n = this._n,\n        x,\n        y,\n        lo,\n        hi = 0;\n      if (n > 0) {\n        hi = p[--n];\n        while (n > 0) {\n          x = hi;\n          y = p[--n];\n          hi = x + y;\n          lo = y - (hi - x);\n          if (lo) break;\n        }\n        if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {\n          y = lo * 2;\n          x = hi + y;\n          if (y == x - hi) hi = x;\n        }\n      }\n      return hi;\n    }\n  }\n  function fsum(values, valueof) {\n    const adder = new Adder();\n    if (valueof === undefined) {\n      for (let value of values) {\n        if (value = +value) {\n          adder.add(value);\n        }\n      }\n    } else {\n      let index = -1;\n      for (let value of values) {\n        if (value = +valueof(value, ++index, values)) {\n          adder.add(value);\n        }\n      }\n    }\n    return +adder;\n  }\n  function fcumsum(values, valueof) {\n    const adder = new Adder();\n    let index = -1;\n    return Float64Array.from(values, valueof === undefined ? v => adder.add(+v || 0) : v => adder.add(+valueof(v, ++index, values) || 0));\n  }\n});","lineCount":83,"map":[[7,2,2,0,"Object"],[7,8,2,0],[7,9,2,0,"defineProperty"],[7,23,2,0],[7,24,2,0,"exports"],[7,31,2,0],[8,4,2,0,"enumerable"],[8,14,2,0],[9,4,2,0,"get"],[9,7,2,0],[9,18,2,0,"get"],[9,19,2,0],[10,6,2,0],[10,13,2,0,"Adder"],[10,18,2,0],[11,4,2,0],[12,2,2,0],[13,2,43,0,"exports"],[13,9,43,0],[13,10,43,0,"fsum"],[13,14,43,0],[13,17,43,0,"fsum"],[13,21,43,0],[14,2,62,0,"exports"],[14,9,62,0],[14,10,62,0,"fcumsum"],[14,17,62,0],[14,20,62,0,"fcumsum"],[14,27,62,0],[15,2,1,0],[16,2,2,7],[16,8,2,13,"Adder"],[16,13,2,18],[16,14,2,19],[17,4,3,2,"constructor"],[17,15,3,13,"constructor"],[17,16,3,13],[17,18,3,16],[18,6,4,4],[18,10,4,8],[18,11,4,9,"_partials"],[18,20,4,18],[18,23,4,21],[18,27,4,25,"Float64Array"],[18,39,4,37],[18,40,4,38],[18,42,4,40],[18,43,4,41],[19,6,5,4],[19,10,5,8],[19,11,5,9,"_n"],[19,13,5,11],[19,16,5,14],[19,17,5,15],[20,4,6,2],[21,4,7,2,"add"],[21,7,7,5,"add"],[21,8,7,6,"x"],[21,9,7,7],[21,11,7,9],[22,6,8,4],[22,12,8,10,"p"],[22,13,8,11],[22,16,8,14],[22,20,8,18],[22,21,8,19,"_partials"],[22,30,8,28],[23,6,9,4],[23,10,9,8,"i"],[23,11,9,9],[23,14,9,12],[23,15,9,13],[24,6,10,4],[24,11,10,9],[24,15,10,13,"j"],[24,16,10,14],[24,19,10,17],[24,20,10,18],[24,22,10,20,"j"],[24,23,10,21],[24,26,10,24],[24,30,10,28],[24,31,10,29,"_n"],[24,33,10,31],[24,37,10,35,"j"],[24,38,10,36],[24,41,10,39],[24,43,10,41],[24,45,10,43,"j"],[24,46,10,44],[24,48,10,46],[24,50,10,48],[25,8,11,6],[25,14,11,12,"y"],[25,15,11,13],[25,18,11,16,"p"],[25,19,11,17],[25,20,11,18,"j"],[25,21,11,19],[25,22,11,20],[26,10,12,8,"hi"],[26,12,12,10],[26,15,12,13,"x"],[26,16,12,14],[26,19,12,17,"y"],[26,20,12,18],[27,10,13,8,"lo"],[27,12,13,10],[27,15,13,13,"Math"],[27,19,13,17],[27,20,13,18,"abs"],[27,23,13,21],[27,24,13,22,"x"],[27,25,13,23],[27,26,13,24],[27,29,13,27,"Math"],[27,33,13,31],[27,34,13,32,"abs"],[27,37,13,35],[27,38,13,36,"y"],[27,39,13,37],[27,40,13,38],[27,43,13,41,"x"],[27,44,13,42],[27,48,13,46,"hi"],[27,50,13,48],[27,53,13,51,"y"],[27,54,13,52],[27,55,13,53],[27,58,13,56,"y"],[27,59,13,57],[27,63,13,61,"hi"],[27,65,13,63],[27,68,13,66,"x"],[27,69,13,67],[27,70,13,68],[28,8,14,6],[28,12,14,10,"lo"],[28,14,14,12],[28,16,14,14,"p"],[28,17,14,15],[28,18,14,16,"i"],[28,19,14,17],[28,21,14,19],[28,22,14,20],[28,25,14,23,"lo"],[28,27,14,25],[29,8,15,6,"x"],[29,9,15,7],[29,12,15,10,"hi"],[29,14,15,12],[30,6,16,4],[31,6,17,4,"p"],[31,7,17,5],[31,8,17,6,"i"],[31,9,17,7],[31,10,17,8],[31,13,17,11,"x"],[31,14,17,12],[32,6,18,4],[32,10,18,8],[32,11,18,9,"_n"],[32,13,18,11],[32,16,18,14,"i"],[32,17,18,15],[32,20,18,18],[32,21,18,19],[33,6,19,4],[33,13,19,11],[33,17,19,15],[34,4,20,2],[35,4,21,2,"valueOf"],[35,11,21,9,"valueOf"],[35,12,21,9],[35,14,21,12],[36,6,22,4],[36,12,22,10,"p"],[36,13,22,11],[36,16,22,14],[36,20,22,18],[36,21,22,19,"_partials"],[36,30,22,28],[37,6,23,4],[37,10,23,8,"n"],[37,11,23,9],[37,14,23,12],[37,18,23,16],[37,19,23,17,"_n"],[37,21,23,19],[38,8,23,21,"x"],[38,9,23,22],[39,8,23,24,"y"],[39,9,23,25],[40,8,23,27,"lo"],[40,10,23,29],[41,8,23,31,"hi"],[41,10,23,33],[41,13,23,36],[41,14,23,37],[42,6,24,4],[42,10,24,8,"n"],[42,11,24,9],[42,14,24,12],[42,15,24,13],[42,17,24,15],[43,8,25,6,"hi"],[43,10,25,8],[43,13,25,11,"p"],[43,14,25,12],[43,15,25,13],[43,17,25,15,"n"],[43,18,25,16],[43,19,25,17],[44,8,26,6],[44,15,26,13,"n"],[44,16,26,14],[44,19,26,17],[44,20,26,18],[44,22,26,20],[45,10,27,8,"x"],[45,11,27,9],[45,14,27,12,"hi"],[45,16,27,14],[46,10,28,8,"y"],[46,11,28,9],[46,14,28,12,"p"],[46,15,28,13],[46,16,28,14],[46,18,28,16,"n"],[46,19,28,17],[46,20,28,18],[47,10,29,8,"hi"],[47,12,29,10],[47,15,29,13,"x"],[47,16,29,14],[47,19,29,17,"y"],[47,20,29,18],[48,10,30,8,"lo"],[48,12,30,10],[48,15,30,13,"y"],[48,16,30,14],[48,20,30,18,"hi"],[48,22,30,20],[48,25,30,23,"x"],[48,26,30,24],[48,27,30,25],[49,10,31,8],[49,14,31,12,"lo"],[49,16,31,14],[49,18,31,16],[50,8,32,6],[51,8,33,6],[51,12,33,10,"n"],[51,13,33,11],[51,16,33,14],[51,17,33,15],[51,22,33,21,"lo"],[51,24,33,23],[51,27,33,26],[51,28,33,27],[51,32,33,31,"p"],[51,33,33,32],[51,34,33,33,"n"],[51,35,33,34],[51,38,33,37],[51,39,33,38],[51,40,33,39],[51,43,33,42],[51,44,33,43],[51,48,33,49,"lo"],[51,50,33,51],[51,53,33,54],[51,54,33,55],[51,58,33,59,"p"],[51,59,33,60],[51,60,33,61,"n"],[51,61,33,62],[51,64,33,65],[51,65,33,66],[51,66,33,67],[51,69,33,70],[51,70,33,72],[51,71,33,73],[51,73,33,75],[52,10,34,8,"y"],[52,11,34,9],[52,14,34,12,"lo"],[52,16,34,14],[52,19,34,17],[52,20,34,18],[53,10,35,8,"x"],[53,11,35,9],[53,14,35,12,"hi"],[53,16,35,14],[53,19,35,17,"y"],[53,20,35,18],[54,10,36,8],[54,14,36,12,"y"],[54,15,36,13],[54,19,36,17,"x"],[54,20,36,18],[54,23,36,21,"hi"],[54,25,36,23],[54,27,36,25,"hi"],[54,29,36,27],[54,32,36,30,"x"],[54,33,36,31],[55,8,37,6],[56,6,38,4],[57,6,39,4],[57,13,39,11,"hi"],[57,15,39,13],[58,4,40,2],[59,2,41,0],[60,2,43,7],[60,11,43,16,"fsum"],[60,15,43,20,"fsum"],[60,16,43,21,"values"],[60,22,43,27],[60,24,43,29,"valueof"],[60,31,43,36],[60,33,43,38],[61,4,44,2],[61,10,44,8,"adder"],[61,15,44,13],[61,18,44,16],[61,22,44,20,"Adder"],[61,27,44,25],[61,28,44,26],[61,29,44,27],[62,4,45,2],[62,8,45,6,"valueof"],[62,15,45,13],[62,20,45,18,"undefined"],[62,29,45,27],[62,31,45,29],[63,6,46,4],[63,11,46,9],[63,15,46,13,"value"],[63,20,46,18],[63,24,46,22,"values"],[63,30,46,28],[63,32,46,30],[64,8,47,6],[64,12,47,10,"value"],[64,17,47,15],[64,20,47,18],[64,21,47,19,"value"],[64,26,47,24],[64,28,47,26],[65,10,48,8,"adder"],[65,15,48,13],[65,16,48,14,"add"],[65,19,48,17],[65,20,48,18,"value"],[65,25,48,23],[65,26,48,24],[66,8,49,6],[67,6,50,4],[68,4,51,2],[68,5,51,3],[68,11,51,9],[69,6,52,4],[69,10,52,8,"index"],[69,15,52,13],[69,18,52,16],[69,19,52,17],[69,20,52,18],[70,6,53,4],[70,11,53,9],[70,15,53,13,"value"],[70,20,53,18],[70,24,53,22,"values"],[70,30,53,28],[70,32,53,30],[71,8,54,6],[71,12,54,10,"value"],[71,17,54,15],[71,20,54,18],[71,21,54,19,"valueof"],[71,28,54,26],[71,29,54,27,"value"],[71,34,54,32],[71,36,54,34],[71,38,54,36,"index"],[71,43,54,41],[71,45,54,43,"values"],[71,51,54,49],[71,52,54,50],[71,54,54,52],[72,10,55,8,"adder"],[72,15,55,13],[72,16,55,14,"add"],[72,19,55,17],[72,20,55,18,"value"],[72,25,55,23],[72,26,55,24],[73,8,56,6],[74,6,57,4],[75,4,58,2],[76,4,59,2],[76,11,59,9],[76,12,59,10,"adder"],[76,17,59,15],[77,2,60,0],[78,2,62,7],[78,11,62,16,"fcumsum"],[78,18,62,23,"fcumsum"],[78,19,62,24,"values"],[78,25,62,30],[78,27,62,32,"valueof"],[78,34,62,39],[78,36,62,41],[79,4,63,2],[79,10,63,8,"adder"],[79,15,63,13],[79,18,63,16],[79,22,63,20,"Adder"],[79,27,63,25],[79,28,63,26],[79,29,63,27],[80,4,64,2],[80,8,64,6,"index"],[80,13,64,11],[80,16,64,14],[80,17,64,15],[80,18,64,16],[81,4,65,2],[81,11,65,9,"Float64Array"],[81,23,65,21],[81,24,65,22,"from"],[81,28,65,26],[81,29,65,27,"values"],[81,35,65,33],[81,37,65,35,"valueof"],[81,44,65,42],[81,49,65,47,"undefined"],[81,58,65,56],[81,61,66,8,"v"],[81,62,66,9],[81,66,66,13,"adder"],[81,71,66,18],[81,72,66,19,"add"],[81,75,66,22],[81,76,66,23],[81,77,66,24,"v"],[81,78,66,25],[81,82,66,29],[81,83,66,30],[81,84,66,31],[81,87,67,8,"v"],[81,88,67,9],[81,92,67,13,"adder"],[81,97,67,18],[81,98,67,19,"add"],[81,101,67,22],[81,102,67,23],[81,103,67,24,"valueof"],[81,110,67,31],[81,111,67,32,"v"],[81,112,67,33],[81,114,67,35],[81,116,67,37,"index"],[81,121,67,42],[81,123,67,44,"values"],[81,129,67,50],[81,130,67,51],[81,134,67,55],[81,135,67,56],[81,136,68,2],[81,137,68,3],[82,2,69,0],[83,0,69,1],[83,3]],"functionMap":{"names":["<global>","Adder","Adder#constructor","Adder#add","Adder#valueOf","fsum","fcumsum","<anonymous>"],"mappings":"AAA;OCC;ECC;GDG;EEC;GFa;EGC;GHmB;CDC;OKE;CLiB;OME;QCI,uBD;QCC,iDD;CNE"},"hasCjsExports":false},"type":"js/module"}]}