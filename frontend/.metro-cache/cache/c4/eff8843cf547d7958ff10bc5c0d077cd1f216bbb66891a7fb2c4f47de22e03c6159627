{"dependencies":[{"name":"./index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"8I+rHSNQrjvHAUbDGKxAWKr/Qso=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _ref;\n    }\n  });\n  var _indexJs = require(_dependencyMap[0], \"./index.js\");\n  function _ref(compare) {\n    if (!compare) compare = ascending;\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          sortgroup[i] = node;\n        }\n      }\n      sortgroup.sort(compareNode);\n    }\n    return new _indexJs.Selection(sortgroups, this._parents).order();\n  }\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n});","lineCount":32,"map":[[7,2,3,15,"Object"],[7,8,3,15],[7,9,3,15,"defineProperty"],[7,23,3,15],[7,24,3,15,"exports"],[7,31,3,15],[8,4,3,15,"enumerable"],[8,14,3,15],[9,4,3,15,"get"],[9,7,3,15],[9,18,3,15,"get"],[9,19,3,15],[10,6,3,15],[10,13,3,15,"_ref"],[10,17,3,15],[11,4,3,15],[12,2,3,15],[13,2,1,0],[13,6,1,0,"_indexJs"],[13,14,1,0],[13,17,1,0,"require"],[13,24,1,0],[13,25,1,0,"_dependencyMap"],[13,39,1,0],[14,2,3,15],[14,11,3,15,"_ref"],[14,16,3,24,"compare"],[14,23,3,31],[14,25,3,33],[15,4,4,2],[15,8,4,6],[15,9,4,7,"compare"],[15,16,4,14],[15,18,4,16,"compare"],[15,25,4,23],[15,28,4,26,"ascending"],[15,37,4,35],[16,4,6,2],[16,13,6,11,"compareNode"],[16,24,6,22,"compareNode"],[16,25,6,23,"a"],[16,26,6,24],[16,28,6,26,"b"],[16,29,6,27],[16,31,6,29],[17,6,7,4],[17,13,7,11,"a"],[17,14,7,12],[17,18,7,16,"b"],[17,19,7,17],[17,22,7,20,"compare"],[17,29,7,27],[17,30,7,28,"a"],[17,31,7,29],[17,32,7,30,"__data__"],[17,40,7,38],[17,42,7,40,"b"],[17,43,7,41],[17,44,7,42,"__data__"],[17,52,7,50],[17,53,7,51],[17,56,7,54],[17,57,7,55,"a"],[17,58,7,56],[17,61,7,59],[17,62,7,60,"b"],[17,63,7,61],[18,4,8,2],[19,4,10,2],[19,9,10,7],[19,13,10,11,"groups"],[19,19,10,17],[19,22,10,20],[19,26,10,24],[19,27,10,25,"_groups"],[19,34,10,32],[19,36,10,34,"m"],[19,37,10,35],[19,40,10,38,"groups"],[19,46,10,44],[19,47,10,45,"length"],[19,53,10,51],[19,55,10,53,"sortgroups"],[19,65,10,63],[19,68,10,66],[19,72,10,70,"Array"],[19,77,10,75],[19,78,10,76,"m"],[19,79,10,77],[19,80,10,78],[19,82,10,80,"j"],[19,83,10,81],[19,86,10,84],[19,87,10,85],[19,89,10,87,"j"],[19,90,10,88],[19,93,10,91,"m"],[19,94,10,92],[19,96,10,94],[19,98,10,96,"j"],[19,99,10,97],[19,101,10,99],[20,6,11,4],[20,11,11,9],[20,15,11,13,"group"],[20,20,11,18],[20,23,11,21,"groups"],[20,29,11,27],[20,30,11,28,"j"],[20,31,11,29],[20,32,11,30],[20,34,11,32,"n"],[20,35,11,33],[20,38,11,36,"group"],[20,43,11,41],[20,44,11,42,"length"],[20,50,11,48],[20,52,11,50,"sortgroup"],[20,61,11,59],[20,64,11,62,"sortgroups"],[20,74,11,72],[20,75,11,73,"j"],[20,76,11,74],[20,77,11,75],[20,80,11,78],[20,84,11,82,"Array"],[20,89,11,87],[20,90,11,88,"n"],[20,91,11,89],[20,92,11,90],[20,94,11,92,"node"],[20,98,11,96],[20,100,11,98,"i"],[20,101,11,99],[20,104,11,102],[20,105,11,103],[20,107,11,105,"i"],[20,108,11,106],[20,111,11,109,"n"],[20,112,11,110],[20,114,11,112],[20,116,11,114,"i"],[20,117,11,115],[20,119,11,117],[21,8,12,6],[21,12,12,10,"node"],[21,16,12,14],[21,19,12,17,"group"],[21,24,12,22],[21,25,12,23,"i"],[21,26,12,24],[21,27,12,25],[21,29,12,27],[22,10,13,8,"sortgroup"],[22,19,13,17],[22,20,13,18,"i"],[22,21,13,19],[22,22,13,20],[22,25,13,23,"node"],[22,29,13,27],[23,8,14,6],[24,6,15,4],[25,6,16,4,"sortgroup"],[25,15,16,13],[25,16,16,14,"sort"],[25,20,16,18],[25,21,16,19,"compareNode"],[25,32,16,30],[25,33,16,31],[26,4,17,2],[27,4,19,2],[27,11,19,9],[27,15,19,13,"Selection"],[27,23,19,22],[27,24,19,22,"Selection"],[27,33,19,22],[27,34,19,23,"sortgroups"],[27,44,19,33],[27,46,19,35],[27,50,19,39],[27,51,19,40,"_parents"],[27,59,19,48],[27,60,19,49],[27,61,19,50,"order"],[27,66,19,55],[27,67,19,56],[27,68,19,57],[28,2,20,0],[29,2,22,0],[29,11,22,9,"ascending"],[29,20,22,18,"ascending"],[29,21,22,19,"a"],[29,22,22,20],[29,24,22,22,"b"],[29,25,22,23],[29,27,22,25],[30,4,23,2],[30,11,23,9,"a"],[30,12,23,10],[30,15,23,13,"b"],[30,16,23,14],[30,19,23,17],[30,20,23,18],[30,21,23,19],[30,24,23,22,"a"],[30,25,23,23],[30,28,23,26,"b"],[30,29,23,27],[30,32,23,30],[30,33,23,31],[30,36,23,34,"a"],[30,37,23,35],[30,41,23,39,"b"],[30,42,23,40],[30,45,23,43],[30,46,23,44],[30,49,23,47,"NaN"],[30,52,23,50],[31,2,24,0],[32,0,24,1],[32,3]],"functionMap":{"names":["<global>","default","compareNode","ascending"],"mappings":"AAA;eCE;ECG;GDE;CDY;AGE;CHE"},"hasCjsExports":false},"type":"js/module"}]}