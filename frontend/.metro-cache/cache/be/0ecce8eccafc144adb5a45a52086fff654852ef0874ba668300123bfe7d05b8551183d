{"dependencies":[{"name":"./linear.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"suKeCidbwZn9gGj5VSO9qUqIGq8=","exportNames":["*"],"imports":1}},{"name":"./continuous.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":39},"end":{"line":2,"column":50,"index":89}}],"key":"SbgibKyskRec40eaH/MYNIXuEto=","exportNames":["*"],"imports":1}},{"name":"./init.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":90},"end":{"line":3,"column":36,"index":126}}],"key":"T/z5w4vOvjDtodMXYiKznwC3zLs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return symlog;\n    }\n  });\n  exports.symlogish = symlogish;\n  var _linearJs = require(_dependencyMap[0], \"./linear.js\");\n  var _continuousJs = require(_dependencyMap[1], \"./continuous.js\");\n  var _initJs = require(_dependencyMap[2], \"./init.js\");\n  function transformSymlog(c) {\n    return function (x) {\n      return Math.sign(x) * Math.log1p(Math.abs(x / c));\n    };\n  }\n  function transformSymexp(c) {\n    return function (x) {\n      return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n    };\n  }\n  function symlogish(transform) {\n    var c = 1,\n      scale = transform(transformSymlog(c), transformSymexp(c));\n    scale.constant = function (_) {\n      return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n    };\n    return (0, _linearJs.linearish)(scale);\n  }\n  function symlog() {\n    var scale = symlogish((0, _continuousJs.transformer)());\n    scale.copy = function () {\n      return (0, _continuousJs.copy)(scale, symlog()).constant(scale.constant());\n    };\n    return _initJs.initRange.apply(scale, arguments);\n  }\n});","lineCount":42,"map":[[7,2,27,15,"Object"],[7,8,27,15],[7,9,27,15,"defineProperty"],[7,23,27,15],[7,24,27,15,"exports"],[7,31,27,15],[8,4,27,15,"enumerable"],[8,14,27,15],[9,4,27,15,"get"],[9,7,27,15],[9,18,27,15,"get"],[9,19,27,15],[10,6,27,15],[10,13,27,15,"symlog"],[10,19,27,15],[11,4,27,15],[12,2,27,15],[13,2,17,0,"exports"],[13,9,17,0],[13,10,17,0,"symlogish"],[13,19,17,0],[13,22,17,0,"symlogish"],[13,31,17,0],[14,2,1,0],[14,6,1,0,"_linearJs"],[14,15,1,0],[14,18,1,0,"require"],[14,25,1,0],[14,26,1,0,"_dependencyMap"],[14,40,1,0],[15,2,2,0],[15,6,2,0,"_continuousJs"],[15,19,2,0],[15,22,2,0,"require"],[15,29,2,0],[15,30,2,0,"_dependencyMap"],[15,44,2,0],[16,2,3,0],[16,6,3,0,"_initJs"],[16,13,3,0],[16,16,3,0,"require"],[16,23,3,0],[16,24,3,0,"_dependencyMap"],[16,38,3,0],[17,2,5,0],[17,11,5,9,"transformSymlog"],[17,26,5,24,"transformSymlog"],[17,27,5,25,"c"],[17,28,5,26],[17,30,5,28],[18,4,6,2],[18,11,6,9],[18,21,6,18,"x"],[18,22,6,19],[18,24,6,21],[19,6,7,4],[19,13,7,11,"Math"],[19,17,7,15],[19,18,7,16,"sign"],[19,22,7,20],[19,23,7,21,"x"],[19,24,7,22],[19,25,7,23],[19,28,7,26,"Math"],[19,32,7,30],[19,33,7,31,"log1p"],[19,38,7,36],[19,39,7,37,"Math"],[19,43,7,41],[19,44,7,42,"abs"],[19,47,7,45],[19,48,7,46,"x"],[19,49,7,47],[19,52,7,50,"c"],[19,53,7,51],[19,54,7,52],[19,55,7,53],[20,4,8,2],[20,5,8,3],[21,2,9,0],[22,2,11,0],[22,11,11,9,"transformSymexp"],[22,26,11,24,"transformSymexp"],[22,27,11,25,"c"],[22,28,11,26],[22,30,11,28],[23,4,12,2],[23,11,12,9],[23,21,12,18,"x"],[23,22,12,19],[23,24,12,21],[24,6,13,4],[24,13,13,11,"Math"],[24,17,13,15],[24,18,13,16,"sign"],[24,22,13,20],[24,23,13,21,"x"],[24,24,13,22],[24,25,13,23],[24,28,13,26,"Math"],[24,32,13,30],[24,33,13,31,"expm1"],[24,38,13,36],[24,39,13,37,"Math"],[24,43,13,41],[24,44,13,42,"abs"],[24,47,13,45],[24,48,13,46,"x"],[24,49,13,47],[24,50,13,48],[24,51,13,49],[24,54,13,52,"c"],[24,55,13,53],[25,4,14,2],[25,5,14,3],[26,2,15,0],[27,2,17,7],[27,11,17,16,"symlogish"],[27,20,17,25,"symlogish"],[27,21,17,26,"transform"],[27,30,17,35],[27,32,17,37],[28,4,18,2],[28,8,18,6,"c"],[28,9,18,7],[28,12,18,10],[28,13,18,11],[29,6,18,13,"scale"],[29,11,18,18],[29,14,18,21,"transform"],[29,23,18,30],[29,24,18,31,"transformSymlog"],[29,39,18,46],[29,40,18,47,"c"],[29,41,18,48],[29,42,18,49],[29,44,18,51,"transformSymexp"],[29,59,18,66],[29,60,18,67,"c"],[29,61,18,68],[29,62,18,69],[29,63,18,70],[30,4,20,2,"scale"],[30,9,20,7],[30,10,20,8,"constant"],[30,18,20,16],[30,21,20,19],[30,31,20,28,"_"],[30,32,20,29],[30,34,20,31],[31,6,21,4],[31,13,21,11,"arguments"],[31,22,21,20],[31,23,21,21,"length"],[31,29,21,27],[31,32,21,30,"transform"],[31,41,21,39],[31,42,21,40,"transformSymlog"],[31,57,21,55],[31,58,21,56,"c"],[31,59,21,57],[31,62,21,60],[31,63,21,61,"_"],[31,64,21,62],[31,65,21,63],[31,67,21,65,"transformSymexp"],[31,82,21,80],[31,83,21,81,"c"],[31,84,21,82],[31,85,21,83],[31,86,21,84],[31,89,21,87,"c"],[31,90,21,88],[32,4,22,2],[32,5,22,3],[33,4,24,2],[33,11,24,9],[33,15,24,9,"linearish"],[33,24,24,18],[33,25,24,18,"linearish"],[33,34,24,18],[33,36,24,19,"scale"],[33,41,24,24],[33,42,24,25],[34,2,25,0],[35,2,27,15],[35,11,27,24,"symlog"],[35,17,27,30,"symlog"],[35,18,27,30],[35,20,27,33],[36,4,28,2],[36,8,28,6,"scale"],[36,13,28,11],[36,16,28,14,"symlogish"],[36,25,28,23],[36,26,28,24],[36,30,28,24,"transformer"],[36,43,28,35],[36,44,28,35,"transformer"],[36,55,28,35],[36,57,28,36],[36,58,28,37],[36,59,28,38],[37,4,30,2,"scale"],[37,9,30,7],[37,10,30,8,"copy"],[37,14,30,12],[37,17,30,15],[37,29,30,26],[38,6,31,4],[38,13,31,11],[38,17,31,11,"copy"],[38,30,31,15],[38,31,31,15,"copy"],[38,35,31,15],[38,37,31,16,"scale"],[38,42,31,21],[38,44,31,23,"symlog"],[38,50,31,29],[38,51,31,30],[38,52,31,31],[38,53,31,32],[38,54,31,33,"constant"],[38,62,31,41],[38,63,31,42,"scale"],[38,68,31,47],[38,69,31,48,"constant"],[38,77,31,56],[38,78,31,57],[38,79,31,58],[38,80,31,59],[39,4,32,2],[39,5,32,3],[40,4,34,2],[40,11,34,9,"initRange"],[40,18,34,18],[40,19,34,18,"initRange"],[40,28,34,18],[40,29,34,19,"apply"],[40,34,34,24],[40,35,34,25,"scale"],[40,40,34,30],[40,42,34,32,"arguments"],[40,51,34,41],[40,52,34,42],[41,2,35,0],[42,0,35,1],[42,3]],"functionMap":{"names":["<global>","transformSymlog","<anonymous>","transformSymexp","symlogish","scale.constant","symlog","scale.copy"],"mappings":"AAA;ACI;SCC;GDE;CDC;AGE;SDC;GCE;CHC;OIE;mBCG;GDE;CJG;eME;eCG;GDE;CNG"},"hasCjsExports":false},"type":"js/module"}]}