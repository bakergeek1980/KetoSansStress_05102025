{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return cross;\n    }\n  });\n  function length(array) {\n    return array.length | 0;\n  }\n  function empty(length) {\n    return !(length > 0);\n  }\n  function arrayify(values) {\n    return typeof values !== \"object\" || \"length\" in values ? values : Array.from(values);\n  }\n  function reducer(reduce) {\n    return values => reduce(...values);\n  }\n  function cross(...values) {\n    const reduce = typeof values[values.length - 1] === \"function\" && reducer(values.pop());\n    values = values.map(arrayify);\n    const lengths = values.map(length);\n    const j = values.length - 1;\n    const index = new Array(j + 1).fill(0);\n    const product = [];\n    if (j < 0 || lengths.some(empty)) return product;\n    while (true) {\n      product.push(index.map((j, i) => values[i][j]));\n      let i = j;\n      while (++index[i] === lengths[i]) {\n        if (i === 0) return reduce ? product.map(reduce) : product;\n        index[i--] = 0;\n      }\n    }\n  }\n});","lineCount":42,"map":[[7,2,17,15,"Object"],[7,8,17,15],[7,9,17,15,"defineProperty"],[7,23,17,15],[7,24,17,15,"exports"],[7,31,17,15],[8,4,17,15,"enumerable"],[8,14,17,15],[9,4,17,15,"get"],[9,7,17,15],[9,18,17,15,"get"],[9,19,17,15],[10,6,17,15],[10,13,17,15,"cross"],[10,18,17,15],[11,4,17,15],[12,2,17,15],[13,2,1,0],[13,11,1,9,"length"],[13,17,1,15,"length"],[13,18,1,16,"array"],[13,23,1,21],[13,25,1,23],[14,4,2,2],[14,11,2,9,"array"],[14,16,2,14],[14,17,2,15,"length"],[14,23,2,21],[14,26,2,24],[14,27,2,25],[15,2,3,0],[16,2,5,0],[16,11,5,9,"empty"],[16,16,5,14,"empty"],[16,17,5,15,"length"],[16,23,5,21],[16,25,5,23],[17,4,6,2],[17,11,6,9],[17,13,6,11,"length"],[17,19,6,17],[17,22,6,20],[17,23,6,21],[17,24,6,22],[18,2,7,0],[19,2,9,0],[19,11,9,9,"arrayify"],[19,19,9,17,"arrayify"],[19,20,9,18,"values"],[19,26,9,24],[19,28,9,26],[20,4,10,2],[20,11,10,9],[20,18,10,16,"values"],[20,24,10,22],[20,29,10,27],[20,37,10,35],[20,41,10,39],[20,49,10,47],[20,53,10,51,"values"],[20,59,10,57],[20,62,10,60,"values"],[20,68,10,66],[20,71,10,69,"Array"],[20,76,10,74],[20,77,10,75,"from"],[20,81,10,79],[20,82,10,80,"values"],[20,88,10,86],[20,89,10,87],[21,2,11,0],[22,2,13,0],[22,11,13,9,"reducer"],[22,18,13,16,"reducer"],[22,19,13,17,"reduce"],[22,25,13,23],[22,27,13,25],[23,4,14,2],[23,11,14,9,"values"],[23,17,14,15],[23,21,14,19,"reduce"],[23,27,14,25],[23,28,14,26],[23,31,14,29,"values"],[23,37,14,35],[23,38,14,36],[24,2,15,0],[25,2,17,15],[25,11,17,24,"cross"],[25,16,17,29,"cross"],[25,17,17,30],[25,20,17,33,"values"],[25,26,17,39],[25,28,17,41],[26,4,18,2],[26,10,18,8,"reduce"],[26,16,18,14],[26,19,18,17],[26,26,18,24,"values"],[26,32,18,30],[26,33,18,31,"values"],[26,39,18,37],[26,40,18,38,"length"],[26,46,18,44],[26,49,18,47],[26,50,18,48],[26,51,18,49],[26,56,18,54],[26,66,18,64],[26,70,18,68,"reducer"],[26,77,18,75],[26,78,18,76,"values"],[26,84,18,82],[26,85,18,83,"pop"],[26,88,18,86],[26,89,18,87],[26,90,18,88],[26,91,18,89],[27,4,19,2,"values"],[27,10,19,8],[27,13,19,11,"values"],[27,19,19,17],[27,20,19,18,"map"],[27,23,19,21],[27,24,19,22,"arrayify"],[27,32,19,30],[27,33,19,31],[28,4,20,2],[28,10,20,8,"lengths"],[28,17,20,15],[28,20,20,18,"values"],[28,26,20,24],[28,27,20,25,"map"],[28,30,20,28],[28,31,20,29,"length"],[28,37,20,35],[28,38,20,36],[29,4,21,2],[29,10,21,8,"j"],[29,11,21,9],[29,14,21,12,"values"],[29,20,21,18],[29,21,21,19,"length"],[29,27,21,25],[29,30,21,28],[29,31,21,29],[30,4,22,2],[30,10,22,8,"index"],[30,15,22,13],[30,18,22,16],[30,22,22,20,"Array"],[30,27,22,25],[30,28,22,26,"j"],[30,29,22,27],[30,32,22,30],[30,33,22,31],[30,34,22,32],[30,35,22,33,"fill"],[30,39,22,37],[30,40,22,38],[30,41,22,39],[30,42,22,40],[31,4,23,2],[31,10,23,8,"product"],[31,17,23,15],[31,20,23,18],[31,22,23,20],[32,4,24,2],[32,8,24,6,"j"],[32,9,24,7],[32,12,24,10],[32,13,24,11],[32,17,24,15,"lengths"],[32,24,24,22],[32,25,24,23,"some"],[32,29,24,27],[32,30,24,28,"empty"],[32,35,24,33],[32,36,24,34],[32,38,24,36],[32,45,24,43,"product"],[32,52,24,50],[33,4,25,2],[33,11,25,9],[33,15,25,13],[33,17,25,15],[34,6,26,4,"product"],[34,13,26,11],[34,14,26,12,"push"],[34,18,26,16],[34,19,26,17,"index"],[34,24,26,22],[34,25,26,23,"map"],[34,28,26,26],[34,29,26,27],[34,30,26,28,"j"],[34,31,26,29],[34,33,26,31,"i"],[34,34,26,32],[34,39,26,37,"values"],[34,45,26,43],[34,46,26,44,"i"],[34,47,26,45],[34,48,26,46],[34,49,26,47,"j"],[34,50,26,48],[34,51,26,49],[34,52,26,50],[34,53,26,51],[35,6,27,4],[35,10,27,8,"i"],[35,11,27,9],[35,14,27,12,"j"],[35,15,27,13],[36,6,28,4],[36,13,28,11],[36,15,28,13,"index"],[36,20,28,18],[36,21,28,19,"i"],[36,22,28,20],[36,23,28,21],[36,28,28,26,"lengths"],[36,35,28,33],[36,36,28,34,"i"],[36,37,28,35],[36,38,28,36],[36,40,28,38],[37,8,29,6],[37,12,29,10,"i"],[37,13,29,11],[37,18,29,16],[37,19,29,17],[37,21,29,19],[37,28,29,26,"reduce"],[37,34,29,32],[37,37,29,35,"product"],[37,44,29,42],[37,45,29,43,"map"],[37,48,29,46],[37,49,29,47,"reduce"],[37,55,29,53],[37,56,29,54],[37,59,29,57,"product"],[37,66,29,64],[38,8,30,6,"index"],[38,13,30,11],[38,14,30,12,"i"],[38,15,30,13],[38,17,30,15],[38,18,30,16],[38,21,30,19],[38,22,30,20],[39,6,31,4],[40,4,32,2],[41,2,33,0],[42,0,33,1],[42,3]],"functionMap":{"names":["length","<global>","empty","arrayify","reducer","<anonymous>","cross","index.map$argument_0"],"mappings":"AAA;CCE;ACE;CDE;AEE;CFE;AGE;SCC,2BD;CHC;eKE;2BCS,sBD;CLO"},"hasCjsExports":false},"type":"js/module"}]}