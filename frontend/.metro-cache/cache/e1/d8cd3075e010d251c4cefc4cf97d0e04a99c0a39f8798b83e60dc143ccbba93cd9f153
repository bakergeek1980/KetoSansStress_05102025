{"dependencies":[{"name":"d3-array","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"6/g0OmizGembrwGL3ynTnrgY1Es=","exportNames":["*"],"imports":1}},{"name":"./continuous.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":49,"index":96}}],"key":"SbgibKyskRec40eaH/MYNIXuEto=","exportNames":["*"],"imports":1}},{"name":"./init.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":97},"end":{"line":3,"column":36,"index":133}}],"key":"T/z5w4vOvjDtodMXYiKznwC3zLs=","exportNames":["*"],"imports":1}},{"name":"./tickFormat.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":134},"end":{"line":4,"column":41,"index":175}}],"key":"CRp+Odh7RI46E+DjOk09RA+Bl3I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return linear;\n    }\n  });\n  exports.linearish = linearish;\n  var _d3Array = require(_dependencyMap[0], \"d3-array\");\n  var _continuousJs = require(_dependencyMap[1], \"./continuous.js\");\n  var continuous = _interopDefault(_continuousJs);\n  var _initJs = require(_dependencyMap[2], \"./init.js\");\n  var _tickFormatJs = require(_dependencyMap[3], \"./tickFormat.js\");\n  var tickFormat = _interopDefault(_tickFormatJs);\n  function linearish(scale) {\n    var domain = scale.domain;\n    scale.ticks = function (count) {\n      var d = domain();\n      return (0, _d3Array.ticks)(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n    scale.tickFormat = function (count, specifier) {\n      var d = domain();\n      return (0, tickFormat.default)(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n    };\n    scale.nice = function (count) {\n      if (count == null) count = 10;\n      var d = domain();\n      var i0 = 0;\n      var i1 = d.length - 1;\n      var start = d[i0];\n      var stop = d[i1];\n      var prestep;\n      var step;\n      var maxIter = 10;\n      if (stop < start) {\n        step = start, start = stop, stop = step;\n        step = i0, i0 = i1, i1 = step;\n      }\n      while (maxIter-- > 0) {\n        step = (0, _d3Array.tickIncrement)(start, stop, count);\n        if (step === prestep) {\n          d[i0] = start;\n          d[i1] = stop;\n          return domain(d);\n        } else if (step > 0) {\n          start = Math.floor(start / step) * step;\n          stop = Math.ceil(stop / step) * step;\n        } else if (step < 0) {\n          start = Math.ceil(start * step) / step;\n          stop = Math.floor(stop * step) / step;\n        } else {\n          break;\n        }\n        prestep = step;\n      }\n      return scale;\n    };\n    return scale;\n  }\n  function linear() {\n    var scale = (0, continuous.default)();\n    scale.copy = function () {\n      return (0, _continuousJs.copy)(scale, linear());\n    };\n    _initJs.initRange.apply(scale, arguments);\n    return linearish(scale);\n  }\n});","lineCount":78,"map":[[12,2,60,15,"Object"],[12,8,60,15],[12,9,60,15,"defineProperty"],[12,23,60,15],[12,24,60,15,"exports"],[12,31,60,15],[13,4,60,15,"enumerable"],[13,14,60,15],[14,4,60,15,"get"],[14,7,60,15],[14,18,60,15,"get"],[14,19,60,15],[15,6,60,15],[15,13,60,15,"linear"],[15,19,60,15],[16,4,60,15],[17,2,60,15],[18,2,6,0,"exports"],[18,9,6,0],[18,10,6,0,"linearish"],[18,19,6,0],[18,22,6,0,"linearish"],[18,31,6,0],[19,2,1,0],[19,6,1,0,"_d3Array"],[19,14,1,0],[19,17,1,0,"require"],[19,24,1,0],[19,25,1,0,"_dependencyMap"],[19,39,1,0],[20,2,2,0],[20,6,2,0,"_continuousJs"],[20,19,2,0],[20,22,2,0,"require"],[20,29,2,0],[20,30,2,0,"_dependencyMap"],[20,44,2,0],[21,2,2,0],[21,6,2,0,"continuous"],[21,16,2,0],[21,19,2,0,"_interopDefault"],[21,34,2,0],[21,35,2,0,"_continuousJs"],[21,48,2,0],[22,2,3,0],[22,6,3,0,"_initJs"],[22,13,3,0],[22,16,3,0,"require"],[22,23,3,0],[22,24,3,0,"_dependencyMap"],[22,38,3,0],[23,2,4,0],[23,6,4,0,"_tickFormatJs"],[23,19,4,0],[23,22,4,0,"require"],[23,29,4,0],[23,30,4,0,"_dependencyMap"],[23,44,4,0],[24,2,4,0],[24,6,4,0,"tickFormat"],[24,16,4,0],[24,19,4,0,"_interopDefault"],[24,34,4,0],[24,35,4,0,"_tickFormatJs"],[24,48,4,0],[25,2,6,7],[25,11,6,16,"linearish"],[25,20,6,25,"linearish"],[25,21,6,26,"scale"],[25,26,6,31],[25,28,6,33],[26,4,7,2],[26,8,7,6,"domain"],[26,14,7,12],[26,17,7,15,"scale"],[26,22,7,20],[26,23,7,21,"domain"],[26,29,7,27],[27,4,9,2,"scale"],[27,9,9,7],[27,10,9,8,"ticks"],[27,15,9,13],[27,18,9,16],[27,28,9,25,"count"],[27,33,9,30],[27,35,9,32],[28,6,10,4],[28,10,10,8,"d"],[28,11,10,9],[28,14,10,12,"domain"],[28,20,10,18],[28,21,10,19],[28,22,10,20],[29,6,11,4],[29,13,11,11],[29,17,11,11,"ticks"],[29,25,11,16],[29,26,11,16,"ticks"],[29,31,11,16],[29,33,11,17,"d"],[29,34,11,18],[29,35,11,19],[29,36,11,20],[29,37,11,21],[29,39,11,23,"d"],[29,40,11,24],[29,41,11,25,"d"],[29,42,11,26],[29,43,11,27,"length"],[29,49,11,33],[29,52,11,36],[29,53,11,37],[29,54,11,38],[29,56,11,40,"count"],[29,61,11,45],[29,65,11,49],[29,69,11,53],[29,72,11,56],[29,74,11,58],[29,77,11,61,"count"],[29,82,11,66],[29,83,11,67],[30,4,12,2],[30,5,12,3],[31,4,14,2,"scale"],[31,9,14,7],[31,10,14,8,"tickFormat"],[31,20,14,18],[31,23,14,21],[31,33,14,30,"count"],[31,38,14,35],[31,40,14,37,"specifier"],[31,49,14,46],[31,51,14,48],[32,6,15,4],[32,10,15,8,"d"],[32,11,15,9],[32,14,15,12,"domain"],[32,20,15,18],[32,21,15,19],[32,22,15,20],[33,6,16,4],[33,13,16,11],[33,17,16,11,"tickFormat"],[33,27,16,21],[33,28,16,21,"default"],[33,35,16,21],[33,37,16,22,"d"],[33,38,16,23],[33,39,16,24],[33,40,16,25],[33,41,16,26],[33,43,16,28,"d"],[33,44,16,29],[33,45,16,30,"d"],[33,46,16,31],[33,47,16,32,"length"],[33,53,16,38],[33,56,16,41],[33,57,16,42],[33,58,16,43],[33,60,16,45,"count"],[33,65,16,50],[33,69,16,54],[33,73,16,58],[33,76,16,61],[33,78,16,63],[33,81,16,66,"count"],[33,86,16,71],[33,88,16,73,"specifier"],[33,97,16,82],[33,98,16,83],[34,4,17,2],[34,5,17,3],[35,4,19,2,"scale"],[35,9,19,7],[35,10,19,8,"nice"],[35,14,19,12],[35,17,19,15],[35,27,19,24,"count"],[35,32,19,29],[35,34,19,31],[36,6,20,4],[36,10,20,8,"count"],[36,15,20,13],[36,19,20,17],[36,23,20,21],[36,25,20,23,"count"],[36,30,20,28],[36,33,20,31],[36,35,20,33],[37,6,22,4],[37,10,22,8,"d"],[37,11,22,9],[37,14,22,12,"domain"],[37,20,22,18],[37,21,22,19],[37,22,22,20],[38,6,23,4],[38,10,23,8,"i0"],[38,12,23,10],[38,15,23,13],[38,16,23,14],[39,6,24,4],[39,10,24,8,"i1"],[39,12,24,10],[39,15,24,13,"d"],[39,16,24,14],[39,17,24,15,"length"],[39,23,24,21],[39,26,24,24],[39,27,24,25],[40,6,25,4],[40,10,25,8,"start"],[40,15,25,13],[40,18,25,16,"d"],[40,19,25,17],[40,20,25,18,"i0"],[40,22,25,20],[40,23,25,21],[41,6,26,4],[41,10,26,8,"stop"],[41,14,26,12],[41,17,26,15,"d"],[41,18,26,16],[41,19,26,17,"i1"],[41,21,26,19],[41,22,26,20],[42,6,27,4],[42,10,27,8,"prestep"],[42,17,27,15],[43,6,28,4],[43,10,28,8,"step"],[43,14,28,12],[44,6,29,4],[44,10,29,8,"maxIter"],[44,17,29,15],[44,20,29,18],[44,22,29,20],[45,6,31,4],[45,10,31,8,"stop"],[45,14,31,12],[45,17,31,15,"start"],[45,22,31,20],[45,24,31,22],[46,8,32,6,"step"],[46,12,32,10],[46,15,32,13,"start"],[46,20,32,18],[46,22,32,20,"start"],[46,27,32,25],[46,30,32,28,"stop"],[46,34,32,32],[46,36,32,34,"stop"],[46,40,32,38],[46,43,32,41,"step"],[46,47,32,45],[47,8,33,6,"step"],[47,12,33,10],[47,15,33,13,"i0"],[47,17,33,15],[47,19,33,17,"i0"],[47,21,33,19],[47,24,33,22,"i1"],[47,26,33,24],[47,28,33,26,"i1"],[47,30,33,28],[47,33,33,31,"step"],[47,37,33,35],[48,6,34,4],[49,6,36,4],[49,13,36,11,"maxIter"],[49,20,36,18],[49,22,36,20],[49,25,36,23],[49,26,36,24],[49,28,36,26],[50,8,37,6,"step"],[50,12,37,10],[50,15,37,13],[50,19,37,13,"tickIncrement"],[50,27,37,26],[50,28,37,26,"tickIncrement"],[50,41,37,26],[50,43,37,27,"start"],[50,48,37,32],[50,50,37,34,"stop"],[50,54,37,38],[50,56,37,40,"count"],[50,61,37,45],[50,62,37,46],[51,8,38,6],[51,12,38,10,"step"],[51,16,38,14],[51,21,38,19,"prestep"],[51,28,38,26],[51,30,38,28],[52,10,39,8,"d"],[52,11,39,9],[52,12,39,10,"i0"],[52,14,39,12],[52,15,39,13],[52,18,39,16,"start"],[52,23,39,21],[53,10,40,8,"d"],[53,11,40,9],[53,12,40,10,"i1"],[53,14,40,12],[53,15,40,13],[53,18,40,16,"stop"],[53,22,40,20],[54,10,41,8],[54,17,41,15,"domain"],[54,23,41,21],[54,24,41,22,"d"],[54,25,41,23],[54,26,41,24],[55,8,42,6],[55,9,42,7],[55,15,42,13],[55,19,42,17,"step"],[55,23,42,21],[55,26,42,24],[55,27,42,25],[55,29,42,27],[56,10,43,8,"start"],[56,15,43,13],[56,18,43,16,"Math"],[56,22,43,20],[56,23,43,21,"floor"],[56,28,43,26],[56,29,43,27,"start"],[56,34,43,32],[56,37,43,35,"step"],[56,41,43,39],[56,42,43,40],[56,45,43,43,"step"],[56,49,43,47],[57,10,44,8,"stop"],[57,14,44,12],[57,17,44,15,"Math"],[57,21,44,19],[57,22,44,20,"ceil"],[57,26,44,24],[57,27,44,25,"stop"],[57,31,44,29],[57,34,44,32,"step"],[57,38,44,36],[57,39,44,37],[57,42,44,40,"step"],[57,46,44,44],[58,8,45,6],[58,9,45,7],[58,15,45,13],[58,19,45,17,"step"],[58,23,45,21],[58,26,45,24],[58,27,45,25],[58,29,45,27],[59,10,46,8,"start"],[59,15,46,13],[59,18,46,16,"Math"],[59,22,46,20],[59,23,46,21,"ceil"],[59,27,46,25],[59,28,46,26,"start"],[59,33,46,31],[59,36,46,34,"step"],[59,40,46,38],[59,41,46,39],[59,44,46,42,"step"],[59,48,46,46],[60,10,47,8,"stop"],[60,14,47,12],[60,17,47,15,"Math"],[60,21,47,19],[60,22,47,20,"floor"],[60,27,47,25],[60,28,47,26,"stop"],[60,32,47,30],[60,35,47,33,"step"],[60,39,47,37],[60,40,47,38],[60,43,47,41,"step"],[60,47,47,45],[61,8,48,6],[61,9,48,7],[61,15,48,13],[62,10,49,8],[63,8,50,6],[64,8,51,6,"prestep"],[64,15,51,13],[64,18,51,16,"step"],[64,22,51,20],[65,6,52,4],[66,6,54,4],[66,13,54,11,"scale"],[66,18,54,16],[67,4,55,2],[67,5,55,3],[68,4,57,2],[68,11,57,9,"scale"],[68,16,57,14],[69,2,58,0],[70,2,60,15],[70,11,60,24,"linear"],[70,17,60,30,"linear"],[70,18,60,30],[70,20,60,33],[71,4,61,2],[71,8,61,6,"scale"],[71,13,61,11],[71,16,61,14],[71,20,61,14,"continuous"],[71,30,61,24],[71,31,61,24,"default"],[71,38,61,24],[71,40,61,25],[71,41,61,26],[72,4,63,2,"scale"],[72,9,63,7],[72,10,63,8,"copy"],[72,14,63,12],[72,17,63,15],[72,29,63,26],[73,6,64,4],[73,13,64,11],[73,17,64,11,"copy"],[73,30,64,15],[73,31,64,15,"copy"],[73,35,64,15],[73,37,64,16,"scale"],[73,42,64,21],[73,44,64,23,"linear"],[73,50,64,29],[73,51,64,30],[73,52,64,31],[73,53,64,32],[74,4,65,2],[74,5,65,3],[75,4,67,2,"initRange"],[75,11,67,11],[75,12,67,11,"initRange"],[75,21,67,11],[75,22,67,12,"apply"],[75,27,67,17],[75,28,67,18,"scale"],[75,33,67,23],[75,35,67,25,"arguments"],[75,44,67,34],[75,45,67,35],[76,4,69,2],[76,11,69,9,"linearish"],[76,20,69,18],[76,21,69,19,"scale"],[76,26,69,24],[76,27,69,25],[77,2,70,0],[78,0,70,1],[78,3]],"functionMap":{"names":["<global>","linearish","scale.ticks","scale.tickFormat","scale.nice","linear","scale.copy"],"mappings":"AAA;OCK;gBCG;GDG;qBEE;GFG;eGE;GHoC;CDG;eKE;eCG;GDE;CLK"},"hasCjsExports":false},"type":"js/module"}]}