{"dependencies":[{"name":"./linear.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"suKeCidbwZn9gGj5VSO9qUqIGq8=","exportNames":["*"],"imports":1}},{"name":"./continuous.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":39},"end":{"line":2,"column":60,"index":99}}],"key":"SbgibKyskRec40eaH/MYNIXuEto=","exportNames":["*"],"imports":1}},{"name":"./init.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":100},"end":{"line":3,"column":36,"index":136}}],"key":"T/z5w4vOvjDtodMXYiKznwC3zLs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return pow;\n    }\n  });\n  exports.powish = powish;\n  exports.sqrt = sqrt;\n  var _linearJs = require(_dependencyMap[0], \"./linear.js\");\n  var _continuousJs = require(_dependencyMap[1], \"./continuous.js\");\n  var _initJs = require(_dependencyMap[2], \"./init.js\");\n  function transformPow(exponent) {\n    return function (x) {\n      return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n    };\n  }\n  function transformSqrt(x) {\n    return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n  }\n  function transformSquare(x) {\n    return x < 0 ? -x * x : x * x;\n  }\n  function powish(transform) {\n    var scale = transform(_continuousJs.identity, _continuousJs.identity),\n      exponent = 1;\n    function rescale() {\n      return exponent === 1 ? transform(_continuousJs.identity, _continuousJs.identity) : exponent === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent), transformPow(1 / exponent));\n    }\n    scale.exponent = function (_) {\n      return arguments.length ? (exponent = +_, rescale()) : exponent;\n    };\n    return (0, _linearJs.linearish)(scale);\n  }\n  function pow() {\n    var scale = powish((0, _continuousJs.transformer)());\n    scale.copy = function () {\n      return (0, _continuousJs.copy)(scale, pow()).exponent(scale.exponent());\n    };\n    _initJs.initRange.apply(scale, arguments);\n    return scale;\n  }\n  function sqrt() {\n    return pow.apply(null, arguments).exponent(0.5);\n  }\n});","lineCount":51,"map":[[7,2,36,15,"Object"],[7,8,36,15],[7,9,36,15,"defineProperty"],[7,23,36,15],[7,24,36,15,"exports"],[7,31,36,15],[8,4,36,15,"enumerable"],[8,14,36,15],[9,4,36,15,"get"],[9,7,36,15],[9,18,36,15,"get"],[9,19,36,15],[10,6,36,15],[10,13,36,15,"pow"],[10,16,36,15],[11,4,36,15],[12,2,36,15],[13,2,19,0,"exports"],[13,9,19,0],[13,10,19,0,"powish"],[13,16,19,0],[13,19,19,0,"powish"],[13,25,19,0],[14,2,48,0,"exports"],[14,9,48,0],[14,10,48,0,"sqrt"],[14,14,48,0],[14,17,48,0,"sqrt"],[14,21,48,0],[15,2,1,0],[15,6,1,0,"_linearJs"],[15,15,1,0],[15,18,1,0,"require"],[15,25,1,0],[15,26,1,0,"_dependencyMap"],[15,40,1,0],[16,2,2,0],[16,6,2,0,"_continuousJs"],[16,19,2,0],[16,22,2,0,"require"],[16,29,2,0],[16,30,2,0,"_dependencyMap"],[16,44,2,0],[17,2,3,0],[17,6,3,0,"_initJs"],[17,13,3,0],[17,16,3,0,"require"],[17,23,3,0],[17,24,3,0,"_dependencyMap"],[17,38,3,0],[18,2,5,0],[18,11,5,9,"transformPow"],[18,23,5,21,"transformPow"],[18,24,5,22,"exponent"],[18,32,5,30],[18,34,5,32],[19,4,6,2],[19,11,6,9],[19,21,6,18,"x"],[19,22,6,19],[19,24,6,21],[20,6,7,4],[20,13,7,11,"x"],[20,14,7,12],[20,17,7,15],[20,18,7,16],[20,21,7,19],[20,22,7,20,"Math"],[20,26,7,24],[20,27,7,25,"pow"],[20,30,7,28],[20,31,7,29],[20,32,7,30,"x"],[20,33,7,31],[20,35,7,33,"exponent"],[20,43,7,41],[20,44,7,42],[20,47,7,45,"Math"],[20,51,7,49],[20,52,7,50,"pow"],[20,55,7,53],[20,56,7,54,"x"],[20,57,7,55],[20,59,7,57,"exponent"],[20,67,7,65],[20,68,7,66],[21,4,8,2],[21,5,8,3],[22,2,9,0],[23,2,11,0],[23,11,11,9,"transformSqrt"],[23,24,11,22,"transformSqrt"],[23,25,11,23,"x"],[23,26,11,24],[23,28,11,26],[24,4,12,2],[24,11,12,9,"x"],[24,12,12,10],[24,15,12,13],[24,16,12,14],[24,19,12,17],[24,20,12,18,"Math"],[24,24,12,22],[24,25,12,23,"sqrt"],[24,29,12,27],[24,30,12,28],[24,31,12,29,"x"],[24,32,12,30],[24,33,12,31],[24,36,12,34,"Math"],[24,40,12,38],[24,41,12,39,"sqrt"],[24,45,12,43],[24,46,12,44,"x"],[24,47,12,45],[24,48,12,46],[25,2,13,0],[26,2,15,0],[26,11,15,9,"transformSquare"],[26,26,15,24,"transformSquare"],[26,27,15,25,"x"],[26,28,15,26],[26,30,15,28],[27,4,16,2],[27,11,16,9,"x"],[27,12,16,10],[27,15,16,13],[27,16,16,14],[27,19,16,17],[27,20,16,18,"x"],[27,21,16,19],[27,24,16,22,"x"],[27,25,16,23],[27,28,16,26,"x"],[27,29,16,27],[27,32,16,30,"x"],[27,33,16,31],[28,2,17,0],[29,2,19,7],[29,11,19,16,"powish"],[29,17,19,22,"powish"],[29,18,19,23,"transform"],[29,27,19,32],[29,29,19,34],[30,4,20,2],[30,8,20,6,"scale"],[30,13,20,11],[30,16,20,14,"transform"],[30,25,20,23],[30,26,20,24,"identity"],[30,39,20,32],[30,40,20,32,"identity"],[30,48,20,32],[30,50,20,34,"identity"],[30,63,20,42],[30,64,20,42,"identity"],[30,72,20,42],[30,73,20,43],[31,6,21,6,"exponent"],[31,14,21,14],[31,17,21,17],[31,18,21,18],[32,4,23,2],[32,13,23,11,"rescale"],[32,20,23,18,"rescale"],[32,21,23,18],[32,23,23,21],[33,6,24,4],[33,13,24,11,"exponent"],[33,21,24,19],[33,26,24,24],[33,27,24,25],[33,30,24,28,"transform"],[33,39,24,37],[33,40,24,38,"identity"],[33,53,24,46],[33,54,24,46,"identity"],[33,62,24,46],[33,64,24,48,"identity"],[33,77,24,56],[33,78,24,56,"identity"],[33,86,24,56],[33,87,24,57],[33,90,25,10,"exponent"],[33,98,25,18],[33,103,25,23],[33,106,25,26],[33,109,25,29,"transform"],[33,118,25,38],[33,119,25,39,"transformSqrt"],[33,132,25,52],[33,134,25,54,"transformSquare"],[33,149,25,69],[33,150,25,70],[33,153,26,10,"transform"],[33,162,26,19],[33,163,26,20,"transformPow"],[33,175,26,32],[33,176,26,33,"exponent"],[33,184,26,41],[33,185,26,42],[33,187,26,44,"transformPow"],[33,199,26,56],[33,200,26,57],[33,201,26,58],[33,204,26,61,"exponent"],[33,212,26,69],[33,213,26,70],[33,214,26,71],[34,4,27,2],[35,4,29,2,"scale"],[35,9,29,7],[35,10,29,8,"exponent"],[35,18,29,16],[35,21,29,19],[35,31,29,28,"_"],[35,32,29,29],[35,34,29,31],[36,6,30,4],[36,13,30,11,"arguments"],[36,22,30,20],[36,23,30,21,"length"],[36,29,30,27],[36,33,30,31,"exponent"],[36,41,30,39],[36,44,30,42],[36,45,30,43,"_"],[36,46,30,44],[36,48,30,46,"rescale"],[36,55,30,53],[36,56,30,54],[36,57,30,55],[36,61,30,59,"exponent"],[36,69,30,67],[37,4,31,2],[37,5,31,3],[38,4,33,2],[38,11,33,9],[38,15,33,9,"linearish"],[38,24,33,18],[38,25,33,18,"linearish"],[38,34,33,18],[38,36,33,19,"scale"],[38,41,33,24],[38,42,33,25],[39,2,34,0],[40,2,36,15],[40,11,36,24,"pow"],[40,14,36,27,"pow"],[40,15,36,27],[40,17,36,30],[41,4,37,2],[41,8,37,6,"scale"],[41,13,37,11],[41,16,37,14,"powish"],[41,22,37,20],[41,23,37,21],[41,27,37,21,"transformer"],[41,40,37,32],[41,41,37,32,"transformer"],[41,52,37,32],[41,54,37,33],[41,55,37,34],[41,56,37,35],[42,4,39,2,"scale"],[42,9,39,7],[42,10,39,8,"copy"],[42,14,39,12],[42,17,39,15],[42,29,39,26],[43,6,40,4],[43,13,40,11],[43,17,40,11,"copy"],[43,30,40,15],[43,31,40,15,"copy"],[43,35,40,15],[43,37,40,16,"scale"],[43,42,40,21],[43,44,40,23,"pow"],[43,47,40,26],[43,48,40,27],[43,49,40,28],[43,50,40,29],[43,51,40,30,"exponent"],[43,59,40,38],[43,60,40,39,"scale"],[43,65,40,44],[43,66,40,45,"exponent"],[43,74,40,53],[43,75,40,54],[43,76,40,55],[43,77,40,56],[44,4,41,2],[44,5,41,3],[45,4,43,2,"initRange"],[45,11,43,11],[45,12,43,11,"initRange"],[45,21,43,11],[45,22,43,12,"apply"],[45,27,43,17],[45,28,43,18,"scale"],[45,33,43,23],[45,35,43,25,"arguments"],[45,44,43,34],[45,45,43,35],[46,4,45,2],[46,11,45,9,"scale"],[46,16,45,14],[47,2,46,0],[48,2,48,7],[48,11,48,16,"sqrt"],[48,15,48,20,"sqrt"],[48,16,48,20],[48,18,48,23],[49,4,49,2],[49,11,49,9,"pow"],[49,14,49,12],[49,15,49,13,"apply"],[49,20,49,18],[49,21,49,19],[49,25,49,23],[49,27,49,25,"arguments"],[49,36,49,34],[49,37,49,35],[49,38,49,36,"exponent"],[49,46,49,44],[49,47,49,45],[49,50,49,48],[49,51,49,49],[50,2,50,0],[51,0,50,1],[51,3]],"functionMap":{"names":["<global>","transformPow","<anonymous>","transformSqrt","transformSquare","powish","rescale","scale.exponent","pow","scale.copy","sqrt"],"mappings":"AAA;ACI;SCC;GDE;CDC;AGE;CHE;AIE;CJE;OKE;ECI;GDI;mBEE;GFE;CLG;eQE;eCG;GDE;CRK;OUE;CVE"},"hasCjsExports":false},"type":"js/module"}]}